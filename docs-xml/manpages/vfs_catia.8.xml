<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE refentry PUBLIC "-//Samba-Team//DTD DocBook V4.2-Based Variant V1.0//EN" "http://www.samba.org/samba/DTD/samba-doc">
<refentry id="vfs_catia.8">

<refmeta>
	<refentrytitle>vfs_catia</refentrytitle>
	<manvolnum>8</manvolnum>
	<refmiscinfo class="source">Samba</refmiscinfo>
	<refmiscinfo class="manual">システム管理ツール</refmiscinfo>
	<refmiscinfo class="version">4.0</refmiscinfo>
</refmeta>


<refnamediv>
	<refname>vfs_catia</refname>
	<refpurpose>Catiaファイルシステムで無効な文字を変換する</refpurpose>
</refnamediv>

<refsynopsisdiv>
	<cmdsynopsis>
		<command>vfs objects = catia</command>
	</cmdsynopsis>
</refsynopsisdiv>

<refsect1>
	<title>説明</title>

	<para>このVFSモジュールは
	<citerefentry><refentrytitle>samba</refentrytitle>
	<manvolnum>7</manvolnum></citerefentry>システムの一部である.</para>

	<para>Catia CADパッケージはCIFSファイルシステムで使用できない文字を使用して
	ファイルを作成する。
	<command>vfs_catia</command> VFS モジュールはCIFSクライアントが共有可能になるように
	文字マッピングを行う。
	</para>

	<para>このモジュールはスタック可能である。</para>

	<para>
	  パラメータ "catia:mappings" は以下で説明するように、文字単位の
	  マッピングを指定する。
	</para>

</refsect1>

<refsect1>
        <title>オプション</title>
        <variablelist>
               <varlistentry>
               <term>catia:mappings = SERVER_HEX_CHAR:CLIENT_HEX_CHAR
               </term>
               <listitem>
               <para>SERVER_HEX_CHARは、Sambaのサーバ側にあるファイル名中に
	       含まれている、0xという接頭辞が付いた16進文字コードで、
	       CIFSクライアントに対してCLIENT_HEX_CHARにマップされる。
	       </para>
               <para>同じマッピングは、反対方向でも起きる。複数の文字
	       マッピングはカンマによって分離される。</para>
               </listitem>
               </varlistentry>
       </variablelist>
</refsect1>


<refsect1>
	<title>使用例</title>

       <para>[CAD]共有中のファイルにある、サーバサイドの引用符(")を
       クライアントサイドのdiaeresis文字(&#x00a8;)にマップする:</para>


<programlisting>
        <smbconfsection name="[CAD]"/>
	<smbconfoption name="path">/data/cad</smbconfoption>
	<smbconfoption name="vfs objects">catia</smbconfoption>
	<smbconfoption name="catia:mappings">0x22:0xa8</smbconfoption>
</programlisting>

        <para>共通的なCatiaファイル名マッピングの包括的な実行:</para>
<programlisting>
        <smbconfsection name="[CAD]"/>
	<smbconfoption name="path">/data/cad</smbconfoption>
	<smbconfoption name="vfs objects">catia</smbconfoption>
	<smbconfoption name="catia:mappings">0x22:0xa8,0x2a:0xa4,0x2f:0xf8,0x3a:0xf7,0x3c:0xab,0x3e:0xbb,0x3f:0xbf,0x5c:0xff,0x7c:0xa6</smbconfoption>
</programlisting>

        <para>変換されるサーバサイドのファイル名(パスの区切り "/" はここでは使われていない事に注意):
	</para>
	<para>a\a:a*a?a"a&lt;a&gt;a|a</para>

	<para>結果としてクライアントで表示されるファイル名:</para>

	<para>a&#x00ff;a&#x00f7;a&#x00a4;a&#x00bf;a&#x00a8;a&#x00ab;a&#x00bb;a&#x00a6;a
	</para>
</refsect1>

<refsect1>
       <title>注意</title>

       <para>一意と存在するファイル名を得るため、文字列のマッピングは双方向で動く
       必要がある(サーバ -&gt; クライアント と クライアント -&gt; サーバ)。
       </para>

	<para>動かない例:</para>

<programlisting>
        <smbconfsection name="[CAD]"/>
	<smbconfoption name="path">/data/cad</smbconfoption>
	<smbconfoption name="vfs objects">catia</smbconfoption>
	<smbconfoption name="catia:mappings">0x3a:0x5f</smbconfoption>
</programlisting>

         <para>ここで、コロン ":" は、下線 "_" にマップされる</para>
	 <para>サーバ側の のファイル名 "a:should_work" を考えると、これは、
	 "a_should_work" という クライアント用のファイル名に問題なく変換される。</para>
	 <para>しかし、クライアントの、"a_should_work" というファイル名をサーバ向けに、
	 逆方向マッピングしようとすると、結果が、"a:should:work" となってしまい、たとえば
	 "file not found" が返ってくることになる。
	 </para>

</refsect1>

<refsect1>
	<title>バージョン</title>

	<para>このマニュアルはSambaシステムバージョン3.5.0 から 4.0.6 まですべてに対応している。
	</para>
</refsect1>

<refsect1>
	<title>著者</title>

	<para>オリジナルの Samba ソフトウェアと関連するユーティリティは、Andrew
	Tridgell によって作成された。現在 Samba は Samba Team に
	よって、Linuxカーネルの開発と同様のオープンソースプロジェクト
	として開発が行なわれている。</para>
	<para>新しいバージョンは、Guenter Kukkukk kukks@samba.org によって書かれた。</para>

</refsect1>
<refsect1>
	<title>日本語訳</title>
	<para>このマニュアルページは、Samba 4.1.0 - 4.1.12 に対応する。</para>
    <para>このドキュメントの翻訳は
		<itemizedlist>
			<listitem><para>平田祥司 (shouji@microft.co.jp)</para></listitem>
			<listitem><para>太田俊哉 (ribbon@samba.gr.jp)</para></listitem>
		</itemizedlist>
        によって行なわれた。</para>
</refsect1>

</refentry>
