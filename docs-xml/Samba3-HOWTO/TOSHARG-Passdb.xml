<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//Samba-Team//DTD DocBook V4.2-Based Variant V1.0//EN" "http://www.samba.org/samba/DTD/samba-doc">
<chapter id="passdb">
<chapterinfo>
	&author.jelmer;
	&author.jht;
	&author.jerry;
	&author.jeremy;
	<author>&person.gd;<contrib>LDAP updates</contrib></author>
	<author>
		<firstname>Olivier (lem)</firstname><surname>Lemaire</surname>
		<affiliation>
			<orgname>IDEALX</orgname>
			<address><email>olem@IDEALX.org</email></address>
		</affiliation>
	</author>

	<pubdate>May 24, 2003</pubdate>
</chapterinfo>
<title>アカウント情報データベース</title>

<para>
<indexterm><primary>アカウントバックエンド</primary></indexterm>
<indexterm><primary>パスワードバックエンド</primary></indexterm>
<indexterm><primary>拡張性</primary></indexterm>
<indexterm><primary>ADS</primary></indexterm>
以前のSamba3リリースでは複数のアカウント情報バックエンドを同時に動作させることが
できた。この機能はSamba3.0.23からなくなった。Samba3.0.23からは、passdbバックエンド
は1つのみ指定できる。
</para>

<para>
<indexterm><primary>passdb backend</primary></indexterm>
<indexterm><primary>smbpasswd</primary></indexterm>
<indexterm><primary>tdbsam</primary></indexterm>
<indexterm><primary>ldapsam</primary></indexterm>
<indexterm><primary>LDAP</primary></indexterm>
<indexterm><primary>単一のリポジトリ</primary></indexterm>
3つのpassdbバックエンドがSambaチームで完全なメンテナンスが行われており、それは以下である:
<literal>smbpasswd</literal> (旧式)、<literal>tdbsam</literal>(tdbベースのバイナリファイル
形式)と<literal>ldapsam</literal>(LDAP)。もちろん、<literal>ldapsam</literal>バックエンド
のみが、POSIX(UNIX)とSambaのユーザとグループアカウント情報を単一のリポジトリに格納できる。
<literal>smbpasswd</literal>と<literal>tdbsam</literal>バックエンドはSambaユーザ
アカウントのみ格納する。
</para>

<para>
厳密な意味で、3つのアカウントストレージとアクセスシステムがサポートされている。それらの
1つは旧式である(smbpasswd)。すべての簡単なシステムには <literal>tdbsam</literal>方式
を使用することを推奨する。<literal>ldapsam</literal>はもっと大規模か、複雑なネット
ワークで使用すること。
</para>

<para>
<indexterm><primary>passdb backend</primary></indexterm>
<indexterm><primary>account格納の方式</primary></indexterm>
<indexterm><primary>account storage system</primary></indexterm>
<indexterm><primary>ユーザと信頼アカウント</primary></indexterm>
<indexterm><primary>マシン信頼アカウント</primary></indexterm>
<indexterm><primary>コンピュータアカウント</primary></indexterm>
<indexterm><primary>ドメイン間信頼アカウント</primary></indexterm>
厳格かつ文字通りの意味で、passdbバックエンドはアカウント格納メカニズム(あるいは方法)
のみである。技術の選択はミスリードの可能性があるが、言い回しの選択で困っている。
この章では、ユーザと信頼アカウントにフォーカスをあてたアカウント格納システムの
本質について記述する。信頼アカウントは2つの形式があり、それはマシン信頼アカウント
(コンピュータアカウント)とドメイン間信頼アカウントである。それらはユーザのような
エントリとして扱われる。
</para>

<sect1>
<title>機能と利便性</title>

<para>
Samba-3 は Samba-2.2.x の以下の機能について完全な下位互換性を提供する:
<indexterm><primary>SAM backend</primary><secondary>smbpasswd</secondary></indexterm>
<indexterm><primary>SAM backend</primary><secondary>ldapsam_compat</secondary></indexterm>
<indexterm><primary>暗号化パスワード</primary></indexterm>
</para>

<sect2>
	<title>下位互換性のあるバックエンド</title>

<variablelist>
	<varlistentry><term>平文</term>
		<listitem>
			<para>
<indexterm><primary>平文</primary></indexterm>
<indexterm><primary>平文認証</primary></indexterm>
<indexterm><primary>/etc/passwd</primary></indexterm>
<indexterm><primary>/etc/shadow</primary></indexterm>
<indexterm><primary>PAM</primary></indexterm>
		これは全く持ってバックエンドではないが、単純化のためにここに表示する。
		Sambaは伝統的なUNIX/Linuxの<filename>/etc/passwd</filename>と
                <filename>/etc/shadow</filename>形式のサブシムに平文認証要求を渡す
		ように設定できる。Pluggable Authentication Modules (PAM) サポートの
		あるシステム上では、 全てのPAMモジュールがサポートされる。動作は、
		Samba-2.2.x の場合と全く同様で、Microsoft Windowsクライアントにより
		課されるプロトコルの制約も同様に適用される。平文パスワードの使用に
		関する制約に関する詳細情報は、
		<link linkend="passdbtech">技術情報の項</link>を参照のこと。
			</para>
		</listitem>
	</varlistentry>

	<varlistentry><term>smbpasswd</term>
		<listitem>
			<para>
<indexterm><primary>smbpasswd</primary></indexterm>
<indexterm><primary>LanManパスワード</primary></indexterm>
<indexterm><primary>NT方式による暗号化パスワード</primary></indexterm>
<indexterm><primary>SAM</primary></indexterm>
		このオプションは、Microsoft Windows LanMan と NT の暗号化パスワード
		及び一部のアカウント情報を格納するフィールドを含む平文ASCII(テキスト)
		レイアウトを維持する<filename>smbpasswd</filename>ファイルの継続的
		使用を可能にする。この種のパスワードバックエンドは、Microsoft 
		Windows NT4/200xサーバと包括的な相互運用を行うために必要な拡張
		コントロールを提供するための、Microsoft Windows NT/200x SAM
		(Security Account Manager)情報を一切格納しない。
			</para>

			<para>
		このバックエンドは、Samba のより古いバージョンとの下位互換性のために
		のみ使用するべきである。将来のリリースでは、切り捨てられていくかもしれない。
			</para>
		</listitem>
	</varlistentry>

	<varlistentry><term>ldapsam_compat (Samba-2.2 LDAP互換)</term>
		<listitem>
			<para>
<indexterm><primary>ldapsam_compat</primary></indexterm>
<indexterm><primary>Samba-2.2.x LDAPスキーマ</primary></indexterm>
<indexterm><primary>OpenLDAPバックエンド</primary></indexterm>
		これは、Samba-2.2.x LDAP スキーマ拡張を使用する、既存のOpenLDAP
		バックエンドとの継続的運用を可能にするパスワードバックエンドの
		オプションである。このオプションはマイグレーションツールとして
		提供されているが、この時点で強制的にマイグレーションする意味はない。
		このツールは最終的には切り捨てられることになる。
			</para>
		</listitem>
	</varlistentry>
</variablelist>

</sect2>

<sect2>
<title>新しいアカウント格納システム</title>

<para>
Samba-3では多数の新しいパスワードバックエンド機能が導入された。
<indexterm><primary>SAM backend</primary><secondary>tdbsam</secondary></indexterm>
<indexterm><primary>SAM backend</primary><secondary>ldapsam</secondary></indexterm>
</para>

<variablelist>
	<varlistentry><term>tdbsam</term>
		<listitem>
			<para>
<indexterm><primary>rich database backend</primary></indexterm>
<indexterm><primary>PDC</primary></indexterm>
<indexterm><primary>BDC</primary></indexterm>
		このバックエンドは、ローカルサーバに、リッチなデータベースバックエンドを
		提供する。このバックエンドは、複数のドメインコントローラ（つまり、PDC+
		一つ以上のBDCをインストールしている場合には適さない。
			</para>

			<para>
<indexterm><primary>extended SAM</primary></indexterm>
<indexterm><primary>TDB</primary></indexterm>
<indexterm><primary>binary format TDB</primary></indexterm>
<indexterm><primary>trivial database</primary></indexterm>
<indexterm><primary>system access controls</primary></indexterm>
<indexterm><primary>MS Windows NT4/200x</primary></indexterm>
		<emphasis>tdbsam</emphasis>パスワードバックエンドは古い
		<emphasis>smbpasswd</emphasis>情報のほかに、拡張された
		Microsoft Windows NT/200xのSAM情報をバイナリ形式のTDB(トリビアルデータベース)
		ファイルに格納する。拡張情報を含むことで、Samba-3が、Microsoft Windows NT4/200x
		ベースのシステムと同様のアカウントアクセス及びシステムアクセス制御を実現する
		ことを可能にする。
			</para>

			<para>
<indexterm><primary>単純な操作</primary></indexterm>
<indexterm><primary>OpenLDAP</primary></indexterm>
<indexterm><primary>ADS</primary></indexterm>
		<emphasis>tdbsam</emphasis>が内包する能力は、OpenLDAPを稼動する伴う
		複雑性と、そのオーバヘッドを発生させずに、シンプルななサイト運用を
		可能にしたいというユーザからの要求にに直接応えるためである。これは、
		ユーザー数250未満のサイトにのみ推奨する。これより大規模のサイト、
		または実装では、OpenLDAP の使用またはActive Directoryへの統合を強く
		推奨する。
			</para>
		</listitem>
	</varlistentry>

	<varlistentry><term>ldapsam</term>
		<listitem>
			<para>
<indexterm><primary>rich directory backend</primary></indexterm>
<indexterm><primary>分散アカウント</primary></indexterm>
		これは、分散アカウントを導入している場合に、リッチなディレクトリバックエンド
		を提供する。
			</para>

			<para>
<indexterm><primary>LDAP</primary></indexterm>
<indexterm><primary>OpenLDAP</primary></indexterm>
<indexterm><primary>Sambaスキーマ</primary></indexterm>
<indexterm><primary>スキーマファイル</primary></indexterm>
<indexterm><primary>examples/LDAP</primary></indexterm>
		Samba-3ではLDAP用拡張の実装が新しくなり、これにより新しい形式のSambaスキーマを
		持つOpenLDAPの設定を必要とする。新しい形式のスキーマファイルは、Samba
		ディストリビューションの
		<filename class="directory">examples/LDAP</filename>のディレクトリにある。
			</para>

			<para>
<indexterm><primary>expands control abilities</primary></indexterm>
<indexterm><primary>プロファイル</primary></indexterm>
<indexterm><primary>ホームディレクトリ</primary></indexterm>
<indexterm><primary>アカウントアクセス制御</primary></indexterm>
<indexterm><primary>拡張性の向上</primary></indexterm>
		新しいLDAPの実装は、Sambaの過去のバージョンで可能だったコントロール能力を
		著しく向上するものである。このバージョンでは、<quote>ユーザーごとの</quote>
		プロファイル設定、ホームディレクトリ、アカウントアクセス制御、その他
		多くの設定が可能になった。企業サイトでは、機能性と拡張性の向上要求に、
		Sambaチームがしっかり耳を傾けたと いうことが理解できるはずである。
			</para>
		</listitem>
	</varlistentry>

</variablelist>

</sect2>

</sect1>

<sect1 id="passdbtech">
	<title>技術情報</title>

	<para>
<indexterm><primary>平文パスワード</primary></indexterm>
<indexterm><primary>暗号化パスワード</primary></indexterm>
	古いWindowsクライアントは、平文パスワードを送信する。Sambaはこれらの
	パスワードを暗号化し、UNIXユーザデータベースに格納されているハッシュと
	比較することにより、確認することができる。
	</para>

	<para>
<indexterm><primary>暗号化パスワード</primary></indexterm>
<indexterm><primary>LanMan</primary></indexterm>
<indexterm><primary>平文パスワード</primary></indexterm>
<indexterm><primary>レジストリ</primary></indexterm>
	より新しいWindowsクライアントは、平文パスワードのかわりに、暗号化された
	パスワード(Lanman及びNTハッシュと呼ばれるもの)を送信する。最新のクライアントは、
	暗号化されたパスワードのみを送信し、クライアントのレジストリが改変されていない
	限り、平文パスワードを送信することを拒否する。
	</para>

	<para>
<indexterm><primary>UNIX風の暗号化パスワード</primary></indexterm>
<indexterm><primary>変換</primary></indexterm>
	Sambaはなぜ単純にUNIXパスワードデータベースを使うことが出来ないかという質問は
	多くの人から聞く。Windowsは、パスワードに対してそれ固有の暗号化形式を要求する。
	WindowsのパスワードはUNIX形式の暗号化パスワードに変換できない。そのため、標準
	UNIXユーザデータベースを使うことが出来ず、Lanman ハッシュとNTハッシュは別の所に
	格納しなければならない。
	</para>

	<para>
<indexterm><primary>異なる暗号化パスワード方式</primary></indexterm>
<indexterm><primary>プロファイル</primary></indexterm>
<indexterm><primary>ワークステーション</primary></indexterm>
<indexterm><primary>tdbsam</primary></indexterm>
	パスワードの暗号化方式が異なるのみならず、WindowsはUNIXユーザデータベースには
	格納されないような各ユーザに関する特定のデータを格納する。例えば、ユーザが
	ログインする可能性のあるワークステーション、ユーザのプロファイルが格納されて
	いる場所等々である。Sambaは<smbconfoption name="passdb backend"/>を使用して
	この情報を取り出し、格納する。 通常、使用できるバックエンドは、LDAP、tdbsum
	および平文ファイルである。<smbconfoption name="passdb backend"/>のパラメーター
	に関する詳細は、&smb.conf;のマニュアルページを参照のこと。
	</para>


	<figure id="idmap-sid2uid">
		<title>IDMAP: SIDのUIDへの解決</title>
		<imagefile scale="40">idmap-sid2uid</imagefile>
	</figure>

	<para>
	<indexterm><primary>SID</primary></indexterm>
<indexterm><primary>UID</primary></indexterm>
<indexterm><primary>SID</primary></indexterm>
	SIDのUIDへの解決は、Samba の適正運用の根幹を成す。以下の両例で、winbinddが
	稼動していないか、あるいは、接続できない状況のとき、ローカルのSID/UID解決
	のみが可能である。<link linkend="idmap-sid2uid">SIDのUIDへの解決</link>
	および<link linkend="idmap-uid2sid">UIDのSIDへの解決</link>の図を参照のこと。
	</para>

	<figure id="idmap-uid2sid">
		<title>IDMAP: SIDのUIDへの解決</title>
		<imagefile scale="50">idmap-uid2sid</imagefile>
	</figure>

	<sect2>
	<title>セキュリティに関する重要な注意事項</title>

		<para>
<indexterm><primary>SMBパスワードの暗号化</primary></indexterm>
<indexterm><primary>平文パスワード</primary></indexterm>
<indexterm><primary>hashed password equivalent</primary></indexterm>
<indexterm><primary>LDAP</primary></indexterm>
<indexterm><primary>secret</primary></indexterm>
	UNIXとSMBのパスワード暗号化のテクニックは、一見、類似しているように見える。しかし、
	この類似性は、皮一枚だけの表面的なものである。。UNIXのスキームでは、通常 ログインの際に、
	平文パスワードをネットワークを通して送信します。これは悪い方法である。SMBの暗号化
	スキームは、ネットワークを通して平文パスワードを送信することは絶対にないが、ディスク上に
	16バイトのハッシュ値を格納する。これも悪い方法である。なぜか。それは、16バイトのハッシュ
	値は、<quote>パスワードと同等</quote>だからである。ユーザのパスワードをハッシュ値から
	導き出すことはできないが、クライアントに手を加えれば、サーバにアクセスするために使える
	可能性がある。これは、侵入者の側にかなりの技術的知識があることを前提としてるが、それでも
	可能であることは確かである。従って、(smbpasswdファイル、 LDAP)いずれのパスワードデータ
	ベースバックエンドを使用していても、そこに格納されたデータが、全ユーザの平文パスワードを
	持っているかのように、慎重に取り扱わなければならない。これらのデータベースの内容は極秘とし、
	ファイルは、適切に保護されていなければならない。
		</para>

		<para>
<indexterm><primary>パスワードスキーム</primary></indexterm>
<indexterm><primary>平文パスワード</primary></indexterm>
<indexterm><primary>互換</primary></indexterm>
	理想的には、ネットワーク上でもディスク上でも平文パスワードを持ったり送信したり
	しないようなパスワードのスキームが欲しいところである。残念ながら、Sambaは他の
	SMBシステム(Windows NT、Windows for Workgroups、Windows 9x/Me)との互換性を
	確保しなければならないという要件のために、これは実現できない。
		</para>

		<para>
<indexterm><primary>暗号化パスワード</primary></indexterm>
<indexterm><primary>平文パスワード</primary></indexterm>
	Windows NT 4.0 サービスパック 3は既定値で平文パスワードの送信を無効化している。
	これにより、暗号化されたパスワードのサポートを使用するか、平文パスワードを再度
	有効化するように Windows NT レジストリを編集するか、どちらかが必要となる。
		</para>

		<para>
<indexterm><primary>ドメインセキュリティ</primary></indexterm>
<indexterm><primary>ドメイン環境</primary></indexterm>
	Microsoft Windowsの下記のバージョンは、ドメイン環境にログオンする可能性があるにも
	かかわらず、完全なドメインセキュリティのプロトコルをサポートしていない:
		</para>

		<itemizedlist>
			<listitem><para>MS DOS ネットワーククライアント3.0で基本的なネットワーク リダイレクタがインストールされているもの</para></listitem>
			<listitem><para>Windows 95で、アップデートされたネットワークリダイレクタがインストールされているもの</para></listitem>
			<listitem><para>Windows 98 [Second Edition]</para></listitem>
			<listitem><para>Windows Me</para></listitem>
		</itemizedlist>

		<note>
		<para>
<indexterm><primary>Windows XP Home</primary></indexterm>
<indexterm><primary>ドメインメンバ</primary></indexterm>
<indexterm><primary>ドメインログオン</primary></indexterm>
 	MS Windows XP Home は、ドメインメンバになる機能はなく、ドメインログオンは実行できない。
		</para>
		</note>

		<para>
	下記のバージョンのMicrosoft Windowsは、ドメインセキュリティのプロトコルを完全にサポートしている。
		</para>

		<itemizedlist>
			<listitem><para>Windows NT 3.5x.</para></listitem>
			<listitem><para>Windows NT 4.0.</para></listitem>
			<listitem><para>Windows 2000 Professional.</para></listitem>
			<listitem><para>Windows 200x Server/Advanced Server.</para></listitem>
			<listitem><para>Windows XP Professional.</para></listitem>
		</itemizedlist>

		<para>
<indexterm><primary>SMB/CIFS</primary></indexterm>
<indexterm><primary>認証</primary></indexterm>
<indexterm><primary>チャレンジ/レスポンスメカニズム</primary></indexterm>
<indexterm><primary>平文</primary></indexterm>
<indexterm><primary>暗号化</primary></indexterm>
<indexterm><primary>ネゴシエート</primary></indexterm>
	Microsoft SMB/CIFS クライアントの現在のリリース版は全て、ここに説明するSMBの
	チャレンジ/ レスポンス認証の仕組みをサポートしている。平文認証を有効化しても、
	クライアントが暗号化による認証に参加する能力を無効化するわけではない。そうではなく、
	クライアントが平文でも暗号化でもどちらのパスワード認証方式にも対応できるようにする。
		</para>

		<para>
<indexterm><primary>キャッシュされた暗号化パスワード</primary></indexterm>
<indexterm><primary>平文パスワード</primary></indexterm>
<indexterm><primary>レジストリ変更</primary></indexterm>
<indexterm><primary>自動再接続</primary></indexterm>
<indexterm><primary>暗号化パスワード</primary></indexterm>
	Microsoft Windowsのクライアントは、暗号化されたパスワードのみキャッシュする。
	レジストリの変更により、平文パスワードが再度有効化されても、平文パスワードは
	キャッシュされない。このことは、ネットワーク接続が切れた場合、 キャッシュされた
	(即ち暗号化された)パスワードのみがリソースサーバに送られて、自動再接続を実行する
	ために使用されるということを意味する。リソースサーバが暗号化された パスワードを
	サポートしていない場合、自動再接続はできない。暗号化されたパスワードの使用を強く
	推奨する。
		</para>

		<sect3>
		<title>暗号化されたパスワードの長所</title>

			<itemizedlist>
				<listitem><para>
<indexterm><primary>ネットワーク経由での送信</primary></indexterm>
<indexterm><primary>ネットワークスニファ</primary></indexterm>
<indexterm><primary>SMBサーバ</primary></indexterm>
		平文パスワードがネットワーク経由で送信されない。誰かがネットワーク
		スニファーを使用して、SMBサーバに送られるパスワードを記録することができない。
				</para></listitem>

				<listitem><para>
<indexterm><primary>どこにも保存されない</primary></indexterm>
<indexterm><primary>メモリ</primary></indexterm>
<indexterm><primary>ディスク</primary></indexterm>
		平文パスワードが、メモリにもディスクにも、どこにも保存されない。
				</para></listitem>
 
				<listitem><para>
<indexterm><primary>暗号化パスワード</primary></indexterm>
<indexterm><primary>ユーザレベルのセキュリティ</primary></indexterm>
<indexterm><primary>パスワードプロンプト</primary></indexterm>
<indexterm><primary>SMB暗号化</primary></indexterm>
		Windows NTは暗号化パスワードをサポートしないサーバとやりとりする
		ことを好まない。また、サーバーが「userレベル」のセキュリティモード
		になっているとき、そのサーバを ブラウズすることを拒否する。そのため、
		接続の度に、ユーザにパスワードを入力するように要求するので、大変厄介
		である。 これを止めさせる唯一の方法は、SMB暗号を使用することである。
				</para></listitem>

				<listitem><para>
<indexterm><primary>暗号化パスワード</primary></indexterm>
<indexterm><primary>自動再接続</primary></indexterm>
		暗号化パスワードのサポートにより、共有(リソース)への自動再接続が可能になる。
				</para></listitem>

				<listitem><para>
<indexterm><primary>PDC</primary></indexterm>
<indexterm><primary>BDC</primary></indexterm>
		PDC/BDC の運用に暗号化パスワードは不可欠である。 
				</para></listitem>
			</itemizedlist>
		</sect3>


		<sect3>
		<title>暗号化されていないパスワードの長所</title>

			<itemizedlist>
				<listitem><para>
<indexterm><primary>メモリ中へのキャッシュ</primary></indexterm>
		平文パスワードは、ディスクに保存されず、メモリにキャッシュされない。
				</para></listitem>

				<listitem><para>
<indexterm><primary>Login</primary></indexterm>
<indexterm><primary>FTP</primary></indexterm>
		平文パスワードは、LoginやFTPなどの、UNIXの他のサービスと同じパスワード
		ファイルが使用できる。
				</para></listitem>

				<listitem><para>
<indexterm><primary>Telnet</primary></indexterm>
<indexterm><primary>FTP</primary></indexterm>
		TelnetやFTPなどの他のサービスが、平文パスワードをネットワーク上で
		送信している。従って、SMBのために送信しても大勢に影響はない。
				</para></listitem>
			</itemizedlist>
		</sect3>
	</sect2>

	<sect2>
	<title>Microsoft Windows と UNIX の間の、ユーザー識別子のマッピング</title>

	<para>
<indexterm><primary>UID</primary></indexterm>
<indexterm><primary>SID</primary></indexterm>
<indexterm><primary>マッピング</primary></indexterm>
	Microsoft Windows NT4/200xがセキュリティ識別子(SID)を要求するのと同様に、
	UNIX/Linuxの全ての操作は、ユーザ識別子(UID)を要求する。SambaはMicrosoft Windows
	のユーザーをUNIX/LinuxのUID にマッピングするために、二つの方法を提供する。
	</para>

	<para>
<indexterm><primary>Samba SAM</primary></indexterm>
<indexterm><primary>SAM</primary></indexterm>
<indexterm><primary>UID</primary></indexterm>
<indexterm><primary>アカウント情報データベース</primary></indexterm>
<indexterm><primary>ローカルユーザアカウント</primary></indexterm>
	第一に、すべてのSamba SAM(セキュリティアカウントマネージャデータベース)
	アカウントが、そのアカウントとマッピングされるべきUNIX/Linux UID を必要とする。
	アカウント情報データベースにユーザが追加されるにつれ、SambaはSambaのホストOSに
	そのアカウントを追加するために、<smbconfoption name="add user script"/>
	インタフェースを呼ぶ。本質的には、ローカルSAMの中の全アカウントが、
	ローカルユーザアカウントを必要とする。
	</para>

	<para>
	<indexterm><primary>idmap uid</primary></indexterm>
	<indexterm><primary>idmap gid</primary></indexterm>
	<indexterm><primary>UID</primary></indexterm>
	<indexterm><primary>SAM</primary></indexterm>
	<indexterm><primary>外部ドメイン</primary></indexterm>
	<indexterm><primary>非メンバのWindowsクライアント</primary></indexterm>
	<indexterm><primary>SID</primary></indexterm>
	Windows SIDをUNIX UIDにマップする2番目の方法は、&smb.conf;中の
	<emphasis>idmap uid</emphasis>と<emphasis>idmap gid</emphasis>パラメータを経由する
	方法である。これらのパラメータの情報についてはマニュアルページを参照のこと。リモート
	(非メンバのWindowsクライアントあるいは外部ドメイン)SAMサーバからのユーザマッピング
	時にはこれらのパラメータは基本的である。
	</para>

	</sect2>

	<sect2 id="idmapbackend">
	<title>分散マシン上の共通のUID/GIDマッピング</title>

	<para>
<indexterm><primary>UID</primary></indexterm>
<indexterm><primary>GID</primary></indexterm>
<indexterm><primary>BDC</primary></indexterm>
<indexterm><primary>ドメインメンバサーバ</primary></indexterm>
<indexterm><primary>NFS</primary></indexterm>
<indexterm><primary>rsync</primary></indexterm>
	Samba-3は、分散ネットワーク環境中で、すべてのサーバ上で同一のUIDとGIDを使うことを
	可能にする特別な機能を持っている。分散ネットワークはPDCが存在するもの、一つ以上の
	BDCがあるもの、あるいは1つ以上のドメインメンバサーバがあるものである。なぜこれが
	重要かというと、ファイルが1つ以上のプロトコル(たとえばNFS)で共有され、たとえば
	<command>rsync</command>のようなツールを使ってUNIX/Linuxシステム間で、ユーザが
	ファイルをコピーすることがあるからである。
	</para>

	<para>
<indexterm><primary>LDAPベース</primary></indexterm>
<indexterm><primary>idmap バックエンド</primary></indexterm>
<indexterm><primary>UID</primary></indexterm>
<indexterm><primary>GID</primary></indexterm>
<indexterm><primary>LDAP</primary></indexterm>
<indexterm><primary>SAM バックエンド</primary></indexterm>
<indexterm><primary>LDAP idmap バックエンド</primary></indexterm>
	<indexterm><primary>idmapバックエンド</primary></indexterm>
	<parameter>idmap backend</parameter>と呼ばれるパラメータを使って、
	特別な機能を有効に出来る。このパラメータの既定値は空白文字列である。
	技術的に、LDAPベースのidmapバックエンドをUIDとGID向けに使うことは可能
	であるが、SAMバックエンド用にLDAPの使用も行うネットワーク設定用にこれを
	完了する時にこれは最も意味を持つ。この設定については
	<link linkend="idmapbackendexample">LDAP idmap バックエンドを使う設定例</link>
	にある。
	</para>

<indexterm><primary>SAM バックエンド</primary><secondary>ldapsam</secondary></indexterm>
<example id="idmapbackendexample">
<title>LDAP idmap バックエンドを使う設定例</title>
<smbconfblock>
<smbconfsection name="[global]"/>
<smbconfoption name="idmap backend">ldap:ldap://ldap-server.quenya.org:636</smbconfoption>
<smbconfcomment>Alternatively, this could be specified as:</smbconfcomment>
<smbconfoption name="idmap backend">ldap:ldaps://ldap-server.quenya.org</smbconfoption>
</smbconfblock>
</example>

	<para>
<indexterm><primary>LDAPバックエンド</primary></indexterm>
<indexterm><primary>PADLバックエンド</primary></indexterm>
	LDAPバックエンドに重要な仕事をさせたいネットワーク管理者は、遅かれ
	早かれPADLソフトウェアによって優れた仕事を完了することを公開する。
	PADL <ulink url="http://www.padl.com"/>はとても興味深い一連の
	ツールをオープンソースで作成し、公開している。これらのツールは
	以下を含む:
	</para>

	<itemizedlist>
		<listitem>
		<para>
<indexterm><primary>nss_ldap</primary></indexterm>
<indexterm><primary>NSS</primary></indexterm>
<indexterm><primary>AIX</primary></indexterm>
<indexterm><primary>Linux</primary></indexterm>
<indexterm><primary>LDAP</primary></indexterm>
<indexterm><primary>Solaris</primary></indexterm>
<indexterm><primary>UID</primary></indexterm>
<indexterm><primary>GID</primary></indexterm>
		<emphasis>nss_ldap:</emphasis>AIX、Linux、Solarisやその他のOS向けの
		ネイティブなネームサービスサポートを提供するLDAPネームサービススイッチ
		(NSS)モジュール。このツールは集中化した記憶装置とUID/GIDの検索に使う
		ことができる。
		</para>
		</listitem>

		<listitem>
		<para>
<indexterm><primary>pam_ldap</primary></indexterm>
<indexterm><primary>PAM</primary></indexterm>
<indexterm><primary>LDAP</primary></indexterm>
<indexterm><primary>アクセス認証</primary></indexterm>
		<emphasis>pam_ldap:</emphasis>PAMモジュールで、UNIX/Linuxシステムの
		アクセス認証のLDAP統合を提供する。
		</para>
		</listitem>

		<listitem>
		<para>
<indexterm><primary>idmap_ad</primary></indexterm>
<indexterm><primary>IDMAPバックエンド</primary></indexterm>
<indexterm><primary>RFC 2307</primary></indexterm>
<indexterm><primary>PADL</primary></indexterm>
		<emphasis>idmap_ad:</emphasis>PADL Web
		<ulink url="http://www.padl.com/download/xad_oss_plugins.tar.gz">サイト</ulink>
		からの、Microsoftサービスのための、UNIX RFC2307スキーマを
		サポートするIDMAPバックエンド。
		</para>
		</listitem>
	</itemizedlist>

	</sect2>

	<sect2>
	<title>LDAPに関するコメント</title>

	<para>
<indexterm><primary>LDAP</primary><secondary>ディレクトリ</secondary></indexterm>
<indexterm><primary>アーキテクチャ</primary></indexterm>
<indexterm><primary>FIM</primary></indexterm>
<indexterm><primary>SSO</primary></indexterm>
	現在の情報技術界で、多くの興奮と関心がLDAPディレクトリに向けられている。
	LDAPアーキテクチャは高度に拡張性があるように設計された。また、広範囲な
	OSとプラットフォームを取り巻く、非常にたくさんのアプリケーションの潜在的
	な領域をまたがって使うようにも設計されている。LDAP技術は会社全体のシングル
	サインオン(SSO)環境の基盤となる連携アイデンティティ管理(FIM)ソリューション
	の中心部をなしている(訳注:TivoliとかRSAでこのような製品がある様子)。
	</para>

	<para>
<indexterm><primary>LDAP</primary></indexterm>
<indexterm><primary>eDirectory</primary></indexterm>
<indexterm><primary>ADS</primary></indexterm>
<indexterm><primary>認証</primary></indexterm>
	LDAPの実装は広範囲な種類のプラットフォームで構築されている。これは、
	Microsoft Windows Active Directory(ADS)、NovellのeDirectoryやその他の
	もののの中心に位置する。LDAPによるディレクトリサービスの実装は、
	新しい世代のアプリケーションと同様に古いものとも相互に関係し、
	それらはすべて何らかの認証サービスに依存する。
	</para>

	<para>
<indexterm><primary>LDAPディレクトリ</primary></indexterm>
<indexterm><primary>認証</primary></indexterm>
<indexterm><primary>アクセス制御</primary></indexterm>
<indexterm><primary>intermediate tools</primary></indexterm>
<indexterm><primary>ミドルウェア</primary></indexterm>
<indexterm><primary>central environment</primary></indexterm>
<indexterm><primary>インフラストラクチャ</primary></indexterm>
<indexterm><primary>ログインシェル</primary></indexterm>
<indexterm><primary>mail</primary></indexterm>
<indexterm><primary>メッセージングシステム</primary></indexterm>
<indexterm><primary>quota制御</primary></indexterm>
<indexterm><primary>印刷システム</primary></indexterm>
<indexterm><primary>DNSサーバ</primary></indexterm>
<indexterm><primary>DHCPサーバ</primary></indexterm>
	UNIXサービスは、中間的なツールとユーティリティによって、認証とアクセス
	制御のためのLDAPディレクトリ情報を利用することが出来る。LDAPディレクトリ
	とミドルウェアツールとユーティリティから構成される完全な環境は、UNIX
	プラットフォームのすべてのユーザのアクセスが中央の環境から管理されることと、
	必要な点が物理的にどこに位置しても分散されることを可能にする。この
	基盤に適合するアプリケーションは、UNIXログイン、シェル、メールとメッセージ
	システム、quota制御、印刷システム、DNSサーバ、DHCPサーバともちろんSambaも
	含む。
	UNIX services can utilize LDAP directory information for authentication and access controls
	through intermediate tools and utilities. The total environment that consists of the LDAP directory
	and the middle-ware tools and utilities makes it possible for all user access to the UNIX platform
	to be managed from a central environment and yet distributed to wherever the point of need may
	be physically located. Applications that benefit from this infrastructure include: UNIX login
	shells, mail and messaging systems, quota controls, printing systems, DNS servers, DHCP servers,
	and also Samba.
	</para>

	<para>
<indexterm><primary>LDAP</primary></indexterm>
<indexterm><primary>passdb backend</primary></indexterm>
<indexterm><primary>scalable</primary></indexterm>
<indexterm><primary>SAM backend</primary></indexterm>
<indexterm><primary>LDAP directory</primary></indexterm>
<indexterm><primary>management costs</primary></indexterm>
	多くのサイトが、Samba用に拡張性のあるpassdbバックエンドを提供するために、
	まずはじめにLDAPをインストールする。その他はSamba SAMバックエンドのような
	新しいユーザのために存在するLDAPディレクトリに適合することが必要な場面に
	直面する。Sambaに対する特別な必要性と魅力が何であっても、LDAPディレクトリ
	構造とその実装のデザインに関する決定は、そのサイトの永続的な本質である。
	これらは、長期にわたる情報システム管理コストに影響する広範囲な影響がある。
	</para>

	<para>
<indexterm><primary>LDAP deployment</primary></indexterm>
<indexterm><primary>ディレクトリ情報ツリー</primary><see>DIT</see></indexterm>
	LDAPの展開を急いではならない。どのように、ディレクトリ情報ツリーが現在と
	将来のサイトのニーズに影響するかのデザインを、それらが使える可能性と同じ
	ように理解する時間を取ること。SambaのSAM情報は、サイトからサイトに異なる
	DIT内に格納すべきであり、おのおのの実装において新しい経験が得られる。
	最初の実装で目が覚め、2番目の実装では心配事が出来、三世代目でやっとうまく
	いくというのは、LDAPのベテランはよく理解していることである。
	</para>

	<sect3>
	<title>LDAPとSambaに対する注意</title>

	<para>
<indexterm><primary>POSIX identity</primary></indexterm>
<indexterm><primary>ネットワーク環境</primary></indexterm>
<indexterm><primary>ユーザアカウント</primary></indexterm>
<indexterm><primary>グループアカウント</primary></indexterm>
<indexterm><primary>マシン信頼アカウント</primary></indexterm>
<indexterm><primary>ドメイン間信頼アカウント</primary></indexterm>
<indexterm><primary>intermediate information</primary></indexterm>
	SambaはUNIX POSIX識別情報を、SambaとWindowsネットワーク環境に特有の
	情報を格納する場所と同様に必要とする。取り扱われなければならない、
	最もよく使われる情報はユーザアカウント、グループアカウント、マシン
	信頼アカウント、ドメイン間信頼アカウントとSamba内部で使う固有の中間
	情報を含む。
	</para>

	<para>
<indexterm><primary>deployment guidelines</primary></indexterm>
<indexterm><primary>HOWTO文書</primary></indexterm>
<indexterm><primary>LDAP</primary></indexterm>
	この文書中の、展開ガイドラインは、他の本とインターネット上で公開されて
	いるHOWTO文書と同じように、出来上がっているディレクトリデザインと実装に
	適合するわけではない。存在するDITは、共通のソース中で提案された単純な
	情報レイアウトに適合することが出来ないかもしれない。更に追加すると、
	Samba用に使われるLDAPディレクトリを提供するのに使われる共通スクリプトと
	ツールはあなたの要求に適合しないかもしれない。
	</para>

	<para>
<indexterm><primary>存在する LDAP DIT</primary></indexterm>
	これは一般的ではないが、存在するLDAP DITを持つサイトのために、サイト
	固有のスクリプトとユーティリティ一式を作成する必要がある場合に、サイト
	操作のスコープ内でSambaを供給することは可能である。DITを使ってユーザと
	グループアカウントを配布する方法はこれをチャレンジングなことにさせる。
	解決方法は、もちろん、価値があることであるが、それを行うための試行錯誤は
	チャレンジングである。サイトの要求を理解する時間を取り、急いで提供する
	ことは避けること。
	</para>

	<para>
<indexterm><primary>スクリプト</primary></indexterm>
<indexterm><primary>ツール</primary></indexterm>
	上記から、サイトに適合しないスクリプトとツールをむやみやたらに使わないこと。
	存在する基盤が、不適切なツールの不用意な使用によって被害を被らないことを
	確実にするために、すべてのスクリプトを、それを実行する前に検査して検証すること。
	</para>

	</sect3>

	</sect2>

	<sect2>
	<title>LDAPディレクトリとWindowsのコンピュータアカウント</title>

		<para>
<indexterm><primary>turnkey solution</primary></indexterm>
<indexterm><primary>LDAP.</primary></indexterm>
<indexterm><primary>frustrating experience</primary></indexterm>
	SambaはLDAPに対するターンキーソリューションを提供しない。Sambaとの統合の
	前に、LDAPのデザインと設定を行う事は最も良いことである。LDAPの実用的な
	知識はSambaの統合を容易にし、LDAPの知識がない場合には、いらいらした経験
	しか得られない。
		</para>

		<para>
<indexterm><primary>コンピュータアカウント</primary></indexterm>
<indexterm><primary>マシンアカウント</primary></indexterm>
<indexterm><primary>LDAP</primary></indexterm>
	コンピュータ(マシン)アカウントは、この章で説明されている、若干の制約を
	受けるLDAPディレクトリサブジェクト中の好みの位置に配置できる。
		</para>

		<para>
<indexterm><primary>POSIX</primary></indexterm>
<indexterm><primary>sambaSamAccount</primary></indexterm>
<indexterm><primary>コンピュータアカウント</primary></indexterm>
<indexterm><primary>マシンアカウント</primary></indexterm>
<indexterm><primary>Windows NT4/200X</primary></indexterm>
<indexterm><primary>ユーザアカウント</primary></indexterm>
<indexterm><primary>信頼アカウント</primary></indexterm>
	コンピュータ(マシン)アカウントのPOSIXとsambaSamAccountコンポーネントは、
	両者ともSambaによって使われる。そのため、マシンアカウントは、Windows 
	NT/200xが扱うのと同じ方法で、Samba内部で扱われる。ユーザアカウントと
	マシンアカウントは、マシンアカウントが$文字で終わることを除いてお互い
	を識別できず、信頼アカウントも同じである。
		</para>

		<para>
<indexterm><primary>ユーザ</primary></indexterm>
<indexterm><primary>グループ</primary></indexterm>
<indexterm><primary>マシン</primary></indexterm>
<indexterm><primary>信頼</primary></indexterm>
<indexterm><primary>UID</primary></indexterm>
	有効なUNIX uidに結びつくWindowsのユーザ、グループ、マシン、信頼およびその他の
	アカウントの必要性は、遙か昔前のSambaの開発時に決められた。この決定が覆されたり
	変更することは、Samba-3.x系列の間にはありそうもない。
		</para>

		<para>
<indexterm><primary>UID</primary></indexterm>
<indexterm><primary>SID</primary></indexterm>
<indexterm><primary>NSS</primary></indexterm>
	Windows SIDからのUID解決はSambaが動作しているホストOSを参照しなければならない
	メカニズムによって、Samba内で行われる。NSSは、それが動いているすべてのホスト
	OSについて全部を知る必要があるということから、(Sambaのような)アプリケーション
	を隠蔽する良いメカニズムである。
		</para>

		<para>
<indexterm><primary>UID</primary></indexterm>
<indexterm><primary>passwd</primary></indexterm>
<indexterm><primary>shadow</primary></indexterm>
<indexterm><primary>group</primary></indexterm>
<indexterm><primary>NSS</primary></indexterm>
<indexterm><primary>winbindd</primary></indexterm>
<indexterm><primary>LDAP</primary></indexterm>
	SambaはNSS制御(設定)ファイル中の<quote>passwd</quote>、<quote>shadow</quote>
	と<quote>group</quote>機能経由でホストOSが提供するUIDを問い合わせる。これを
	達成するための最適なツールはUNIX管理者の決定にゆだねられている。それはSamba
	によっては強制されない。Sambaは1つの方法としてそのサポートライブラリとwinbindd
	を提供する。これをLDAP経由で行う事は可能で、すべてのアカウントエンティティが
	LDAPディレクトリ中にあることが可能なような適切なフックを提供する。
		</para>

		<para>
<indexterm><primary>PADL</primary></indexterm>
<indexterm><primary>nss_ldap</primary></indexterm>
<indexterm><primary>UID</primary></indexterm>
<indexterm><primary>LDAP</primary></indexterm>
<indexterm><primary>documentation</primary></indexterm>
	多くの人に対して、良い選択肢は、PADL nss_ldapライブラリを使うことである。
	このユーティリティは、コンピュータアカウントがPOSIX/UNIXアカウントのUID
	に解決できるように設定されねばならない。これは基本的にLDAPのデザインの問題
	である。Sambaメーリングリストとドキュメントで提供される情報は役に立つ例だけ
	を提供するようになっている。LDAPディレクトリのデザインは複雑な問題であり、
	この文書の範囲外である。
		</para>

	</sect2>

</sect1>

<sect1 id="acctmgmttools">
<title>アカウント管理ツール</title>

<para>
<indexterm><primary>pdbedit</primary></indexterm>
<indexterm><primary>マシンアカウント</primary></indexterm>
<indexterm><primary>管理ツール</primary></indexterm>
Sambaはユーザとマシンアカウントを管理するための2つのツールを提供する:
<command>smbpasswd</command>と<command>pdbedit</command>である。
</para>

<para>
<indexterm><primary>pdbedit</primary></indexterm>
<indexterm><primary>password aging</primary></indexterm>
<indexterm><primary>失敗したログイン</primary></indexterm>
<command>pdbedit</command>はSambaユーザアカウント情報に加えてアカウントポリシーを
管理するために使うことが出来る。ポリシー管理機能は、パスワードのエージングと
ログイン失敗の扱いの管理を行うドメインの既定値の設定を管理するために使われる。
</para>

<para>
<indexterm><primary>smbpasswd</primary></indexterm>
<indexterm><primary>storage mechanism</primary></indexterm>
<indexterm><primary>SambaSAMAccount</primary></indexterm>
<indexterm><primary>net</primary></indexterm>
何人かは、名前がSambaSAMAccount情報への格納メカニズムを参照しているために、
参照が<literal>smbpasswd</literal>担っていることに困惑することがある。
しかし、これはユーティリティツールの名前でもある。このツールは結局、
<command>net</command>ツールセット(<link linkend="NetCommand">Netコマンド</link>を参照)
という、新しく追加された新しい機能に取り替えられることになる。
</para>

	<sect2>
	<title><command>smbpasswd</command>ツール</title>

		<para>
<indexterm><primary>smbpasswd</primary></indexterm>
<indexterm><primary>passwd</primary></indexterm>
<indexterm><primary>yppasswd</primary></indexterm>
<indexterm><primary>passdb backend</primary></indexterm>
<indexterm><primary>storage methods</primary></indexterm>
	<command>smbpasswd</command>は<command>passwd</command>と<command>yppasswd</command>
	プログラムに似たユーティリティである。これはpassdbバックエンド中の2つの32バイト
	パスワードフィールドを管理する。このユーティリティは実際のアカウントと、(&smb.conf;
	ファイル中の <parameter>passdb backend</parameter>によって指定される)パスワード
	格納方式とは独立して動作する。
		</para>

		<para>
<indexterm><primary>smbpasswd</primary></indexterm>
<indexterm><primary>クライアント-サーバモード</primary></indexterm>
	<command>smbpasswd</command>は、ユーザのパスワードを変更する時に、ローカルのsmbd
	に接続する時にクライアント-サーバモードで動作する。これは非常なメリットがある。
		</para>

		<para>
<indexterm><primary>smbpasswd</primary></indexterm>
<indexterm><primary>パスワードの変更</primary></indexterm>
	<command>smbpasswd</command>はWindows NT上のパスワードを変更する能力もある(これは
	NTドメインのユーザのパスワードを変更する時に、NT PDCにその要求を送る時にのみ動作
	する)。
		</para>

		<para>
		<indexterm><primary>ユーザ管理</primary></indexterm>
		<indexterm><primary>ユーザアカウント</primary><secondary>追加/削除</secondary></indexterm>
		<command>smbpasswd</command>は以下のように使うことが出来る:
		</para>

		<itemizedlist>
			<listitem><para>ユーザまたはマシンアカウントの<emphasis>追加</emphasis>。</para></listitem>
			<listitem><para>ユーザまたはマシンアカウントの<emphasis>削除</emphasis>。</para></listitem>
			<listitem><para>ユーザまたはマシンアカウントの<emphasis>有効化</emphasis>。</para></listitem>
			<listitem><para>ユーザまたはマシンアカウントの<emphasis>無効化</emphasis>。</para></listitem>
			<listitem><para>ユーザパスワードの<emphasis>削除</emphasis>。</para></listitem>
			<listitem><para>ドメイン間信頼アカウントの<emphasis>管理</emphasis>。</para></listitem>
		</itemizedlist>

		<para>
		通常のユーザでsmbpasswdを実行するには、以下のように入力する:
		</para>

		<para>
<screen>
&prompt;<userinput>smbpasswd</userinput>
<prompt>Old SMB password: </prompt><userinput><replaceable>secret</replaceable></userinput>
</screen>
		<replaceable>secret</replaceable>には、古いパスワードを入力するか、もしも
		古いパスワードがなければ単にリターンキーのみを入力する。
<screen>
<prompt>New SMB Password: </prompt><userinput><replaceable>new secret</replaceable></userinput>
<prompt>Repeat New SMB Password: </prompt><userinput><replaceable>new secret</replaceable></userinput>
</screen>
		</para>

		<para>
		もしも古い値が、このユーザに対して格納されている現在の値と異なる場合か、
		2つの新しい値が一致しない場合、パスワードは変更されない。
		</para>

		<para>
<indexterm><primary>SMB password</primary></indexterm>
		普通のユーザによって起動された場合、コマンドはそのユーザのみのSMBパスワード
		のみ変更できる。
		</para>

		<para>
<indexterm><primary>smbpasswd</primary></indexterm>
<indexterm><primary>SMB password</primary></indexterm>
		rootで実行される場合、<command>smbpasswd</command>はSMBパスワードを変更
		したいユーザ名をオプションの引数として指定できる。rootで実行される場合、
		<command>smbpasswd</command>は古いパスワードの値をチェックするための
		プロンプトを出さないので、パスワードを忘れたユーザのパスワードを設定できる。
		</para>

		<para>
<indexterm><primary>smbpasswd</primary></indexterm>
<indexterm><primary>passwd</primary></indexterm>
<indexterm><primary>yppasswd</primary></indexterm>
<indexterm><primary>change capabilities</primary></indexterm>
		<command>smbpasswd</command>は、<command>passwd</command>や<command>yppasswd</command>
		コマンドを使っているUNIXユーザに親しみやすい方法で動作するように設計されて
		いる。管理用として設計されているため、このツールは基本的なユーザレベルの
		パスワード変更能力を提供する。
		</para>

		<para>
<indexterm><primary>smbpasswd</primary></indexterm>
		<command>smbpasswd</command>,の使い方の詳細は、マニュアルページ(最終的な
		参照)を参照すること。
		</para>
	</sect2>

	<sect2 id="pdbeditthing">
	<title><command>pdbedit</command>ツール</title>

		<para>
		<indexterm><primary>pdbedit</primary></indexterm>
		<indexterm><primary>ユーザ管理</primary></indexterm>
		<indexterm><primary>アカウントポリシー</primary></indexterm>
		<indexterm><primary>ユーザアカウントの</primary><secondary>追加/削除</secondary></indexterm>
		<command>pdbedit</command>はrootでのみ使えるツールである。これは、
		ドメイン全体でのアカウントポリシーの設定のようにpassdbバックエンド
		を管理するのに使われる。<command>pdbedit</command>は以下のように使える:
		</para>

		<itemizedlist>
			<listitem><para>ユーザアカウントの追加、削除および変更。</para></listitem>
			<listitem><para>ユーザアカウントの表示。</para></listitem>
			<listitem><para>ユーザアカウントの移行(migrate)。</para></listitem>
			<listitem><para>グループアカウントの移行。</para></listitem>
			<listitem><para>アカウントポリシーの管理。</para></listitem>
			<listitem><para>ドメインアクセスポリー設定の管理。</para></listitem>
		</itemizedlist>

		<para>
		<indexterm><primary>Sarbanes-Oxley</primary></indexterm>
		上場企業会計改革および投資家保護法(いわゆる米国SOX法)下で、アメリカの企業と
		組織は一連の<literal>内部統制</literal>と伝達手段、記録、会計データの
		保護を実施することが必要となった。米国SOX法はさらに以下の点についても影響
		する:
		</para>

		<orderedlist>
		<listitem><para>財務データを格納する情報システムにだれがアクセスするかということ。</para></listitem>
		<listitem><para>どのように個人情報と会計情報が、従業員とビジネスパートナーとの間で扱われるかと言うこと。</para></listitem>
		<listitem><para>どのようにセキュリティの欠陥を管理するかと言うこと。</para></listitem>
		<listitem><para>すべての情報システムへのセキュリティとパッチレベル管理。</para></listitem>
		<listitem><para>どのように情報システムの変更が文書化され、追跡できるようになるかと言うこと。</para></listitem>
		<listitem><para>どのように情報アクセス制御が実装されて管理されているかと言うこと。</para></listitem>
		<listitem><para>変更点とセキュリティに関するすべての情報システムの監査機能。</para></listitem>
		<listitem><para>プライバシーを確実にするための規律手順と制御。</para></listitem>
		</orderedlist>

		<para>
		<indexterm><primary>責任</primary></indexterm>
		<indexterm><primary>コンプライアンス</primary></indexterm>
		手短に言うと、米国SOX法は、ビジネス関連の情報システムに関して責任を
		強める道具である。特に会計データ処理と個人情報の記録に使われるすべての
		情報システムのコンプライアンスを強化する。同様な責任は世界中で要求され
		ている。
		</para>

		<para>
		<indexterm><primary>法律</primary></indexterm>
		<indexterm><primary>規則</primary></indexterm>
		<indexterm><primary>pdbedit</primary></indexterm>
		<indexterm><primary>アクセス制御</primary></indexterm>
		<indexterm><primary>アカウント管理</primary></indexterm>
		政府の法律に従って情報システム操作を許可するSambaのツールと機能に
		精通している必要性は明らかである。<command>pdbedit</command>は
		アカウントとシステムアクセス制御とポリシーを管理する能力を提供する
		唯一のSambaツールである。Samba-3シリーズの残存ライフサイクル中、
		この重要な領域で新しいツールが実装されることはあり得る。
		</para>

		<para>
		Sambaと比較した場合のWindows NT4で有効なドメイングローバルポリシー
		制御は<link linkend="policycontrols">NT4 ドメイン対 Sambaポリシー制御</link>
		中にある。
		</para>

		<table id="policycontrols">
		<title>NT4ドメイン対Sambaポリシー制御</title>
            <tgroup cols="5">
                <colspec align="left" colwidth="2*"/>
                <colspec align="left" colwidth="2*"/>
                <colspec align="center" colwidth="1*"/>
                <colspec align="center" colwidth="1*"/>
                <colspec align="center" colwidth="1*"/>
                <thead>
                    <row>
                        <entry><para>NT4ポリシー名</para></entry>
                        <entry><para>Sambaポリシー名</para></entry>
                        <entry><para>NT4 レンジ</para></entry>
                        <entry><para>Samba レンジ</para></entry>
                        <entry><para>Samba 既定値</para></entry>
                    </row>
                </thead>
                <tbody>
                    <row>
					<entry><para>Maximum Password Age(パスワード有効期間)</para></entry>
					<entry><para>maximum password age</para></entry>
					<entry><para>0 - 999 (日)</para></entry>
					<entry><para>0 - 4294967295 (秒)</para></entry>
					<entry><para>4294967295</para></entry>
                    </row>
                    <row>
					<entry><para>Minimum Password Age(パスワード変更禁止期間)</para></entry>
					<entry><para>minimum password age</para></entry>
					<entry><para>0 - 999 (日)</para></entry>
					<entry><para>0 - 4294967295 (秒)</para></entry>
					<entry><para>0</para></entry>
                    </row>
                    <row>
					<entry><para>Mimimum Password Length(最小パスワード長)</para></entry>
					<entry><para>min password length</para></entry>
					<entry><para>1 - 14 (文字)</para></entry>
					<entry><para>0 - 4294967295 (文字)</para></entry>
					<entry><para>5</para></entry>
                    </row>
                    <row>
					<entry><para>Password Uniqueness(パスワード履歴)</para></entry>
					<entry><para>password history</para></entry>
					<entry><para>0 - 23 (#)</para></entry>
					<entry><para>0 - 4294967295 (#)</para></entry>
					<entry><para>0</para></entry>
                    </row>
                    <row>
					<entry><para>Account Lockout - Reset count after(アカウントロックアウト期間)</para></entry>
					<entry><para>reset count minutes</para></entry>
					<entry><para>1 - 99998 (分)</para></entry>
					<entry><para>0 - 4294967295 (分)</para></entry>
					<entry><para>30</para></entry>
                    </row>
                    <row>
					<entry><para>Lockout after bad logon attempts(ロックアウトの閾値)</para></entry>
					<entry><para>bad lockout attempt</para></entry>
					<entry><para>0 - 998 (#)</para></entry>
					<entry><para>0 - 4294967295 (#)</para></entry>
					<entry><para>0</para></entry>
                    </row>
                    <row>
					<entry><para>*** Not Known ***</para></entry>
					<entry><para>disconnect time</para></entry>
					<entry><para>TBA</para></entry>
					<entry><para>0 - 4294967295</para></entry>
					<entry><para>0</para></entry>
                    </row>
                    <row>
					<entry><para>Lockout Duration(ロックアウト閾値のリセット)</para></entry>
					<entry><para>lockout duration</para></entry>
					<entry><para>1 - 99998 (min)</para></entry>
					<entry><para>0 - 4294967295 (min)</para></entry>
					<entry><para>30</para></entry>
                    </row>
                    <row>
					<entry><para>Users must log on in order to change password</para></entry>
					<entry><para>user must logon to change password</para></entry>
					<entry><para>0/1</para></entry>
					<entry><para>0 - 4294967295</para></entry>
					<entry><para>0</para></entry>
                    </row>
                    <row>
					<entry><para>*** Registry Setting ***</para></entry>
					<entry><para>refuse machine password change(マシンパスワード変更の禁止)</para></entry>
					<entry><para>0/1</para></entry>
					<entry><para>0 - 4294967295</para></entry>
					<entry><para>0</para></entry>
                    </row>
				</tbody>
			</tgroup>
		</table>

		<para>
		<indexterm><primary>pdbedit</primary></indexterm>
<indexterm><primary>ポリシー設定</primary></indexterm>
<indexterm><primary>アカウントセキュリティ</primary></indexterm>
<indexterm><primary>smbpasswd</primary></indexterm>
		<command>pdbedit</command>ツールはアカウントセキュリティとポリシー
		設定を管理できる唯一のツールである。これは、smbpasswdが出来ること
		と同様のことを含むスーパーセットである。
		</para>

		<para>
		<indexterm><primary>pdbedit</primary></indexterm>
<indexterm><primary>アカウントのインポート/エクスポート</primary></indexterm>
<indexterm><primary>passdbバックエンド</primary></indexterm>
		<command>pdbedit</command>の用途の中で特に重要なものの一つとして、
		passdbバックエンドから他へのアカウント情報のインポート/エクスポート
		機能がある。
		</para>

		<sect3>
		<title>ユーザアカウントマネージャ</title>

		<para>
<indexterm><primary>pdbedit</primary></indexterm>
<indexterm><primary>smbpasswd</primary></indexterm>
<indexterm><primary>システムアカウント</primary></indexterm>
<indexterm><primary>ユーザアカウント</primary></indexterm>
<indexterm><primary>ドメインユーザマネージャ</primary></indexterm>
<indexterm><primary>add user script</primary></indexterm>
<indexterm><primary>interface scripts</primary></indexterm>
		The <command>pdbedit</command> tool, like the <command>smbpasswd</command> tool, requires
		that a POSIX user account already exists in the UNIX/Linux system accounts database (backend).
		Neither tool will call out to the operating system to create a user account because this is
		considered to be the responsibility of the system administrator. When the Windows NT4 domain
		user manager is used to add an account, Samba will implement the <literal>add user script</literal>
		(as well as the other interface scripts) to ensure that user, group and machine accounts are
		correctly created and changed. The use of the <command>pdbedit</command> tool does not
		make use of these interface scripts.
		</para>

		<para>
<indexterm><primary>pdbedit</primary></indexterm>
<indexterm><primary>POSIX account</primary></indexterm>
		Before attempting to use the <command>pdbedit</command> tool to manage user and machine
		accounts, make certain that a system (POSIX) account has already been created.
		</para>

		<sect4>
		<title>Listing User and Machine Accounts</title>

		<para>
<indexterm><primary>tdbsam</primary></indexterm>
<indexterm><primary>password backend</primary></indexterm>
		The following is an example of the user account information that is stored in
		a tdbsam password backend. This listing was produced by running:
<screen>
&prompt;<userinput>pdbedit -Lv met</userinput>
UNIX username:        met
NT username:          met
Account Flags:        [U          ]
User SID:             S-1-5-21-1449123459-1407424037-3116680435-2004
Primary Group SID:    S-1-5-21-1449123459-1407424037-3116680435-1201
Full Name:            Melissa E Terpstra
Home Directory:       \\frodo\met\Win9Profile
HomeDir Drive:        H:
Logon Script:         scripts\logon.bat
Profile Path:         \\frodo\Profiles\met
Domain:               &example.workgroup;
Account desc:
Workstations:         melbelle
Munged dial:
Logon time:           0
Logoff time:          Mon, 18 Jan 2038 20:14:07 GMT
Kickoff time:         Mon, 18 Jan 2038 20:14:07 GMT
Password last set:    Sat, 14 Dec 2002 14:37:03 GMT
Password can change:  Sat, 14 Dec 2002 14:37:03 GMT
Password must change: Mon, 18 Jan 2038 20:14:07 GMT
</screen>
		</para>

		<para>
<indexterm><primary>smbpasswd format</primary></indexterm>
		Accounts can also be listed in the older <literal>smbpasswd</literal> format:
<screen>
&rootprompt;<userinput>pdbedit -Lw</userinput>
root:0:84B0D8E14D158FF8417EAF50CFAC29C3:
     AF6DD3FD4E2EA8BDE1695A3F05EFBF52:[U          ]:LCT-42681AB8:
jht:1000:6BBC4159020A52741486235A2333E4D2:
     CC099521AD554A3C3CF2556274DBCFBC:[U          ]:LCT-40D75B5B:
rcg:1002:E95D4331A6F23AF8AAD3B435B51404EE:
     BB0F2C39B04CA6100F0E535DF8314B43:[U          ]:LCT-40D7C5A3:
afw:1003:1AAFA7F9F6DC1DEAAAD3B435B51404EE:
     CE92C2F9471594CDC4E7860CA6BC62DB:[T          ]:LCT-40DA501F:
met:1004:A2848CB7E076B435AAD3B435B51404EE:
     F25F5D3405085C555236B80B7B22C0D2:[U          ]:LCT-4244FAB8:
aurora$:1005:060DE593EA638B8ACC4A19F14D2FF2BB:
     060DE593EA638B8ACC4A19F14D2FF2BB:[W          ]:LCT-4173E5CC:
temptation$:1006:XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX:
     A96703C014E404E33D4049F706C45EE9:[W          ]:LCT-42BF0C57:
vaioboss$:1001:XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX:
     88A30A095160072784C88F811E89F98A:[W          ]:LCT-41C3878D:
frodo$:1008:15891DC6B843ECA41249940C814E316B:
     B68EADCCD18E17503D3DAD3E6B0B9A75:[W          ]:LCT-42B7979F:
marvel$:1011:BF709959C3C94E0B3958B7B84A3BB6F3:
     C610EFE9A385A3E8AA46ADFD576E6881:[W          ]:LCT-40F07A4
</screen>
<indexterm><primary>login id</primary></indexterm>
<indexterm><primary>UID</primary></indexterm>
<indexterm><primary>LanManger password</primary></indexterm>
<indexterm><primary>NT password</primary></indexterm>
<indexterm><primary>Account Flags</primary></indexterm>
<indexterm><primary>LCT</primary><see>last change time</see></indexterm>
		The account information that was returned by this command in order from left to right
		consists of the following colon separated data:
		</para>

		<itemizedlist>
			<listitem><para>Login ID.</para></listitem>
			<listitem><para>UNIX UID.</para></listitem>
			<listitem>
				<para>Microsoft LanManager password hash (password converted to upper-case then hashed.</para>
			</listitem>
			<listitem><para>Microsoft NT password hash (hash of the case-preserved password).</para></listitem>
			<listitem><para>Samba SAM Account Flags.</para></listitem>
			<listitem><para>The LCT data (password last change time).</para></listitem>
		</itemizedlist>

		<para>
<indexterm><primary>Account Flags</primary></indexterm>
<indexterm><primary>pdbedit</primary></indexterm>
		The Account Flags parameters are documented in the <command>pdbedit</command> man page, and are
		briefly documented in <link linkend="TOSHARG-acctflags">the Account Flags Management section</link>.
		</para>

		<para>
<indexterm><primary>last change time</primary></indexterm>
		The LCT data consists of 8 hexadecimal characters representing the time since January 1, 1970, of
		the time when the password was last changed.
		</para>

		</sect4>

		<sect4>
		<title>Adding User Accounts</title>

		<para>
<indexterm><primary>pdbedit</primary></indexterm>
<indexterm><primary>add a user account</primary></indexterm>
<indexterm><primary>standalone server</primary></indexterm>
<indexterm><primary>domain</primary></indexterm>
<indexterm><primary>SambaSAMAccount</primary></indexterm>
		The <command>pdbedit</command> can be used to add a user account to a standalone server
		or to a domain. In the example shown here the account for the user <literal>vlaan</literal>
		has been created before attempting to add the SambaSAMAccount.
<screen>
&rootprompt; pdbedit -a vlaan
new password: secretpw
retype new password: secretpw
Unix username:        vlaan
NT username:          vlaan
Account Flags:        [U          ]
User SID:             S-1-5-21-726309263-4128913605-1168186429-3014
Primary Group SID:    S-1-5-21-726309263-4128913605-1168186429-513
Full Name:            Victor Laan
Home Directory:       \\frodo\vlaan
HomeDir Drive:        H:
Logon Script:         scripts\logon.bat
Profile Path:         \\frodo\profiles\vlaan
Domain:               &example.workgroup;
Account desc:         Guest User
Workstations:
Munged dial:
Logon time:           0
Logoff time:          Mon, 18 Jan 2038 20:14:07 GMT
Kickoff time:         Mon, 18 Jan 2038 20:14:07 GMT
Password last set:    Wed, 29 Jun 2005 19:35:12 GMT
Password can change:  Wed, 29 Jun 2005 19:35:12 GMT
Password must change: Mon, 18 Jan 2038 20:14:07 GMT
Last bad password   : 0
Bad password count  : 0
Logon hours         : FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
</screen>
		</para>

		</sect4>

		<sect4>
		<title>Deleting Accounts</title>

		<para>
<indexterm><primary>account deleted</primary></indexterm>
<indexterm><primary>SambaSAMAccount</primary></indexterm>
<indexterm><primary>pdbedit</primary></indexterm>
<indexterm><primary>passdb backend</primary></indexterm>
		An account can be deleted from the SambaSAMAccount database
<screen>
&rootprompt; pdbedit -x vlaan
</screen>
		The account is removed without further screen output. The account is removed only from the
		SambaSAMAccount (passdb backend) database, it is not removed from the UNIX account backend.
		</para>

		<para>
<indexterm><primary>delete user script</primary></indexterm>
<indexterm><primary>pdbedit</primary></indexterm>
		The use of the NT4 domain user manager to delete an account will trigger the <parameter>delete user
		script</parameter>, but not the <command>pdbedit</command> tool.
		</para>

		</sect4>

		<sect4>
		<title>Changing User Accounts</title>

		<para>
<indexterm><primary>pdbedit</primary></indexterm>
		Refer to the <command>pdbedit</command> man page for a full synopsis of all operations
		that are available with this tool.
		</para>

		<para>
<indexterm><primary>pdbedit</primary></indexterm>
		An example of a simple change in the user account information is the change of the full name
		information shown here:
<screen>
&rootprompt; pdbedit -r --fullname="Victor Aluicious Laan" vlaan
...
Primary Group SID:    S-1-5-21-726309263-4128913605-1168186429-513
Full Name:            Victor Aluicious Laan
Home Directory:       \\frodo\vlaan
...
</screen>
		</para>

		<para>
<indexterm><primary>grace time</primary></indexterm>
<indexterm><primary>password expired</primary></indexterm>
<indexterm><primary>expired password</primary></indexterm>
		Let us assume for a moment that a user's password has expired and the user is unable to
		change the password at this time. It may be necessary to give the user additional grace time
		so that it is possible to continue to work with the account and the original password. This
		demonstrates how the password expiration settings may be updated
<screen>
&rootprompt; pdbedit -Lv vlaan
...
Password last set:    Sun, 09 Sep 2001 22:21:40 GMT
Password can change:  Thu, 03 Jan 2002 15:08:35 GMT
Password must change: Thu, 03 Jan 2002 15:08:35 GMT
Last bad password   : Thu, 03 Jan 2002 15:08:35 GMT
Bad password count  : 2
...
</screen>
<indexterm><primary>bad logon attempts</primary></indexterm>
<indexterm><primary>lock the account</primary></indexterm>
		The user has recorded 2 bad logon attempts and the next will lock the account, but the
		password is also expired. Here is how this account can be reset:
<screen>
&rootprompt; pdbedit -z vlaan
...
Password last set:    Sun, 09 Sep 2001 22:21:40 GMT
Password can change:  Thu, 03 Jan 2002 15:08:35 GMT
Password must change: Thu, 03 Jan 2002 15:08:35 GMT
Last bad password   : 0
Bad password count  : 0
...
</screen>
		The <literal>Password must change:</literal> parameter can be reset like this:
<screen>
&rootprompt; pdbedit --pwd-must-change-time=1200000000 vlaan
...
Password last set:    Sun, 09 Sep 2001 22:21:40 GMT
Password can change:  Thu, 03 Jan 2002 15:08:35 GMT
Password must change: Thu, 10 Jan 2008 14:20:00 GMT
...
</screen>
		Another way to use this tools is to set the date like this:
<screen>
&rootprompt; pdbedit --pwd-must-change-time="2010-01-01" \
              --time-format="%Y-%m-%d" vlaan
...
Password last set:    Sun, 09 Sep 2001 22:21:40 GMT
Password can change:  Thu, 03 Jan 2002 15:08:35 GMT
Password must change: Fri, 01 Jan 2010 00:00:00 GMT
...
</screen>
<indexterm><primary>strptime</primary></indexterm>
<indexterm><primary>time format</primary></indexterm>
		Refer to the strptime man page for specific time format information.
		</para>

		<para>
<indexterm><primary>pdbedit</primary></indexterm>
<indexterm><primary>SambaSAMAccount</primary></indexterm>
		Please refer to the pdbedit man page for further information relating to SambaSAMAccount
		management.
		</para>

		<sect5 id="TOSHARG-acctflags">
		<title>Account Flags Management</title>

		<para>
<indexterm><primary>Samba SAM account flags</primary></indexterm>
<indexterm><primary>account control block</primary><see>ACB</see></indexterm>
<indexterm><primary>account encode_bits</primary></indexterm>
<indexterm><primary>account control flags</primary></indexterm>
		The Samba SAM account flags are properly called the ACB (account control block) within
		the Samba source code. In some parts of the Samba source code they are referred to as the
		account encode_bits, and also as the account control flags.
		</para>

		<para>
<indexterm><primary>pdbedit</primary></indexterm>
<indexterm><primary>user account</primary></indexterm>
<indexterm><primary>machine account</primary></indexterm>
<indexterm><primary>trust account</primary></indexterm>
<indexterm><primary>damaged data</primary></indexterm>
		The manual adjustment of user, machine (workstation or server) or an inter-domain trust
		account account flgas should not be necessary under normal conditions of use of Samba. On the other hand,
		where this information becomes corrupted for some reason, the ability to correct the damaged data is certainly
		useful. The tool of choice by which such correction can be affected is the <command>pdbedit</command> utility.
		</para>

		<para>
<indexterm><primary>account flags</primary></indexterm>
<indexterm><primary>LDAP directory</primary></indexterm>
		There have been a few requests for information regarding the account flags from developers
		who are creating their own Samba management tools. An example of a need for information regarding
		the proper management of the account flags is evident when developing scripts that will be used
		to manage an LDAP directory.
		</para>

		<para>
<indexterm><primary>pdbedit</primary></indexterm>
<indexterm><primary>account flag order</primary></indexterm>
		The account flag field can contain up to 16 characters. Presently, only 11 are in use.
		These are listed in <link linkend="accountflags">Samba SAM Account Control Block Flags</link>.
		The order in which the flags are specified to the <command>pdbedit</command> command is not important.
		In fact, they can be set without problem in any order in the SambaAcctFlags record in the LDAP directory.
		</para>

		<table frame="all" id="accountflags">
		<title>Samba SAM Account Control Block Flags</title>
        <tgroup cols="2" align="center">
            <thead>
            <row><entry align="center">Flag</entry><entry>Description</entry></row>
            </thead>
            <tbody>
            <row>
				<entry align="center">D</entry>
				<entry align="left">Account is disabled.</entry>
			</row>
            <row>
				<entry align="center">H</entry>
				<entry align="left">A home directory is required.</entry>
			</row>
            <row>
				<entry align="center">I</entry>
				<entry align="left">An inter-domain trust account.</entry>
			</row>
            <row>
				<entry align="center">L</entry>
				<entry align="left">Account has been auto-locked.</entry>
			</row>
            <row>
				<entry align="center">M</entry>
				<entry align="left">An MNS (Microsoft network service) logon account.</entry>
			</row>
            <row>
				<entry align="center">N</entry>
				<entry align="left">Password not required.</entry>
			</row>
            <row>
				<entry align="center">S</entry>
				<entry align="left">A server trust account.</entry>
			</row>
            <row>
				<entry align="center">T</entry>
				<entry align="left">Temporary duplicate account entry.</entry>
			</row>
            <row>
				<entry align="center">U</entry>
				<entry align="left">A normal user account.</entry>
			</row>
            <row>
				<entry align="center">W</entry>
				<entry align="left">A workstation trust account.</entry>
			</row>
            <row>
				<entry align="center">X</entry>
				<entry align="left">Password does not expire.</entry>
			</row>
            </tbody>
        </tgroup>
        </table>

		<para>
<indexterm><primary>pdbedit</primary></indexterm>
<indexterm><primary>account control flags</primary></indexterm>
		An example of use of the <command>pdbedit</command> utility to set the account control flags
		is shown here:
<screen>
&rootprompt; pdbedit -r -c "[DLX]" jht
Unix username:        jht
NT username:          jht
Account Flags:        [DHULX      ]
User SID:             S-1-5-21-729263-4123605-1186429-3000
Primary Group SID:    S-1-5-21-729263-4123605-1186429-513
Full Name:            John H Terpstra,Utah Office
Home Directory:       \\aurora\jht
HomeDir Drive:        H:
Logon Script:         scripts\logon.bat
Profile Path:         \\aurora\profiles\jht
Domain:               MIDEARTH
Account desc:         BluntObject
Workstations:
Logon time:           0
Logoff time:          Mon, 18 Jan 2038 20:14:07 GMT
Kickoff time:         0
Password last set:    Sun, 03 Jul 2005 23:19:18 GMT
Password can change:  Sun, 03 Jul 2005 23:19:18 GMT
Password must change: Mon, 18 Jan 2038 20:14:07 GMT
Last bad password   : 0
Bad password count  : 0
Logon hours         : FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
</screen>
<indexterm><primary>default settings</primary></indexterm>
	The flags can be reset to the default settings by executing:
<screen>
&rootprompt; pdbedit -r -c "[]" jht
Unix username:        jht
NT username:          jht
Account Flags:        [U          ]
User SID:             S-1-5-21-729263-4123605-1186429-3000
Primary Group SID:    S-1-5-21-729263-4123605-1186429-513
Full Name:            John H Terpstra,Utah Office
Home Directory:       \\aurora\jht
HomeDir Drive:        H:
Logon Script:         scripts\logon.bat
Profile Path:         \\aurora\profiles\jht
Domain:               MIDEARTH
Account desc:         BluntObject
Workstations:
Logon time:           0
Logoff time:          Mon, 18 Jan 2038 20:14:07 GMT
Kickoff time:         0
Password last set:    Sun, 03 Jul 2005 23:19:18 GMT
Password can change:  Sun, 03 Jul 2005 23:19:18 GMT
Password must change: Mon, 18 Jan 2038 20:14:07 GMT
Last bad password   : 0
Bad password count  : 0
Logon hours         : FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
</screen>
		</para>

		</sect5>

		</sect4>

		<sect4>
		<title>Domain Account Policy Managment</title>

		<para>
<indexterm><primary>domain account access policies</primary></indexterm>
<indexterm><primary>access policies</primary></indexterm>
		To view the domain account access policies that may be configured execute:
<screen>
&rootprompt; pdbedit -P ?
No account policy by that name
Account policy names are :
min password length
password history
user must logon to change password
maximum password age
minimum password age
lockout duration
reset count minutes
bad lockout attempt
disconnect time
refuse machine password change
</screen>
		</para>

		<para>
		Commands will be executed to establish controls for our domain as follows:
		</para>

		<orderedlist>
			<listitem><para>min password length = 8 characters.</para></listitem>
			<listitem><para>password history = last 4 passwords.</para></listitem>
			<listitem><para>maximum password age = 90 days.</para></listitem>
			<listitem><para>minimum password age = 7 days.</para></listitem>
			<listitem><para>bad lockout attempt = 8 bad logon attempts.</para></listitem>
			<listitem><para>lockout duration = forever, account must be manually reenabled.</para></listitem>
		</orderedlist>

		<para>
		The following command execution will achieve these settings:
<screen>
&rootprompt; pdbedit -P "min password length" -C 8
account policy value for min password length was 5
account policy value for min password length is now 8
&rootprompt; pdbedit -P "password history" -C 4
account policy value for password history was 0
account policy value for password history is now 4
&rootprompt; pdbedit -P "maximum password age" -C 7776000
account policy value for maximum password age was 4294967295
account policy value for maximum password age is now 7776000
&rootprompt; pdbedit -P "minimum password age" -C 7
account policy value for minimum password age was 0
account policy value for minimum password age is now 7
&rootprompt; pdbedit -P "bad lockout attempt" -C 8
account policy value for bad lockout attempt was 0
account policy value for bad lockout attempt is now 8
&rootprompt; pdbedit -P "lockout duration" -C -1
account policy value for lockout duration was 30
account policy value for lockout duration is now 4294967295
</screen>
		</para>

<note><para>
To set the maximum (infinite) lockout time use the value of -1.
</para></note>

<warning><para>
Account policies must be set individually on each PDC and BDC. At this time (Samba 3.0.11 to Samba 3.0.14a)
account policies are not replicated automatically. This may be fixed before Samba 3.0.20 ships or some
time there after. Please check the WHATSNEW.txt file in the Samba-3 tarball for specific update notiations
regarding this facility.
</para></warning>

		</sect4>

		</sect3>

		<sect3>
		<title>Account Import/Export</title>

		<para>
		<indexterm><primary>pdbedit</primary></indexterm>
<indexterm><primary>account import/export</primary></indexterm>
<indexterm><primary>authentication</primary></indexterm>
		The <command>pdbedit</command> tool allows import/export of authentication (account)
		databases from one backend to another. For example, to import/export accounts from an
		old <filename>smbpasswd</filename> database to a <parameter>tdbsam</parameter>
		backend:
		</para>

		<procedure>
			<step><para>
<indexterm><primary>pdbedit</primary></indexterm>
<screen>
&rootprompt;<userinput>pdbedit -i smbpasswd -e tdbsam</userinput>
</screen>
			</para></step>

			<step><para>
<indexterm><primary>smbpasswd</primary></indexterm>
			Replace the <parameter>smbpasswd</parameter> with <parameter>tdbsam</parameter> in the
			<parameter>passdb backend</parameter> configuration in &smb.conf;.
			</para></step>
		</procedure>

	</sect3>
	</sect2>
</sect1>

<sect1>
<title>Password Backends</title>

<para>
<indexterm><primary>account database</primary></indexterm>
<indexterm><primary>SMB/CIFS server</primary></indexterm>
Samba offers flexibility in backend account database design. The flexibility is immediately obvious as one
begins to explore this capability. Recent changes to Samba (since 3.0.23) have removed the mulitple backend
feature in order to simplify problems that broke some installations. This removal has made the internal
operation of Samba-3 more consistent and predictable.
</para>

<para>
<indexterm><primary>multiple backends</primary></indexterm>
<indexterm><primary>tdbsam databases</primary></indexterm>
Beginning with Samba 3.0.23 it is no longer possible to specify use of mulitple passdb backends. Earlier
versions of Samba-3 made it possible to specify multiple password backends, and even multiple
backends of the same type. The multiple passdb backend capability caused many problems with name to SID and
SID to name ID resolution.  The Samba team wrestled with the challenges and decided that this feature needed
to be removed.
</para>

	<sect2>
	<title>Plaintext</title>

		<para>
<indexterm><primary>user database</primary></indexterm>
<indexterm><primary>/etc/samba/smbpasswd</primary></indexterm>
<indexterm><primary>/etc/smbpasswd</primary></indexterm>
<indexterm><primary>password encryption</primary></indexterm>
<indexterm><primary>/etc/passwd</primary></indexterm>
<indexterm><primary>PAM</primary></indexterm>
		Older versions of Samba retrieved user information from the UNIX user database
		and eventually some other fields from the file <filename>/etc/samba/smbpasswd</filename>
		or <filename>/etc/smbpasswd</filename>. When password encryption is disabled, no
		SMB-specific data is stored at all. Instead, all operations are conducted via the way
		that the Samba host OS will access its <filename>/etc/passwd</filename> database.
		On most Linux systems, for example, all user and group resolution is done via PAM.
		</para>

	</sect2>

	<sect2>
	<title>smbpasswd: Encrypted Password Database</title>

		<para>
		<indexterm><primary>SAM backend</primary><secondary>smbpasswd</secondary></indexterm>
<indexterm><primary>user account</primary></indexterm>
<indexterm><primary>LM/NT password hashes</primary></indexterm>
<indexterm><primary>smbpasswd</primary></indexterm>
		Traditionally, when configuring <smbconfoption name="encrypt passwords">yes</smbconfoption>
		in Samba's &smb.conf; file, user account information such as username, LM/NT password hashes,
		password change times, and account flags have been stored in the <filename>smbpasswd(5)</filename>
		file. There are several disadvantages to this approach for sites with large numbers of users
		(counted in the thousands).
		</para>

		<itemizedlist>
		<listitem><para>
<indexterm><primary>lookups</primary></indexterm>
		The first problem is that all lookups must be performed sequentially. Given that
		there are approximately two lookups per domain logon (one during intial logon validation
		and one for a session connection setup, such as when mapping a network drive or printer), this
		is a performance bottleneck for large sites. What is needed is an indexed approach
		such as that used in databases.
		</para></listitem>

		<listitem><para>
<indexterm><primary>smbpasswd</primary></indexterm>
<indexterm><primary>replicate</primary></indexterm>
<indexterm><primary>rsync</primary></indexterm>
<indexterm><primary>ssh</primary></indexterm>
<indexterm><primary>custom scripts</primary></indexterm>
		The second problem is that administrators who desire to replicate an smbpasswd file
		to more than one Samba server are left to use external tools such as
		<command>rsync(1)</command> and <command>ssh(1)</command> and write custom,
		in-house scripts.
		</para></listitem>

		<listitem><para>
<indexterm><primary>smbpasswd</primary></indexterm>
<indexterm><primary>home directory</primary></indexterm>
<indexterm><primary>password expiration</primary></indexterm>
<indexterm><primary>relative identifier</primary></indexterm>
<indexterm><primary>relative identifier</primary><see>RID</see></indexterm>
		Finally, the amount of information that is stored in an smbpasswd entry leaves
		no room for additional attributes such as a home directory, password expiration time,
		or even a relative identifier (RID).
		</para></listitem>
		</itemizedlist>

		<para>
<indexterm><primary>user attributes</primary></indexterm>
<indexterm><primary>smbd</primary></indexterm>
<indexterm><primary>API</primary></indexterm>
<indexterm><primary>samdb interface</primary></indexterm>
		As a result of these deficiencies, a more robust means of storing user attributes
		used by smbd was developed. The API that defines access to user accounts
		is commonly referred to as the samdb interface (previously, this was called the passdb
		API and is still so named in the Samba source code trees).
		</para>

		<para>
<indexterm><primary>passdb backends</primary></indexterm>
<indexterm><primary>smbpasswd plaintext database</primary></indexterm>
<indexterm><primary>tdbsam</primary></indexterm>
<indexterm><primary>ldapsam</primary></indexterm>
<indexterm><primary>enterprise</primary></indexterm>
		Samba provides an enhanced set of passdb backends that overcome the deficiencies
		of the smbpasswd plaintext database. These are tdbsam and ldapsam.
		Of these, ldapsam will be of most interest to large corporate or enterprise sites.
		</para>

	</sect2>

	<sect2>
	<title>tdbsam</title>

		<para>
		<indexterm><primary>SAM backend</primary><secondary>tdbsam</secondary></indexterm>
<indexterm><primary>trivial database</primary><see>TDB</see></indexterm>
<indexterm><primary>machine account</primary></indexterm>
		Samba can store user and machine account data in a <quote>TDB</quote> (trivial database).
		Using this backend does not require any additional configuration. This backend is
		recommended for new installations that do not require LDAP.
		</para>

		<para>
<indexterm><primary>tdbsam</primary></indexterm>
<indexterm><primary>PDC</primary></indexterm>
<indexterm><primary>BDC</primary></indexterm>
<indexterm><primary>scalability</primary></indexterm>
		As a general guide, the Samba Team does not recommend using the tdbsam backend for sites
		that have 250 or more users. Additionally, tdbsam is not capable of scaling for use
		in sites that require PDB/BDC implementations that require replication of the account
		database. Clearly, for reason of scalability, the use of ldapsam should be encouraged.
		</para>

		<para>
<indexterm><primary>250-user limit</primary></indexterm>
<indexterm><primary>performance-based</primary></indexterm>
<indexterm><primary>tdbsam</primary></indexterm>
		The recommendation of a 250-user limit is purely based on the notion that this
		would generally involve a site that has routed networks, possibly spread across
		more than one physical location. The Samba Team has not at this time established
		the performance-based scalability limits of the tdbsam architecture.
		</para>

		<para>
<indexterm><primary>4,500 user accounts</primary></indexterm>
<indexterm><primary>passdb backend</primary></indexterm>
<indexterm><primary>tdbsam</primary></indexterm>
<indexterm><primary>SambaSAMAccount</primary></indexterm>
		There are sites that have thousands of users and yet require only one server.
		One site recently reported having 4,500 user accounts on one UNIX system and
		reported excellent performance with the <literal>tdbsam</literal> passdb backend.
		The limitation of where the <literal>tdbsam</literal> passdb backend can be used
		is not one pertaining to a limitation in the TDB storage system, it is based
		only on the need for a reliable distribution mechanism for the SambaSAMAccount
		backend.
		</para>

	</sect2>

	<sect2>
	<title>ldapsam</title>

		<para>
<indexterm><primary>LDAP</primary></indexterm>
<indexterm><primary>ldapsam</primary></indexterm>
		<indexterm><primary>SAM backend</primary><secondary>ldapsam</secondary></indexterm>
		There are a few points to stress that the ldapsam does not provide. The LDAP
		support referred to in this documentation does not include:
		</para>

		<itemizedlist>
			<listitem><para>A means of retrieving user account information from
			a Windows 200x Active Directory server.</para></listitem>
			<listitem><para>A means of replacing /etc/passwd.</para></listitem>
		</itemizedlist>

		<para>
<indexterm><primary>LDAP</primary></indexterm>
<indexterm><primary>NSS</primary></indexterm>
<indexterm><primary>PAM</primary></indexterm>
<indexterm><primary>LGPL</primary></indexterm>
		The second item can be accomplished by using LDAP NSS and PAM modules. LGPL versions of these libraries can be
		obtained from <ulink url="http://www.padl.com/">PADL Software</ulink>.  More information about the
		configuration of these packages may be found in <ulink url="http://safari.oreilly.com/?XmlId=1-56592-491-6">
		<emphasis>LDAP, System Administration</emphasis> by Gerald Carter, Chapter 6, Replacing NIS"</ulink>.
		</para>

		<para>
<indexterm><primary>LDAP directory</primary></indexterm>
<indexterm><primary>smbpasswd</primary></indexterm>
<indexterm><primary>directory server</primary></indexterm>
		This document describes how to use an LDAP directory for storing Samba user
		account information traditionally stored in the smbpasswd(5) file. It is
		assumed that the reader already has a basic understanding of LDAP concepts
		and has a working directory server already installed. For more information
		on LDAP architectures and directories, please refer to the following sites:
		</para>

		<itemizedlist>
			<listitem><para><ulink url="http://www.openldap.org/">OpenLDAP</ulink></para></listitem>
			<listitem><para><ulink url="http://www.sun.com/software/products/directory_srvr_ee/index.xml">
				Sun One Directory Server</ulink></para></listitem>
			<listitem><para><ulink url="http://www.novell.com/products/edirectory/">Novell eDirectory</ulink></para></listitem>
			<listitem><para><ulink url="http://www-306.ibm.com/software/tivoli/products/directory-server/">IBM
				Tivoli Directory Server</ulink></para></listitem>
			<listitem><para><ulink url="http://www.redhat.com/software/rha/directory/">Red Hat Directory
				Server</ulink></para></listitem>
			<listitem><para><ulink url="http://www.linuxsecurity.com/content/view/119229">Fedora Directory
				Server</ulink></para></listitem>
		</itemizedlist>

		<para>
		Two additional Samba resources that may prove to be helpful are:
		</para>

		<itemizedlist>
			<listitem><para>
<indexterm><primary>Samba-PDC-LDAP-HOWTO</primary></indexterm>
			The <ulink url="http://www.unav.es/cti/ldap-smb/ldap-smb-3-howto.html">Samba-PDC-LDAP-HOWTO</ulink>
			maintained by Ignacio Coupeau.
			</para></listitem>

			<listitem><para>
<indexterm><primary>IDEALX</primary></indexterm>
<indexterm><primary>NT migration scripts</primary></indexterm>
<indexterm><primary>smbldap-tools</primary></indexterm>
			The NT migration scripts from <ulink url="http://samba.idealx.org/">IDEALX</ulink> that are
			geared to manage users and groups in such a Samba-LDAP domain controller configuration.
			Idealx also produced the smbldap-tools and the Interactive Console Management tool.
			</para></listitem>
		</itemizedlist>

		<sect3>
		<title>Supported LDAP Servers</title>

			<para>
<indexterm><primary>LDAP</primary></indexterm>
<indexterm><primary>ldapsam</primary></indexterm>
<indexterm><primary>OpenLDAP</primary></indexterm>
<indexterm><primary>Netscape's Directory Server</primary></indexterm>
			The LDAP ldapsam code was developed and tested using the OpenLDAP 2.x server and
			client libraries. The same code should work with Netscape's Directory Server and client SDK.
			However, there are bound to be compile errors and bugs. These should not be hard to fix.
			Please submit fixes via the process outlined in <link linkend="bugreport">Reporting Bugs</link>.
			</para>

			<para>
			Samba is capable of working with any standards-compliant LDAP server.
			</para>

		</sect3>

		<sect3>
		<title>Schema and Relationship to the RFC 2307 posixAccount</title>


			<para>
			Samba-3.0 includes the necessary schema file for OpenLDAP 2.x in the
			<filename>examples/LDAP/samba.schema</filename> directory of the source code distribution
			tarball. The schema entry for the sambaSamAccount ObjectClass is shown here:
<programlisting>
ObjectClass (1.3.6.1.4.1.7165.2.2.6 NAME 'sambaSamAccount' SUP top AUXILIARY
    DESC 'Samba-3.0 Auxiliary SAM Account'
    MUST ( uid $ sambaSID )
    MAY  ( cn $ sambaLMPassword $ sambaNTPassword $ sambaPwdLastSet $
          sambaLogonTime $ sambaLogoffTime $ sambaKickoffTime $
          sambaPwdCanChange $ sambaPwdMustChange $ sambaAcctFlags $
          displayName $ sambaHomePath $ sambaHomeDrive $ sambaLogonScript $
          sambaProfilePath $ description $ sambaUserWorkstations $
          sambaPrimaryGroupSID $ sambaDomainName ))
</programlisting>
			</para>

			<para>
<indexterm><primary>samba.schema</primary></indexterm>
<indexterm><primary>OpenLDAP</primary></indexterm>
<indexterm><primary>OID</primary></indexterm>
			The <filename>samba.schema</filename> file has been formatted for OpenLDAP 2.0/2.1.
			The Samba Team owns the OID space used by the above schema and recommends its use.
			If you translate the schema to be used with Netscape DS, please submit the modified
			schema file as a patch to <ulink url="mailto:jerry@samba.org">jerry@samba.org</ulink>.
			</para>

			<para>
<indexterm><primary>smbpasswd</primary></indexterm>
<indexterm><primary>/etc/passwd</primary></indexterm>
<indexterm><primary>sambaSamAccount</primary></indexterm>
<indexterm><primary>AUXILIARY</primary></indexterm>
<indexterm><primary>ObjectClass</primary></indexterm>
<indexterm><primary>LDAP</primary></indexterm>
<indexterm><primary>RFC 2307.</primary></indexterm>
			Just as the smbpasswd file is meant to store information that provides information
			additional to  a user's <filename>/etc/passwd</filename> entry, so is the sambaSamAccount
			object meant to supplement the UNIX user account information. A sambaSamAccount is an
			<constant>AUXILIARY</constant> ObjectClass, so it can be used to augment existing
			user account information in the LDAP directory, thus providing information needed
			for Samba account handling. However, there are several fields (e.g., uid) that overlap
			with the posixAccount ObjectClass outlined in RFC 2307. This is by design.
			</para>

			<para>
<indexterm><primary>account information</primary></indexterm>
<indexterm><primary>sambaSamAccount</primary></indexterm>
<indexterm><primary>posixAccount</primary></indexterm>
<indexterm><primary>ObjectClasses</primary></indexterm>
<indexterm><primary>smbd</primary></indexterm>
<indexterm><primary>getpwnam</primary></indexterm>
<indexterm><primary>LDAP</primary></indexterm>
<indexterm><primary>NIS</primary></indexterm>
<indexterm><primary>NSS</primary></indexterm>
			In order to store all user account information (UNIX and Samba) in the directory,
			it is necessary to use the sambaSamAccount and posixAccount ObjectClasses in
			combination. However, <command>smbd</command> will still obtain the user's UNIX account
			information via the standard C library calls, such as getpwnam().
			This means that the Samba server must also have the LDAP NSS library installed
			and functioning correctly. This division of information makes it possible to
			store all Samba account information in LDAP, but still maintain UNIX account
			information in NIS while the network is transitioning to a full LDAP infrastructure.
			</para>
		</sect3>

		<sect3>
		<title>OpenLDAP Configuration</title>

		<para>
<indexterm><primary>sambaSamAccount</primary></indexterm>
<indexterm><primary>OpenLDAP</primary></indexterm>
<indexterm><primary>slapd</primary></indexterm>
<indexterm><primary>samba.schema</primary></indexterm>
		To include support for the sambaSamAccount object in an OpenLDAP directory
		server, first copy the samba.schema file to slapd's configuration directory.
		The samba.schema file can be found in the directory <filename>examples/LDAP</filename>
		in the Samba source distribution.
<screen>
&rootprompt;<userinput>cp samba.schema /etc/openldap/schema/</userinput>
</screen>
		</para>

		<para>
<indexterm><primary>samba.schema</primary></indexterm>
<indexterm><primary>slapd.conf</primary></indexterm>
<indexterm><primary>sambaSamAccount</primary></indexterm>
<indexterm><primary>cosine.schema</primary></indexterm>
<indexterm><primary>uid</primary></indexterm>
<indexterm><primary>inetorgperson.schema</primary></indexterm>
<indexterm><primary>displayName</primary></indexterm>
<indexterm><primary>attribute</primary></indexterm>
		Next, include the <filename>samba.schema</filename> file in <filename>slapd.conf</filename>.
		The sambaSamAccount object contains two attributes that depend on other schema
		files. The <parameter>uid</parameter> attribute is defined in <filename>cosine.schema</filename> and
		the <parameter>displayName</parameter> attribute is defined in the <filename>inetorgperson.schema</filename>
		file. Both of these must be included before the <filename>samba.schema</filename> file.
<programlisting>
## /etc/openldap/slapd.conf

## schema files (core.schema is required by default)
include	           /etc/openldap/schema/core.schema

## needed for sambaSamAccount
include            /etc/openldap/schema/cosine.schema
include            /etc/openldap/schema/inetorgperson.schema
include            /etc/openldap/schema/nis.schema
include            /etc/openldap/schema/samba.schema
....
</programlisting>
		</para>

		<para>
<indexterm><primary>sambaSamAccount</primary></indexterm>
<indexterm><primary>posixAccount</primary></indexterm>
<indexterm><primary>posixGroup</primary></indexterm>
<indexterm><primary>ObjectClasses</primary></indexterm>
		It is recommended that you maintain some indices on some of the most useful attributes,
		as in the following example, to speed up searches made on sambaSamAccount ObjectClasses
		(and possibly posixAccount and posixGroup as well):
		</para>

<para>
<programlisting>
# Indices to maintain
## required by OpenLDAP
index objectclass             eq

index cn                      pres,sub,eq
index sn                      pres,sub,eq
## required to support pdb_getsampwnam
index uid                     pres,sub,eq
## required to support pdb_getsambapwrid()
index displayName             pres,sub,eq

## uncomment these if you are storing posixAccount and
## posixGroup entries in the directory as well
##index uidNumber               eq
##index gidNumber               eq
##index memberUid               eq

index   sambaSID              eq
index   sambaPrimaryGroupSID  eq
index   sambaDomainName       eq
index   default               sub
</programlisting>
</para>

		<para>
		Create the new index by executing:
<screen>
&rootprompt;./sbin/slapindex -f slapd.conf
</screen>
		</para>

		<para>
		Remember to restart slapd after making these changes:
<screen>
&rootprompt;<userinput>/etc/init.d/slapd restart</userinput>
</screen>
		</para>

		</sect3>

		<sect3>
		<title>Initialize the LDAP Database</title>

		<para>
<indexterm><primary>LDAP database</primary></indexterm>
<indexterm><primary>account containers</primary></indexterm>
<indexterm><primary>LDIF file</primary></indexterm>
<indexterm><primary>DNS</primary></indexterm>
		Before you can add accounts to the LDAP database, you must create the account containers
		that they will be stored in. The following LDIF file should be modified to match your
		needs (DNS entries, and so on):
<programlisting>
# Organization for Samba Base
dn: dc=quenya,dc=org
objectclass: dcObject
objectclass: organization
dc: quenya
o: Quenya Org Network
description: The Samba-3 Network LDAP Example

# Organizational Role for Directory Management
dn: cn=Manager,dc=quenya,dc=org
objectclass: organizationalRole
cn: Manager
description: Directory Manager

# Setting up container for Users OU
dn: ou=People,dc=quenya,dc=org
objectclass: top
objectclass: organizationalUnit
ou: People

# Setting up admin handle for People OU
dn: cn=admin,ou=People,dc=quenya,dc=org
cn: admin
objectclass: top
objectclass: organizationalRole
objectclass: simpleSecurityObject
userPassword: {SSHA}c3ZM9tBaBo9autm1dL3waDS21+JSfQVz

# Setting up container for groups
dn: ou=Groups,dc=quenya,dc=org
objectclass: top
objectclass: organizationalUnit
ou: Groups

# Setting up admin handle for Groups OU
dn: cn=admin,ou=Groups,dc=quenya,dc=org
cn: admin
objectclass: top
objectclass: organizationalRole
objectclass: simpleSecurityObject
userPassword: {SSHA}c3ZM9tBaBo9autm1dL3waDS21+JSfQVz

# Setting up container for computers
dn: ou=Computers,dc=quenya,dc=org
objectclass: top
objectclass: organizationalUnit
ou: Computers

# Setting up admin handle for Computers OU
dn: cn=admin,ou=Computers,dc=quenya,dc=org
cn: admin
objectclass: top
objectclass: organizationalRole
objectclass: simpleSecurityObject
userPassword: {SSHA}c3ZM9tBaBo9autm1dL3waDS21+JSfQVz
</programlisting>
		</para>

		<para>
<indexterm><primary>userPassword</primary></indexterm>
<indexterm><primary>slappasswd</primary></indexterm>
		The userPassword shown above should be generated using <command>slappasswd</command>.
		</para>

		<para>
<indexterm><primary>LDIF</primary></indexterm>
<indexterm><primary>LDAP</primary></indexterm>
		The following command will then load the contents of the LDIF file into the LDAP
		database.
<indexterm><primary>slapadd</primary></indexterm>
<screen>
&prompt;<userinput>slapadd -v -l initldap.dif</userinput>
</screen>
		</para>

		<para>
		Do not forget to secure your LDAP server with an adequate access control list
		as well as an admin password.
		</para>

		<note><para>
<indexterm><primary>secrets.tdb</primary></indexterm>
		Before Samba can access the LDAP server, you need to store the LDAP admin password
		in the Samba-3 <filename>secrets.tdb</filename> database by:
<indexterm><primary>smbpasswd</primary></indexterm>
<screen>
&rootprompt;<userinput>smbpasswd -w <replaceable>secret</replaceable></userinput>
</screen>
		</para></note>

		</sect3>

		<sect3>
		<title>Configuring Samba</title>

			<para>
<indexterm><primary>LDAP</primary></indexterm>
<indexterm><primary>smbd</primary></indexterm>
			The following parameters are available in &smb.conf; only if your version of Samba was built with
			LDAP support. Samba automatically builds with LDAP support if the LDAP libraries are found. The
			best method to verify that Samba was built with LDAP support is:
<screen>
&rootprompt; smbd -b | grep LDAP
   HAVE_LDAP_H
   HAVE_LDAP
   HAVE_LDAP_DOMAIN2HOSTLIST
   HAVE_LDAP_INIT
   HAVE_LDAP_INITIALIZE
   HAVE_LDAP_SET_REBIND_PROC
   HAVE_LIBLDAP
   LDAP_SET_REBIND_PROC_ARGS
</screen>
			If the build of the <command>smbd</command> command you are using does not produce output
			that includes <literal>HAVE_LDAP_H</literal> it is necessary to discover why the LDAP headers
			and libraries were not found during compilation.
			</para>

			<para>LDAP-related smb.conf options include these:
			<smbconfblock>
			<smbconfoption name="passdb backend">ldapsam:url</smbconfoption>
			<smbconfoption name="ldap admin dn"/>
			<smbconfoption name="ldap delete dn"/>
			<smbconfoption name="ldap filter"/>
			<smbconfoption name="ldap group suffix"/>
			<smbconfoption name="ldap idmap suffix"/>
			<smbconfoption name="ldap machine suffix"/>
			<smbconfoption name="ldap passwd sync"/>
			<smbconfoption name="ldap ssl"/>
			<smbconfoption name="ldap suffix"/>
			<smbconfoption name="ldap user suffix"/>
			<smbconfoption name="ldap replication sleep"/>
			<smbconfoption name="ldap timeout"/>
			<smbconfoption name="ldap page size"/>
			</smbconfblock>
			</para>

			<para>
			These are described in the &smb.conf; man page and so are not repeated here. However, an example
			for use with an LDAP directory is shown in <link linkend="confldapex">the Configuration with LDAP.</link>
			</para>

<example id="confldapex">
<title>Configuration with LDAP</title>
<smbconfblock>
<smbconfsection name="[global]"/>
<smbconfoption name="security">user</smbconfoption>
<smbconfoption name="encrypt passwords">yes</smbconfoption>
<smbconfoption name="netbios name">MORIA</smbconfoption>
<smbconfoption name="workgroup">NOLDOR</smbconfoption>

<smbconfcomment>LDAP related parameters:</smbconfcomment>

<smbconfcomment>Define the DN used when binding to the LDAP servers.</smbconfcomment>
<smbconfcomment>The password for this DN is not stored in smb.conf</smbconfcomment>
<smbconfcomment>Set it using 'smbpasswd -w secret' to store the</smbconfcomment>
<smbconfcomment>passphrase in the secrets.tdb file.</smbconfcomment>
<smbconfcomment>If the "ldap admin dn" value changes, it must be reset.</smbconfcomment>
<smbconfoption name="ldap admin dn">"cn=Manager,dc=quenya,dc=org"</smbconfoption>

<smbconfcomment>SSL directory connections can be configured by:</smbconfcomment>
<smbconfcomment>('off', 'start tls', or 'on' (default))</smbconfcomment>
<smbconfoption name="ldap ssl">start tls</smbconfoption>

<smbconfcomment>syntax: passdb backend = ldapsam:ldap://server-name[:port]</smbconfcomment>
<smbconfoption name="passdb backend">ldapsam:ldap://frodo.quenya.org</smbconfoption>

<smbconfcomment>smbpasswd -x delete the entire dn-entry</smbconfcomment>
<smbconfoption name="ldap delete dn">no</smbconfoption>

<smbconfcomment>The machine and user suffix are added to the base suffix</smbconfcomment>
<smbconfcomment>wrote WITHOUT quotes. NULL suffixes by default</smbconfcomment>
<smbconfoption name="ldap user suffix">ou=People</smbconfoption>
<smbconfoption name="ldap group suffix">ou=Groups</smbconfoption>
<smbconfoption name="ldap machine suffix">ou=Computers</smbconfoption>

<smbconfcomment>Trust UNIX account information in LDAP</smbconfcomment>
<smbconfcomment> (see the smb.conf man page for details)</smbconfcomment>

<smbconfcomment>Specify the base DN to use when searching the directory</smbconfcomment>
<smbconfoption name="ldap suffix">dc=quenya,dc=org</smbconfoption>
</smbconfblock>
</example>

		</sect3>

		<sect3>
		<title>Accounts and Groups Management</title>

			<para>
			<indexterm><primary>User Management</primary></indexterm>
			<indexterm><primary>User Accounts</primary><secondary>Adding/Deleting</secondary></indexterm>
			Because user accounts are managed through the sambaSamAccount ObjectClass, you should
			modify your existing administration tools to deal with sambaSamAccount attributes.
			</para>

			<para>
<indexterm><primary>sambaSamAccount</primary></indexterm>
<indexterm><primary>/etc/openldap/sldap.conf</primary></indexterm>
<indexterm><primary>NSS</primary></indexterm>
			Machine accounts are managed with the sambaSamAccount ObjectClass, just
			like user accounts. However, it is up to you to store those accounts
			in a different tree of your LDAP namespace. You should use
			<quote>ou=Groups,dc=quenya,dc=org</quote> to store groups and
			<quote>ou=People,dc=quenya,dc=org</quote> to store users. Just configure your
			NSS and PAM accordingly (usually, in the <filename>/etc/openldap/sldap.conf</filename>
			configuration file).
			</para>

			<para>
<indexterm><primary>POSIX</primary></indexterm>
<indexterm><primary>posixGroup</primary></indexterm>
<indexterm><primary>Domain Groups</primary></indexterm>
<indexterm><primary>ADS</primary></indexterm>
			In Samba-3, the group management system is based on POSIX
			groups. This means that Samba makes use of the posixGroup ObjectClass.
			For now, there is no NT-like group system management (global and local
			groups). Samba-3 knows only about <constant>Domain Groups</constant>
			and, unlike MS Windows 2000 and Active Directory, Samba-3 does not
			support nested groups.
			</para>

		</sect3>

		<sect3>
		<title>Security and sambaSamAccount</title>


			<para>
<indexterm><primary>sambaSAMAccount</primary></indexterm>
			There are two important points to remember when discussing the security
			of sambaSAMAccount entries in the directory.
			</para>

			<itemizedlist>
				<listitem><para><emphasis>Never</emphasis> retrieve the SambaLMPassword or
<indexterm><primary>SambaNTPassword</primary></indexterm>
				SambaNTPassword attribute values over an unencrypted LDAP session.</para></listitem>
				<listitem><para><emphasis>Never</emphasis> allow non-admin users to
				view the SambaLMPassword or SambaNTPassword attribute values.</para></listitem>
			</itemizedlist>

			<para>
<indexterm><primary>clear-text</primary></indexterm>
<indexterm><primary>impersonate</primary></indexterm>
<indexterm><primary>LM/NT password hashes</primary></indexterm>
			These password hashes are clear-text equivalents and can be used to impersonate
			the user without deriving the original clear-text strings. For more information
			on the details of LM/NT password hashes, refer to <link linkend="passdb">the
			Account Information Database section</link>.
			</para>

			<para>
<indexterm><primary>encrypted session</primary></indexterm>
<indexterm><primary>StartTLS</primary></indexterm>
<indexterm><primary>LDAPS</primary></indexterm>
<indexterm><primary>secure communications</primary></indexterm>
			To remedy the first security issue, the <smbconfoption name="ldap ssl"/> &smb.conf;
			parameter defaults to require an encrypted session (<smbconfoption name="ldap
			ssl">on</smbconfoption>) using the default port of <constant>636</constant> when
			contacting the directory server. When using an OpenLDAP server, it
			is possible to use the StartTLS LDAP extended operation in the place of LDAPS.
			In either case, you are strongly encouraged to use secure communications protocols
			(so do not set <smbconfoption name="ldap ssl">off</smbconfoption>).
			</para>

			<para>
<indexterm><primary>LDAPS</primary></indexterm>
<indexterm><primary>StartTLS</primary></indexterm>
<indexterm><primary>LDAPv3</primary></indexterm>
			Note that the LDAPS protocol is deprecated in favor of the LDAPv3 StartTLS
			extended operation. However, the OpenLDAP library still provides support for
			the older method of securing communication between clients and servers.
			</para>

			<para>
<indexterm><primary>harvesting password hashes</primary></indexterm>
<indexterm><primary>ACL</primary></indexterm>
<indexterm><primary>slapd.conf</primary></indexterm>
			The second security precaution is to prevent non-administrative users from
			harvesting password hashes from the directory. This can be done using the
			following ACL in <filename>slapd.conf</filename>:
			</para>

<para>
<programlisting>
## allow the "ldap admin dn" access, but deny everyone else
access to attrs=SambaLMPassword,SambaNTPassword
     by dn="cn=Samba Admin,ou=People,dc=quenya,dc=org" write
     by * none
</programlisting>
</para>

		</sect3>

		<sect3>
		<title>LDAP Special Attributes for sambaSamAccounts</title>

			<para> The sambaSamAccount ObjectClass is composed of the attributes shown in next tables: <link
			linkend="attribobjclPartA">Part A</link>, and <link linkend="attribobjclPartB">Part B</link>.
			</para>

			<table frame="all" id="attribobjclPartA">
				<title>Attributes in the sambaSamAccount ObjectClass (LDAP), Part A</title>
			<tgroup cols="2" align="justify">
					<colspec align="left"/>
					<colspec align="justify" colwidth="1*"/>
			<tbody>
				<row><entry><constant>sambaLMPassword</constant></entry><entry>The LanMan password 16-byte hash stored as a character
						representation of a hexadecimal string.</entry></row>
				<row><entry><constant>sambaNTPassword</constant></entry><entry>The NT password 16-byte hash stored as a character
						representation of a hexadecimal string.</entry></row>
				<row><entry><constant>sambaPwdLastSet</constant></entry><entry>The integer time in seconds since 1970 when the
						<constant>sambaLMPassword</constant> and <constant>sambaNTPassword</constant> attributes were last set.
				</entry></row>

				<row><entry><constant>sambaAcctFlags</constant></entry><entry>String of 11 characters surrounded by square brackets [ ]
						representing account flags such as U (user), W (workstation), X (no password expiration),
						I (domain trust account), H (home dir required), S (server trust account),
						and D (disabled).</entry></row>

				<row><entry><constant>sambaLogonTime</constant></entry><entry>Integer value currently unused.</entry></row>

				<row><entry><constant>sambaLogoffTime</constant></entry><entry>Integer value currently unused.</entry></row>

				<row><entry><constant>sambaKickoffTime</constant></entry><entry>Specifies the time (UNIX time format) when the user
				will be locked down and cannot login any longer. If this attribute is omitted, then the account will never expire.
				Using this attribute together with shadowExpire of the shadowAccount ObjectClass will enable accounts to
				expire completely on an exact date.</entry></row>

				<row><entry><constant>sambaPwdCanChange</constant></entry><entry>Specifies the time (UNIX time format)
				after which the user is allowed to change his password. If this attribute is not set, the user will be free
				to change his password whenever he wants.</entry></row>

				<row><entry><constant>sambaPwdMustChange</constant></entry><entry>Specifies the time (UNIX time format) when the user is
				forced to change his password. If this value is set to 0, the user will have to change his password at first login.
				If this attribute is not set, then the password will never expire.</entry></row>

				<row><entry><constant>sambaHomeDrive</constant></entry><entry>Specifies the drive letter to which to map the
				UNC path specified by sambaHomePath. The drive letter must be specified in the form <quote>X:</quote>
				where X is the letter of the drive to map. Refer to the <quote>logon drive</quote> parameter in the
				smb.conf(5) man page for more information.</entry></row>

				<row><entry><constant>sambaLogonScript</constant></entry><entry>The sambaLogonScript property specifies the path of
				the user's logon script, .CMD, .EXE, or .BAT file. The string can be null. The path
				is relative to the netlogon share. Refer to the <smbconfoption name="logon script"/> parameter in the
				&smb.conf; man page for more information.</entry></row>

				<row><entry><constant>sambaProfilePath</constant></entry><entry>Specifies a path to the user's profile.
				This value can be a null string, a local absolute path, or a UNC path. Refer to the
				<smbconfoption name="logon path"/> parameter in the &smb.conf; man page for more information.</entry></row>

				<row><entry><constant>sambaHomePath</constant></entry><entry>The sambaHomePath property specifies the path of
				the home directory for the user. The string can be null. If sambaHomeDrive is set and specifies
				a drive letter, sambaHomePath should be a UNC path. The path must be a network
				UNC path of the form <filename>\\server\share\directory</filename>. This value can be a null string.
				Refer to the <command>logon home</command> parameter in the &smb.conf; man page for more information.
				</entry></row>
			</tbody>
			</tgroup></table>


			<table frame="all" id="attribobjclPartB">
				<title>Attributes in the sambaSamAccount ObjectClass (LDAP), Part B</title>
			<tgroup cols="2" align="justify">
					<colspec align="left"/>
					<colspec align="justify" colwidth="1*"/>
			<tbody>
				<row><entry><constant>sambaUserWorkstations</constant></entry><entry>Here you can give a comma-separated list of machines
				on which the user is allowed to login. You may observe problems when you try to connect to a Samba domain member.
				Because domain members are not in this list, the domain controllers will reject them. Where this attribute is omitted,
				the default implies no restrictions.
				</entry></row>

				<row><entry><constant>sambaSID</constant></entry><entry>The security identifier(SID) of the user.
				The Windows equivalent of UNIX UIDs.</entry></row>

				<row><entry><constant>sambaPrimaryGroupSID</constant></entry><entry>The security identifier (SID) of the primary group
				of the user.</entry></row>

				<row><entry><constant>sambaDomainName</constant></entry><entry>Domain the user is part of.</entry></row>
			</tbody>
			</tgroup></table>


			<para>
<indexterm><primary>PDC</primary></indexterm>
<indexterm><primary>sambaSamAccount</primary></indexterm>
			The majority of these parameters are only used when Samba is acting as a PDC of
			a domain (refer to <link linkend="samba-pdc">Domain Control</link>, for details on
			how to configure Samba as a PDC). The following four attributes
			are only stored with the sambaSamAccount entry if the values are non-default values:
			</para>

			<itemizedlist>
<indexterm><primary>sambaHomePath</primary></indexterm>
<indexterm><primary>sambaLogonScript</primary></indexterm>
<indexterm><primary>sambaProfilePath</primary></indexterm>
<indexterm><primary>sambaHomeDrive</primary></indexterm>
				<listitem><para>sambaHomePath</para></listitem>
				<listitem><para>sambaLogonScript</para></listitem>
				<listitem><para>sambaProfilePath</para></listitem>
				<listitem><para>sambaHomeDrive</para></listitem>
			</itemizedlist>

			<para>
<indexterm><primary>sambaSamAccount</primary></indexterm>
<indexterm><primary>PDC</primary></indexterm>
<indexterm><primary>smbHome</primary></indexterm>
			These attributes are only stored with the sambaSamAccount entry if
			the values are non-default values. For example, assume MORIA has now been
			configured as a PDC and that <smbconfoption name="logon home">\\%L\%u</smbconfoption> was defined in
			its &smb.conf; file. When a user named <quote>becky</quote> logs on to the domain,
			the <smbconfoption name="logon home"/> string is expanded to \\MORIA\becky.
			If the smbHome attribute exists in the entry <quote>uid=becky,ou=People,dc=samba,dc=org</quote>,
			this value is used. However, if this attribute does not exist, then the value
			of the <smbconfoption name="logon home"/> parameter is used in its place. Samba
			will only write the attribute value to the directory entry if the value is
			something other than the default (e.g., <filename>\\MOBY\becky</filename>).
			</para>

		</sect3>

		<sect3>
		<title>Example LDIF Entries for a sambaSamAccount</title>

			<para>
			The following is a working LDIF that demonstrates the use of the SambaSamAccount ObjectClass:
<programlisting>
dn: uid=guest2, ou=People,dc=quenya,dc=org
sambaLMPassword: 878D8014606CDA29677A44EFA1353FC7
sambaPwdMustChange: 2147483647
sambaPrimaryGroupSID: S-1-5-21-2447931902-1787058256-3961074038-513
sambaNTPassword: 552902031BEDE9EFAAD3B435B51404EE
sambaPwdLastSet: 1010179124
sambaLogonTime: 0
objectClass: sambaSamAccount
uid: guest2
sambaKickoffTime: 2147483647
sambaAcctFlags: [UX         ]
sambaLogoffTime: 2147483647
sambaSID: S-1-5-21-2447931902-1787058256-3961074038-5006
sambaPwdCanChange: 0
</programlisting>
			</para>

			<para>
			The following is an LDIF entry for using both the sambaSamAccount and
			posixAccount ObjectClasses:
<programlisting>
dn: uid=gcarter, ou=People,dc=quenya,dc=org
sambaLogonTime: 0
displayName: Gerald Carter
sambaLMPassword: 552902031BEDE9EFAAD3B435B51404EE
sambaPrimaryGroupSID: S-1-5-21-2447931902-1787058256-3961074038-1201
objectClass: posixAccount
objectClass: sambaSamAccount
sambaAcctFlags: [UX         ]
userPassword: {crypt}BpM2ej8Rkzogo
uid: gcarter
uidNumber: 9000
cn: Gerald Carter
loginShell: /bin/bash
logoffTime: 2147483647
gidNumber: 100
sambaKickoffTime: 2147483647
sambaPwdLastSet: 1010179230
sambaSID: S-1-5-21-2447931902-1787058256-3961074038-5004
homeDirectory: /home/moria/gcarter
sambaPwdCanChange: 0
sambaPwdMustChange: 2147483647
sambaNTPassword: 878D8014606CDA29677A44EFA1353FC7
</programlisting>
		</para>

		</sect3>

		<sect3>
		<title>Password Synchronization</title>

		<para>
		Samba-3 and later can update the non-Samba (LDAP) password stored with an account. When
		using pam_ldap, this allows changing both UNIX and Windows passwords at once.
		</para>

		<para>The <smbconfoption name="ldap passwd sync"/> options can have the  values shown in
		<link linkend="ldappwsync">Possible <emphasis>ldap passwd sync</emphasis> Values</link>.</para>

		<table frame="all" id="ldappwsync">
		<title>Possible <parameter>ldap passwd sync</parameter> Values</title>
		<tgroup cols="2">
			<colspec align="left" colwidth="1*"/>
			<colspec align="justify" colwidth="4*"/>
		<thead>
			<row><entry align="left">Value</entry><entry align="center">Description</entry></row>
		</thead>
		<tbody>
		<row><entry>yes</entry><entry><para>When the user changes his password, update
			       <constant>SambaNTPassword</constant>, <constant>SambaLMPassword</constant>,
			       and the <constant>password</constant> fields.</para></entry></row>

		<row><entry>no</entry><entry><para>Only update <constant>SambaNTPassword</constant> and
					<constant>SambaLMPassword</constant>.</para></entry></row>

		<row><entry>only</entry><entry><para>Only update the LDAP password and let the LDAP server
			worry about the other fields.  This option is only available on some LDAP servers and
			only when the LDAP server supports LDAP_EXOP_X_MODIFY_PASSWD.</para></entry></row>
		</tbody>
		</tgroup>
		</table>


		<para>More information can be found in the &smb.conf; man page.</para>

		</sect3>

		<sect3>
		<title>Using OpenLDAP Overlay for Password Syncronization</title>

		<para>
		Howard Chu has written a special overlay called <command>smbk5pwd</command>. This tool  modifies the
		<literal>SambaNTPassword</literal>, <literal>SambaLMPassword</literal> and <literal>Heimdal</literal>
		hashes in an OpenLDAP entry when an LDAP_EXOP_X_MODIFY_PASSWD operation is performed.
		</para>

		<para>
		The overlay is shipped with OpenLDAP-2.3 and can be found in the
		<filename>contrib/slapd-modules/smbk5pwd</filename> subdirectory. This module can also be used with
		OpenLDAP-2.2.
		</para>

		</sect3>

	</sect2>

</sect1>

<sect1>
<title>Common Errors</title>

	<sect2>
		<title>Users Cannot Logon</title>

		<para><quote>I've installed Samba, but now I can't log on with my UNIX account! </quote></para>

		<para>Make sure your user has been added to the current Samba <smbconfoption name="passdb backend"/>.
		Read the <link linkend="acctmgmttools">Account Management Tools,</link> for details.</para>

	</sect2>

	<sect2>
	<title>Configuration of <parameter>auth methods</parameter></title>

	<para>
	When explicitly setting an <smbconfoption name="auth methods"/> parameter,
	<parameter>guest</parameter> must be specified as the first entry on the line &smbmdash;
	for example, <smbconfoption name="auth methods">guest sam</smbconfoption>.
	</para>

	</sect2>

</sect1>

</chapter>
