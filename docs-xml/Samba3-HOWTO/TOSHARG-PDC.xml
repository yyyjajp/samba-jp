<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE chapter PUBLIC "-//Samba-Team//DTD DocBook V4.2-Based Variant V1.0//EN" "http://www.samba.org/samba/DTD/samba-doc">
<chapter id="samba-pdc">

<chapterinfo>
	&author.jht;
	&author.jerry;
	&author.dbannon;
	<author>&person.gd; <contrib>LDAP updates</contrib></author>
</chapterinfo>

<title>ドメイン制御</title>

<para>
信じがたい誤解を伴った、Microsoft Windows ネットワークに対する
アプローチがある。それは問題ない。なぜならば、それは支援のための
機会を我々にたくさん与えるからである。本当に手助けが必要な人は、
すでに有効になっている情報に対してなじむ方が賢明である。
</para>

<para>
<indexterm><primary>ドメイン</primary><secondary>コントローラ</secondary></indexterm>
最初に若干の基本を理解かつマスタしないでこの節に取り組まないことを推奨する。
Microsoft Windows ネットワークは特に誤設定に寛容ではない。Microsoft Windows
ネットワークの利用者は壊れたネットワーク設定によって引き起こされるしつこい
心配事について不平を言うことがありそうなことである。しかしながら、とても多く
の人々にとって、いくつかの不思議な方法でドメインコントローラを伴うMicrosoft 
Windows ネットワークを、始めることは、、すべてのネットワークの問題を解決する
ことを期待される。
</para>

<para>
<link linkend="domain-example">ドメインの例の図解</link>は典型的な、Microsoft 
Windows ネットワーク ドメインセキュリティネットワーク環境を図示している。
ワークステーションA、BとCは多くの物理的なMicrosoft Windowsネットワーククライアント
の代表である。
</para>

<figure id="domain-example">
	<title>ドメインの例</title>
	<imagefile scale="40">domain</imagefile>
</figure>

<para>
Sambaメーリングリストから、たくさんの共通したネットワークの問題を容易に認識できる。
もしも以下の題名についてよく分からないのであれば、それについて取り扱っている、
このHOWTOの節を読むことを強く勧める。以下は、最も共通的なMicrosoft Windows
ネットワークの問題である:
</para>

<itemizedlist>
	<listitem><para>基本的なTCP/IPの設定</para></listitem>
	<listitem><para>NetBIOS名の解決方法</para></listitem>
	<listitem><para>認証の設定</para></listitem>
	<listitem><para>ユーザとグループの設定</para></listitem>
	<listitem><para>UNIX/Linux上での基本的なファイルとディレクトリのアクセス制御</para></listitem>
	<listitem><para>ネットワーク環境中でのMicrosoft Windowsクライアントの相互運用性の理解</para></listitem>
</itemizedlist>

<para>
それから逃げてはいけない。表面上、Microsoft Windows ネットワークは
誰でもが動かせるように簡単に見える。実際、不十分な練習と準備でMicrosoft 
Windows ネットワークをセットアップするのは良い方法とは言えない。しかし、
我々の最初の、忘れられない、方法を外れた原理を得よう(訳注:あやしい)。
<emphasis>間違いをしても全く問題ない!</emphasis> 時と場合によっては
失敗も教訓となる。が、組織に対して、回避可能な、財政的負担と生産性低下
を引き起こすミスをするのはとても好ましくない。
</para>

<para>
間違いをしても良い正しい場所はどこか?Only out of harms way。もしも、
間違いをしてしまいそうならば、ユーザとは離れた、他の人に影響がない、
テストネットワークでやってほしい。
</para>

<sect1>
<title>機能と利便性</title>

<para>
<indexterm><primary>ドメインセキュリティ</primary></indexterm>
<emphasis>Microsoftドメインセキュリティの最も重要な利便性は何か?</emphasis>
</para>

<para>
<indexterm>シングルサインオン<primary></primary><see>SSO</see></indexterm>
<indexterm><primary>trust</primary></indexterm>
<indexterm><primary>account</primary></indexterm>
<indexterm><primary>ドメイン</primary><secondary>セキュリティ</secondary><tertiary>プロトコル</tertiary></indexterm>
要するに、<emphasis>シングルサインオン</emphasis>、あるいは短く言えばSSO
である。たくさんの人のために、これはMicrosoft Windows NTとその先のネット
ワークの聖杯である。SSOは、彼らの作業用(個人用)ワークステーションの所に
座っているかのように、ネットワークにログオンしてリソース(共有、ファイル
とプリンタ)にアクセスでき、彼らのユーザアカウント(か今入っているドメインと
信頼関係を結んだドメイン中の)を含むドメインのメンバの任意のワークステーション
に、よく設計されたネットワーク中にログオンできることをユーザに許可する。
これは、ドメインセキュリティプロトコルの機能である。
</para>

<para>
<indexterm><primary>SID</primary></indexterm>
<indexterm><primary>RID</primary></indexterm>
<indexterm><primary>relative identifier</primary><see>RID</see></indexterm>
<indexterm><primary>セキュリティ識別子</primary><see>SID</see></indexterm>
<indexterm><primary>アクセス制御</primary></indexterm>
ドメインセキュリティの利便性は、Samba PDCを実装するサイトで有効となる。
ドメインは一意のネットワーク識別子(SID)を提供する。ドメインユーザと
グループセキュリティ識別子はアカウント毎に一意の相対識別子(RID)を
ネットワークSIDに追加したもので構成される。ユーザとグループSID(
ネットワークSID+RID)は組織のアクセス制御を提供するためのネットワーク
リソースを付加するアクセスコントロールリスト(ACL)を作成するために
使うことが出来る。UNIXシステムはローカルセキュリティ識別子のみを
認識する。
</para>

<para>
<indexterm><primary>SID</primary></indexterm>
SIDはセキュリティコンテキストを表す。例をあげると、おのおののWindows
マシンは固有のSIDを持つローカルマシンのセキュリティコンテキストでの
ローカルアカウントを持つ。すべてのドメイン(NT4、ADS、Samba)は
ドメインSIDによって定義されるセキュリティドメインセキュリティコン
テキストで存在するアカウントを含む。
</para>

<para>
<indexterm><primary>SID</primary></indexterm>
<indexterm><primary>RID</primary></indexterm>
ドメインメンバサーバはドメインSIDとは異なるSIDを持つ。ドメインメンバ
サーバはすべてのドメインユーザをローカルユーザとして見なすように
設定できる。SIDは持続的である。標準的なドメインのユーザSIDは以下の
ようなものである:
<screen>
S-1-5-21-726309263-4128913605-1168186429
</screen>
すべてのアカウント(ユーザ、グループ、マシン、信頼関係など)はRIDが割り当てられる。
これは、アカウントが作成された時に自動的に行われる。UNIX OSはユーザとグループ
識別子に別々の名前空間を使う(UIDとGID)が、Windowsは同じ名前空間からRIDを
割り当てる。WindowsユーザとWindowsグループは同じRIDを持てない。ちょうどUNIX
ユーザ<literal>root</literal>がUID=0であるように、Windows Administrator
は、よく知られたRID=500を持つ。RIDはWindowsドメインRIDに連結され、そのため、
上記のSIDを持つドメインのAdministratorアカウントは下記のユーザSIDを持つ。
<screen>
S-1-5-21-726309263-4128913605-1168186429-500
</screen>
Windowsネットワーク領域中での残りのすべてのアカウントは全体で一意なセキュリティ
識別子を持つ。
</para>

<note><para>
<indexterm><primary>ドメイン</primary><secondary>メンバ</secondary></indexterm>
<indexterm><primary>マシンアカウント</primary></indexterm>
<indexterm><primary>domain</primary><secondary>trust account</secondary></indexterm>
Microsoft Windows ドメインセキュリティ環境でのネットワーククライアントは提供される
高度な機能にアクセスすることを得ることが出来るためにドメインメンバでなければならな
い。ドメインメンバシップはワークグループ名をドメイン名に設定することを含む。それ
は、ワークステーションに対する(マシンアカウントと呼ばれる)ドメイン信頼アカウント
の作成を要求する。より詳細については
<link linkend="domain-member">ドメインメンバシップ</link>を参照のこと。
</para></note>

<para>
以下の機能はSamba-3リリースで新規に追加された:
</para>

<itemizedlist>
	<listitem><para>
	<indexterm><primary>アカウント</primary><secondary>バックエンド</secondary></indexterm>
	Samba-3はユーザ、グループとマシンアカウントが格納される時に使われる
	バックエンドの選択を行う事をサポートしている。複数のパスワードバックエンド
	を、付加的なデータセット、あるいはフェールオーバデータセットのどちらでも、
	組み合わせて使うことが出来る(訳注:今は使えない)。
	</para>

	<para>
	<indexterm><primary>LDAP</primary></indexterm>
	<indexterm><primary>replicated</primary></indexterm>
	<indexterm><primary>distributed</primary></indexterm>
	<indexterm><primary>scalability</primary></indexterm>
	<indexterm><primary>reliability</primary></indexterm>
	LDAP passdbバックエンドは、スケーラビリティと高いレベルでの信頼性を
	提供するという理由で、とても価値のある、アカウントバックエンドが
	分散かつ複製が出来るメリットを享受できる。
	</para></listitem>

	<listitem><para>
	<indexterm><primary>ドメイン間</primary><secondary>信頼</secondary><tertiary>アカウント</tertiary></indexterm>
	<indexterm><primary>信頼アカウント</primary><secondary>ドメイン間</secondary></indexterm>
	<indexterm><primary>相互運用性</primary></indexterm>
	Windows NT4のドメイン信頼関係である。Samba-3haワークステーションと
	サーバ(マシン)信頼アカウントをサポートする。これは、ネットワークの
	スケーラビリティと相互運用性をさらに支援する、NT4スタイルのドメイン
	間信頼アカウントをサポートする。
	</para></listitem>
	
	<listitem><para>
	<indexterm><primary>NetBIOS</primary></indexterm>
	<indexterm><primary>raw SMB</primary></indexterm>
	<indexterm><primary>active directory</primary></indexterm>
	<indexterm><primary>ドメイン</primary><secondary>メンバサーバ</secondary></indexterm>
	<indexterm><primary>ドメイン</primary><secondary>コントローラ</secondary></indexterm>
	<indexterm><primary>ネットワーク</primary><secondary>ブラウジング</secondary></indexterm>
	
	NetBIOS over TCP/IPなしの操作は、むしろraw SMB over TCP/IPを使うことである。注意:
	これはMicrosoft active directoryドメインメンバサーバとして操作する時にのみ
	実行可能である。Sambaドメインコントローラとして動作する時、NetBIOSの使用は、
	ネットワークブラウジングのサポートを提供するために必要である。
	</para></listitem>

	<listitem><para>
	<indexterm><primary>WINS</primary></indexterm>
	<indexterm><primary>TCPポート</primary></indexterm>
	<indexterm><primary>セッションサービス</primary></indexterm>
	Samba-3はNetBIOSネームサービス(WINS)、NetBIOS ever TCP/IP(TCPポート139)、
	SMB over TCP(TCP port 445)セッションサービスとMicrosoft互換のONC DCE 
	RPCサービス(TCPポート135)を提供する。
	</para></listitem>

	<listitem><para>
	<indexterm><primary>Nexus.exe</primary></indexterm>
	ドメインに対してユーザーマネージャ経由でユーザとグループを管理する。
	これは、Windows 9x/Meでは<filename>Nexus.exe</filename>を使い、
	Windows NT4/200x/XPプラットフォームではSRVTOOLS.EXEを使って任意の
	Microsoft Windows クライアントで行える(訳注:Windows Vista/7では
	使えません)。
	</para></listitem>

	<listitem><para>
	Unicodeの完全な実装。これは、ロケール間での国際化サポートを容易にする。
	これはまた完全なUnicodeサポートを必要とするためには使えないSamba-2.2.x
	のプロトコルの使用を開く(訳注:Opensの意味が....)。
	</para></listitem>
</itemizedlist>

<para>
以下の機能はSamba-3では提供されていない:
</para>

<itemizedlist>
	<listitem><para>
	<indexterm><primary>SAM</primary></indexterm>
	<indexterm><primary>複製</primary></indexterm>
	NT4ドメインコントローラ間でのSAMの複製(すなわちSamba PDCとWindows NT BDCまたはその他)。
	これは、Sambaが、PDCがMicrosoftベースのWindows NT PDCである時にBDCと
	して動作出来ないことを意味する。Samba-3はWindows PDCとBDCでのアカウント
	データの複製に参加できない。
	</para></listitem>
	
	<listitem><para>
	<indexterm><primary>kerberos</primary></indexterm>
	<indexterm><primary>active directory</primary></indexterm>
	Windows 2000 Active Directoryドメインコントローラとして振る舞う
	(すなわち、KerberosとActive Directory)。実際の所、Samba-3は
	現時点ではまだ実験的な、Active Directory ドメイン制御の機能を
	いくつか持っている。Active Directoryドメイン制御は次の世代の
	Sambaリリースである、Samba-4で現在開発中の機能である。現時点では
	Samba-3ライフサイクル中でActive Directoryドメイン制御を有効にする
	計画はない。
	</para></listitem>

	<listitem><para>
	<indexterm><primary>MMC</primary></indexterm>
	<indexterm><primary>SVRTOOLS.EXE</primary></indexterm>
	<indexterm><primary>Microsoft management console</primary><see>MMC</see></indexterm>
	Windows 200x/XPのMicrosoft管理コンソール(MMC)はSamba-3サーバの管理に
	は使えない。このために、Microsoft Windows NT4ドメインサーバマネージャと
	Microsoft Windows NT4ドメインユーザマネージャのみが使える。両者は
	この後説明するSVRTOOLS.EXEパッケージ中の一部である。
	</para></listitem>
</itemizedlist>

<para>
<indexterm><primary>Windows XP Home エディション</primary></indexterm>
<indexterm><primary>LanMan</primary></indexterm>
この章中で概要が説明されている理由により、ドメインの真のメンバに、
Windows 9x/Me/XP Homeクライアントはなれない。Windows9x/Meスタイルの
ネットワーク(ドメイン)ログオンプロトコルはNT4/Windows 200xスタイルの
ドメインログオンとは完全に異なり、それはいつか公式にサポートされる。
これらのクライアントはおおよそSamba-1.9.15シリーズからサポート
された古いLanManネットワークログイン機能を使う。
</para>

<para>
<indexterm><primary>グループ</primary><secondary>マッピング</secondary></indexterm>
Samba-3ではWindows NT グループとUNIXグループ間でのグループマッピングを実装
している(これは、小さなスペースでは説明できないくらい非常に複雑で
ある)。これについての詳細については
<link linkend="groupmapping">グループマッピング:Microsoft WindowsとUNIX</link>
を参照のこと。
</para>

<para>
<indexterm><primary>マシン信頼アカウント</primary></indexterm>
<indexterm><primary>信頼アカウント</primary><secondary>マシン</secondary></indexterm>
<indexterm><primary>マシンアカウント</primary></indexterm>
Samba-3はMicrosoft Windows NT4 PDCまたはWindows200x Active Directory
と同様に、それにふさわしいバックエンドデータベースにユーザとマシン
信頼アカウント情報を格納することを必要とする。これについては、
<link linkend="machine-trust-accounts">Microsoft Windows Workstation/Server マシン信頼アカウント</link>
を参照のこと。Samba-3では複数のバックエンドが用意されている。
完全なアカウントデータベースバックエンドについての解説は
<link linkend="passdb">アカウント情報データベース</link>にある。
</para>

</sect1>

<sect1>
<title>シングルサインオンとドメインセキュリティ</title>

<para>
<indexterm><primary>シングルサインオン</primary><see>SSO</see></indexterm>
<indexterm><primary>SSO</primary></indexterm>
<indexterm><primary>active directory</primary></indexterm>
<indexterm><primary>認証</primary></indexterm>
<indexterm><primary>validation</primary></indexterm>
<indexterm><primary>パスワードの一意性</primary></indexterm>
<indexterm><primary>パスワード履歴</primary></indexterm>
ネットワーク管理者が、Windows NT4とactive directoryネットワークの利点に
ついて説明を求められるとき、しばしば言及するのが、シングルサインオン
(SSO)を実装しているということである。多くの会社がSSOを実装している。
シングルサインオンソリューション実装のモードは、一般的に、ネットワーク
業務における重要な要因であり、Windowsネットワークに関してとても重要で
ある。会社には多くの種類の情報システムがあり、それぞれはユーザ認証と認可
(訳注:authentication and validation)を要求し、そのため、一般的
ではないが、ユーザは10以上のログインIDとパスワードを記憶する必要が
あるかもしれない。この問題は、おのおののシステムのパスワードが
一定期間で更新が必定で、パスワードの複雑さとパスワード履歴が
適用されるときには特に顕著となる。
</para>

<para>
<indexterm><primary>管理のオーバヘッド</primary></indexterm>
非常にたくさんの情報システムに対するアクセス権限(ユーザ名/パスワードペア)
を扱うユーザの問題に対する回答がSSOであるという認識を包括的に
持っている。多くの巧妙な案が、ユーザフレンドリーなSSOのソリューション
を提供可能にするために考案された。問題は、この導入がうまく終わって
いない場合、サイトは複雑さによるたくさんの費用と管理上のオーバヘッド
が起きるかもしれないということである。簡単言って、多くのSSOソリュー
ションは管理上の悪夢である。
</para>

<para>
<indexterm><primary>identity management</primary></indexterm>
<indexterm><primary>認証システム</primary></indexterm>
<indexterm><primary>SSO</primary></indexterm>
SSOを使うことですべてのユーザアカウント情報を集中管理できる。
環境の複雑さと、SSOを導入したシステムの稼働期間に依存して、
新しいアイデンティティ管理とユーザ認証システムを受け入れること
は可能ではないかもしれない。多くのSSOソリューションは、
ユーザのための認証を処理する新しい上位の構造から成り立つ
レガシーシステムを改良する。これは、SSOの追加は全体的な情報
システムの複雑さを増大することを意味する。理想的には、SSOの
導入は複雑さの低減と管理オーバヘッドの削減をすべきである。
</para>

<para>
<indexterm><primary>集中化したアイデンティティ管理</primary></indexterm>
<indexterm><primary>アイデンティティ管理</primary><secondary>集中化</secondary></indexterm>
<indexterm><primary>集中化</primary><secondary>認証</secondary></indexterm>
<indexterm><primary>レガシーシステム</primary></indexterm>
<indexterm><primary>アクセス制御</primary></indexterm>
たくさんのネットワーク管理の最初のゴールは、しばしば集中管理した
アイデンティティ管理システムを作り、使うことである。これは、
そのような集中化したシステムは、すべての情報システムによって
使うことが出来る単一の認証基盤を使うことをしばしば仮定している。
Microsoft Windows NT4セキュリティドメインアーキテクチャとMicrosoft
Active Directoryサービスは、そのようなシステムに対しての理想的な
基盤としてしばしば提供される。ユーザの認証とアクセス制御のために
Microsoft(NT4ドメインかadsサービス)を使うことが出来る単一の
認証基盤を使う、そのような集中化したシステムがしばしば仮定される。
単一の集中化した認証サービスのすばらしい幻想は一般的に、現実を
理解するときに一般的に壊れている。レガシーシステムを使うときの問題
は、その導入がリエンジニアリングの観点から、過度に侵略的になるか、
アプリケーションソフトが、設計されて実装されたユーザ認証の特定の
要素に依存して組み込まれているという理由により、認証とアクセス制御
を具体化する能力がしばしばないということである。
</para>

<para>
<indexterm><primary>メタディレクトリ</primary></indexterm>
<indexterm><primary>credentials</primary></indexterm>
<indexterm><primary>disparate information systems</primary></indexterm>
<indexterm><primary>管理手続き</primary></indexterm>
<indexterm><primary>ワークフロープロトコル</primary></indexterm>
<indexterm><primary>rights</primary></indexterm>
<indexterm><primary>privileges</primary></indexterm>
<indexterm><primary>provisioned</primary></indexterm>
これまでの10年間、産業が、レガシー名情報テクノロジーシステムの
制限の鍵となる点を回避するために作られた、いろいろな方法が開発
されてきた。しばしば使われるその1つの方法はメタディレクトリを
使うことである。メタディレクトリには、それぞれのシステムに固有な
形式で、すべての異なる情報システムのためにユーザ認証情報を保存
する。単一のユーザ認証情報を使うすべてのシステムのために、新しい
基盤がユーザアクセスを可能にさせることが提供されるシステムの
迷宮の中で、ユーザ権限と権利(rights and privileges)を管理する
ための厳格に実施されるワークフロープロトコルに、管理手続き
の巧妙なセットが結合される。
</para>

<para>
<indexterm><primary>Organization for the Advancement of Structured Information Standards</primary><see>OASIS</see></indexterm>
<indexterm><primary>Security Assertion Markup Language</primary><see>SAML</see></indexterm>
<indexterm><primary>Federated Identity Management</primary><see>FIM</see></indexterm>
<indexterm><primary>安全なアクセス</primary></indexterm>
Organization for the Advancement of Structured Information Standards (OASIS)
は、認証情報の通信のための構造化情報であるSecurity Assertion Markup Language (SAML)
を開発している。SAMLを配置するための全体的な技術と手法の包括的名称(訳注:umbrella name)は
Federated Identity Management (FIM)と呼ばれる。FIMはそれぞれのユーザを認証
するための異なった情報システムの複雑な迷宮中で、かつおのおのが提供するサービス
の安全なアクセスを請け負うために、おのおののシステムに依存する。
</para>

<para>
<indexterm><primary>Simple Object Access Protocol</primary><see>SOAP</see></indexterm>
<indexterm><primary>federated organizations</primary></indexterm>
<indexterm><primary>Liberty Alliance</primary></indexterm>
<indexterm><primary>federated-identity</primary></indexterm>
<indexterm><primary></primary></indexterm>
<indexterm><primary></primary></indexterm>
SAML文書はWebサービスのために必要なコンピュータ間通信のための
Simple Object Access Protocol (SOAP)メッセージ中に包むことが出来る。
あるいは、ライブサービスを共有する集合化したWebサービス間で渡される
かもしれない。リバティ・アライアンスは、SAML1.1をアプリケーション
フレームワークとして適用した、連携型アイデンティティ標準
(訳注:federated-identity standards)を普及させるために作られた
コンソーシアム(訳注:industry group)である。MicrosoftとIBMは
WS-Securityと呼ばれる別の方式を提案していた。ある人は、競合して
いる技術と手法がSAML 2.0標準が世に出るときにまとまるのではないか
と信じていた。現在ではごく少数のWebアクセス管理製品のみがSAMLを
サポートしているが、技術の実装は、アプリケーション統合のための
カスタマイズとユーザインタフェースの開発のために、主に必要と
される。要するに、それがなぜFIMが大木つて成長している産業である
かの理由である。
</para>

<para>
<indexterm><primary>相互運用性</primary></indexterm>
<indexterm><primary>ADS</primary></indexterm>
<indexterm><primary>LDAP</primary></indexterm>
<indexterm><primary>GSSAPI</primary></indexterm>
<indexterm><primary>general security service application programming interface</primary><see>GSSAPI</see></indexterm>
この本の向こうの範囲の大きな絵を無視し、集中したシステムへのすべての
ユーザとグループのマイグレーション管理は、正しい方向への第一歩である。
Microsoft Active Directoryサービス(ADS)やその他のプロプライエティな
ものか、general security service application programming interface
(GSSAPI)サービスによって定義されているプロトコルを使う数々の認証
メカニズム(kerberosのような)の柔軟な組み合わせができる情報アクセス
(LDAPのような)のための、標準プロトコルを提供するオープンソースシステム
のような、ディレクトリ中にアイデンティティ管理システムデータを位置づける
のは、相互運用性のための基本である。
</para>

<para>
<indexterm><primary>OpenLDAP</primary></indexterm>
<indexterm><primary>ADS</primary></indexterm>
<indexterm><primary>認証エージェント</primary></indexterm>
ますます多くの会社がLDAPシステムを使うことを許可するための異なったレガシー
プラットフォームのために認証エージェントを提供する。OpenLDAPの使用で、
LDAP標準のオープンソース実装が支配的である。実際、LDAPとMicrosoft
ADSを使うためにSambaで提供することは、Sambaが、高度な拡張性と
Sambaは、組織のネットワーク技術に届くように前進することを意味する。
</para>

<para>
<indexterm><primary>ADS</primary></indexterm>
<indexterm><primary>LDAP</primary></indexterm>
<indexterm><primary>認証アーキテクチャ</primary></indexterm>
<indexterm><primary>ntlm_auth</primary></indexterm>
<indexterm><primary>SQUID</primary></indexterm>
<indexterm><primary>FIM</primary></indexterm>
Microsoft ADSは、集中化した認証基盤を提供するために拡張できる、
制限付きの完全に商用なサービスを提供する。SambaとLDAPは、集中化した
認証基盤の拡張のための同様な機会を提供するが、実際、Sambaチームは、
LDAPあるいは他のものを使って、認証サービスの拡張の導入中で、
、持続可能な選択とFIMマーケットプレイス中での競合をより多く作成する、
<command>ntlm_auth</command>ユーティリティのような完全なツールを
SQUID(OSSのプロキシサーバ)のようなアプリケーションのために
先を見越している。
</para>

<para>
<indexterm><primary>LDAP</primary></indexterm>
<indexterm><primary>OpenLDAP</primary></indexterm>
<indexterm><primary>identity information</primary></indexterm>
もしも、プライマリドメインコントロールが大きなサイトに適合した拡張性
があれば、LDAPを使うことが出来るに違いない。それを使うためのすばやい
OpenLDAPとSambaの設定は、ディレクトリの時代が始まったことの十分な
証明である。Samba-3はLDAPの使用を要求しないが、分散可能なユーザと
グループのイデンティティ情報のメカニズムのための要求は、それを不可避の
選択としている。
</para>

<para>
<indexterm><primary>BDC</primary></indexterm>
<indexterm><primary>LDAP</primary></indexterm>
<indexterm><primary>e-Directory</primary></indexterm>
この時点で、SambaベースのBDCの使用は、LDAPアクセスありの使用を必要と
する。最も一般的な、Sambaサイトによって使われるLDAP実装はOpenLDAP
である。標準準拠の任意のLDAPサーバを使うことも可能である。それらは、
IBM、CA、Novell(e-Directory)とその他で知られている。
</para>

</sect1>

<sect1>
<title>ドメイン制御の基礎</title>

<para>
<indexterm><primary>ドメイン制御</primary></indexterm>
長年の間、一般的に、ドメイン制御が神秘的なものを持っているという
ことが認識されてきていた。ドメイン制御についての簡単な説明に
入る前に、ドメインコントローラに3種類があることについて説明する。
</para>

<sect2>
<title>ドメインコントローラの種類</title>

<itemizedlist>
	<listitem><para>NT4スタイルプライマリドメインコントローラ</para></listitem>
	<listitem><para>NT4スタイルバックアップドメインコントローラ</para></listitem>
	<listitem><para>ADSドメインコントローラ</para></listitem>
</itemizedlist>

<para>
<indexterm><primary>PDC</primary></indexterm>
<indexterm><primary>powerful</primary></indexterm>
<indexterm><primary>ネットワーク</primary><secondary>パフォーマンス</secondary></indexterm>
<indexterm><primary>ドメイン</primary><secondary>メンバ</secondary><secondary>サーバ</secondary></indexterm>
<emphasis>プライマリドメインコントローラ</emphasis>あるいはPDCはMicrosoft
Windows NTで重要な役割を演じる。Windows 200xドメインアーキテクチャ中では
この役割はドメインコントローラによって保持されている。Microsoft Windows
ネットワーク中の役割の理由から、フォークロアはそれを指示し(訳注:意味取れない)、
ドメインコントローラはネットワーク中で最も性能が高く、最も能力があるマシン
であるべきである。ここで言うのもとても奇妙に見えるが、ネットワーク全体での
よいパフォーマンスは、すべてのインフラストラクチャーがバランスされている
ことを必要とすることを指示する。ドメインコントローラ中よりもスタンドアロン
(ドメインメンバ)中でより投資することは賢明である。
</para>

<para>
<indexterm><primary>SAM</primary></indexterm>
<indexterm><primary>BDC</primary></indexterm>
<indexterm><primary>認証</primary></indexterm>
<indexterm><primary>同期</primary></indexterm>
<indexterm><primary>Security Account Manager</primary><see>SAM</see></indexterm>
Microsoft Windows NT4スタイルドメインの場合、新しいドメイン制御データベースを
初期化するのはPDCである。この形式は、Security Account Manager (SAM)と呼ばれる
Windowsレジストリの一部である。これは、NT4スタイルのドメインユーザの認証と
BDCのドメイン認証データベースとの同期で最も中心的な部分を行う。
</para>

<para>
<indexterm><primary>ドメイン</primary><secondary>コントローラ</secondary><tertiary>階層</tertiary></indexterm>
<indexterm><primary>LDAP</primary></indexterm>
<indexterm>アカウント<primary></primary><secondary>バックエンド</secondary></indexterm>
<indexterm><primary>マシンアカウント</primary></indexterm>
Microsoft Windows 200xサーバベースのActive Directoryドメインで、一つのドメイン
コントローラが、そのおのおのが委託された制御の固有領域であるドメインコント
ローラの潜在的な階層を初期化する。マスタドメインコントローラは任意の下位
コントローラを上書きする能力を持っているが、下位のコントローラはその下位の
コントローラのみ制御する。Samba-3では、この機能はLDAPベースのユーザとマシン
アカウントバックエンドを使うことで実現できる。
</para>

<para>
<indexterm><primary>バックエンドデータベース</primary></indexterm>
<indexterm><primary>レジストリ</primary></indexterm>
Samba-3では新規にNT4スタイルのSAMデータベース(レジストリファイルの1つ)で
同じタイプのデータを保持するバックエンドデータベースを使う能力を持つ。
<footnote><para><link linkend="passdb">アカウント情報データベース</link>
を参照のこと。/para></footnote>
New to Samba-3 is the ability to use a backend database that holds the same type of data as the NT4-style SAM
database (one of the registry files)<footnote><para>See also <link linkend="passdb">Account Information
Databases</link>.</para>.</footnote>(ここピリオドダブり)
</para>

<para>
<indexterm><primary>BDC</primary></indexterm>
<indexterm><primary>PDC</primary></indexterm>
<indexterm><primary>WINS</primary></indexterm>
<indexterm><primary>authentication</primary></indexterm>
<indexterm><primary>netlogon</primary></indexterm>
<indexterm><primary>name lookup</primary></indexterm>
<emphasis>バックアップドメインコントローラ</emphasis>またはBDCはネットワーク
認証サービス中で重要な役割を演じる。BDCはPDCに優先してログオン要求に答える
ために、バイアスをかけられる。BDCとPDCがあるネットワークセグメント上で、
BDCはネットワークログオン要求を最もサービスする。PDCはBDCがとても忙しい
(ロードアベレージが大きい)ときにログオン要求に応える。ユーザがWindows
ドメインメンバクライアントにログオンした時、ワークステーションは最も近い
ネットワークログオンサーバに位置づけるために、ネットワークに問い合わせを
行う。WINSサーバが使われている時、これは問い合わせを経由してWINSサーバ
で行われる。もしもネットログオンサーバがWINS問い合わせから見つからないか、
WINSサーバがない場合、ワークステーションはUDPブロードキャストプロトコル
上でmailslotブロードキャスト経由でNetBIOS名前検索を実行する。これは、
Windowsクライアントが使うことが出来るネットログオンサーバがたくさんの
変数によって影響され、それゆえ、PDCまたはBDCが特定のログオン認証要求
を処理する単純な決定要素はない。

The <emphasis>Backup Domain Controller</emphasis> or BDC plays a key role in servicing network authentication
requests. The BDC is biased to answer logon requests in preference to the PDC.  On a network segment that has
a BDC and a PDC, the BDC will most likely service network logon requests. The PDC will answer network logon
requests when the BDC is too busy (high load). When a user logs onto(ここTYPO) a Windows domain member client the
workstation will query the network to locate the nearest network logon server. Where a WINS server is used,
this is done via a query to the WINS server. If a netlogon server can not be found from the WINS query, or in
the absence of a WINS server, the workstation will perform a NetBIOS name lookup via a mailslot broadcast over
the UDP broadcast protocol. This means that the netlogon server that the windows client will use is influenced
by a number of variables, thus there is no simple determinant of whether a PDC or a BDC will serve a
particular logon authentication request.
</para>

<para>
<indexterm><primary>promote</primary></indexterm>
<indexterm><primary>demote</primary></indexterm>
A Windows NT4 BDC can be promoted to a PDC. If the PDC is online at the time that a BDC is promoted to PDC,
the previous PDC is automatically demoted to a BDC. With Samba-3, this is not an automatic operation; the PDC
and BDC must be manually configured, and other appropriate changes also need to be made.
</para>

<para>
<indexterm><primary>domain</primary><secondary>controller</secondary><tertiary>convert</tertiary></indexterm>
With MS Windows NT4, a decision is made at installation to determine what type of machine the server will be.
It is possible to promote a BDC to a PDC, and vice versa. The only method Microsoft provide to convert a
Windows NT4 domain controller to a domain member server or a standalone server is to reinstall it. The install
time choices offered are:
</para>

<itemizedlist>
	<listitem><para><emphasis>Primary Domain Controller</emphasis> &smbmdash; the one that seeds the domain SAM.</para></listitem>
	<listitem><para><emphasis>Backup Domain Controller</emphasis> &smbmdash; one that obtains a copy of the domain SAM.</para></listitem>
	<listitem><para><emphasis>Domain Member Server</emphasis> &smbmdash; one that has no copy of the domain SAM; rather
		it obtains authentication from a domain controller for all access controls.</para></listitem>
	<listitem><para><emphasis>Standalone Server</emphasis> &smbmdash; one that plays no part in SAM synchronization,
		has its own authentication database, and plays no role in domain security.</para></listitem>
</itemizedlist>

<note><para>
<indexterm><primary>promote</primary></indexterm>
Algin Technology LLC provide a commercial tool that makes it possible to promote a Windows NT4 standalone
server to a PDC or a BDC, and also permits this process to be reversed. Refer to the <ulink
url="http://utools.com/UPromote.asp">Algin</ulink> web site for further information.
</para></note>

<para>
<indexterm><primary>domain</primary><secondary>control</secondary><tertiary>role</tertiary></indexterm>
<indexterm><primary>native member</primary></indexterm>
Samba-3 servers can readily be converted to and from domain controller roles through simple changes to the
&smb.conf; file. Samba-3 is capable of acting fully as a native member of a Windows 200x server Active
Directory domain.
</para>

<para>
<indexterm><primary>convert</primary><secondary>domain member server</secondary></indexterm>
For the sake of providing a complete picture, MS Windows 2000 domain control configuration is done after the server has been
installed. Please refer to Microsoft documentation for the procedures that should be followed to convert a
domain member server to or from a domain control, and to install or remove active directory service support.
</para>

<para>
<indexterm><primary>replication</primary><secondary>SAM</secondary></indexterm>
<indexterm><primary>SAM</primary><secondary>replication</secondary></indexterm>
New to Samba-3 is the ability to function fully as an MS Windows NT4-style domain controller,
excluding the SAM replication components. However, please be aware that Samba-3 also supports the
MS Windows 200x domain control protocols.
</para>

<para>
<indexterm><primary>ADS</primary></indexterm>
At this time any appearance that Samba-3 is capable of acting as a <emphasis>domain controller</emphasis> in
native ADS mode is limited and experimental in nature.  This functionality should not be used until the Samba
Team offers formal support for it.  At such a time, the documentation will be revised to duly reflect all
configuration and management requirements. Samba can act as a NT4-style domain controller in a Windows 2000/XP
environment. However, there are certain compromises:
</para>

<itemizedlist>
	<listitem><para>No machine policy files.</para></listitem>
	<listitem><para>No Group Policy Objects.</para></listitem>
	<listitem><para>No synchronously executed Active Directory logon scripts.</para></listitem>
	<listitem><para>Can't use Active Directory management tools to manage users and machines.</para></listitem>
	<listitem><para>Registry changes tattoo the main registry, while with Active Directory they do not leave
		permanent changes in effect.</para></listitem>
	<listitem><para>Without Active Directory you cannot perform the function of exporting specific
		applications to specific users or groups.</para></listitem>
</itemizedlist>

</sect2>

<sect2>
<title>Preparing for Domain Control</title>

<para>
<indexterm><primary>standalone</primary></indexterm>
<indexterm><primary>workgroup</primary></indexterm>
<indexterm><primary>member</primary></indexterm>
<indexterm><primary>security</primary></indexterm>
There are two ways that MS Windows machines may interact with each other, with other servers,
and with domain controllers: either as <emphasis>standalone</emphasis> systems, more commonly
called <emphasis>workgroup</emphasis> members, or as full participants in a security system,
more commonly called <emphasis>domain</emphasis> members.
</para>

<para>
<indexterm><primary>workgroup</primary></indexterm>
<indexterm><primary>workgroup</primary><secondary>membership</secondary></indexterm>
<indexterm><primary>machine trust account</primary></indexterm>
It should be noted that workgroup membership involves no special configuration other than the machine being
configured so the network configuration has a commonly used name for its workgroup entry. It is not uncommon
for the name WORKGROUP to be used for this. With this mode of configuration, there are no Machine Trust
Accounts, and any concept of membership as such is limited to the fact that all machines appear in the network
neighborhood to be logically grouped together. Again, just to be clear: <emphasis>workgroup mode does not
involve security machine accounts</emphasis>.
</para>

<para>
<indexterm><primary>domain membership</primary></indexterm>
<indexterm><primary>machine trust account</primary><secondary>password</secondary></indexterm>
<indexterm><primary>trigger</primary></indexterm>
Domain member machines have a machine trust account in the domain accounts database. A special procedure
must be followed on each machine to effect domain membership. This procedure, which can be done
only by the local machine Administrator account, creates the domain machine account (if it does
not exist), and then initializes that account. When the client first logs onto the
domain, a machine trust account password change will be automatically triggered.
</para>

<note><para>
<indexterm><primary>domain member</primary></indexterm>
When Samba is configured as a domain controller, secure network operation demands that
all MS Windows NT4/200x/XP Professional clients should be configured as domain members.
If a machine is not made a member of the domain, then it will operate like a workgroup
(standalone) machine. Please refer to <link linkend="domain-member">Domain Membership</link>, for
information regarding domain membership.
</para></note>

<para>
The following are necessary for configuring Samba-3 as an MS Windows NT4-style PDC for MS Windows
NT4/200x/XP clients:
</para>

<itemizedlist>
	<listitem><para>Configuration of basic TCP/IP and MS Windows networking.</para></listitem>
	<listitem><para>Correct designation of the server role (<smbconfoption name="security">user</smbconfoption>).</para></listitem>
	<listitem><para>Consistent configuration of name resolution.<footnote><para>See <link linkend="NetworkBrowsing">Network Browsing</link>, and 
		<link linkend="integrate-ms-networks">Integrating MS Windows Networks with Samba</link>.</para></footnote></para></listitem>
	<listitem><para>Domain logons for Windows NT4/200x/XP Professional clients.</para></listitem>
	<listitem><para>Configuration of roaming profiles or explicit configuration to force local profile usage.</para></listitem>
	<listitem><para>Configuration of network/system policies.</para></listitem>
	<listitem><para>Adding and managing domain user accounts.</para></listitem>
	<listitem><para>Configuring MS Windows NT4/2000 Professional and Windows XP Professional client machines to become domain members.</para></listitem>
</itemizedlist>

<para>
The following provisions are required to serve MS Windows 9x/Me clients:
</para>

<itemizedlist>
	<listitem><para>Configuration of basic TCP/IP and MS Windows networking.</para></listitem>
	<listitem><para>Correct designation of the server role (<smbconfoption name="security">user</smbconfoption>).</para></listitem>
	<listitem><para>Network logon configuration (since Windows 9x/Me/XP Home are not technically domain
	members, they do not really participate in  the security aspects of Domain logons as such).</para></listitem>
	<listitem><para>Roaming profile configuration.</para></listitem>
	<listitem><para>Configuration of system policy handling.</para></listitem>
	<listitem><para>Installation of the network driver <quote>Client for MS Windows Networks</quote> and configuration
	to log onto the domain.</para></listitem>
	<listitem><para>Placing Windows 9x/Me clients in user-level security &smbmdash; if it is desired to allow
	all client-share access to be controlled according to domain user/group identities.</para></listitem>
	<listitem><para>Adding and managing domain user accounts.</para></listitem>
</itemizedlist>

<note><para>
<indexterm><primary>roaming profiles</primary></indexterm>
<indexterm><primary>account policies</primary></indexterm>
Roaming profiles and system/network policies are advanced network administration topics
that are covered in <link linkend="ProfileMgmt">Desktop Profile Management</link> and
<link linkend="PolicyMgmt">System and Account Policies</link> of this document. However, these are not
necessarily specific to a Samba PDC as much as they are related to Windows NT networking concepts.
</para></note>

<para>
A domain controller is an SMB/CIFS server that:
</para>

<itemizedlist>
	<listitem><para>
	<indexterm><primary>NetBIOS</primary><secondary>brooadcast</secondary></indexterm>
	<indexterm><primary>WINS</primary></indexterm>
	<indexterm><primary>UDP</primary></indexterm>
	<indexterm><primary>DNS</primary></indexterm>
	<indexterm><primary>active directory</primary></indexterm>
	Registers and advertises itself as a domain controller (through NetBIOS broadcasts
	as well as by way of name registrations either by Mailslot Broadcasts over UDP broadcast,
	to a WINS server over UDP unicast, or via DNS and Active Directory).
	</para></listitem>

	<listitem><para>
	<indexterm><primary>NETLOGON</primary></indexterm>
	<indexterm><primary>LanMan logon service</primary></indexterm>
	Provides the NETLOGON service. (This is actually a collection of services that runs over
	multiple protocols. These include the LanMan logon service, the Netlogon service,
	the Local Security Account service, and variations of them.)
	</para></listitem>

	<listitem><para>
	Provides a share called NETLOGON.
	</para></listitem>
</itemizedlist>

<para>
<indexterm><primary>domain</primary><secondary>master</secondary><tertiary>browser</tertiary></indexterm>
<indexterm><primary>local</primary><secondary>master</secondary><tertiary>browser</tertiary></indexterm>
<indexterm><primary>DMB</primary></indexterm>
<indexterm><primary>LMB</primary></indexterm>
<indexterm><primary>browse list</primary></indexterm>
It is rather easy to configure Samba to provide these. Each Samba domain controller must provide the NETLOGON
service that Samba calls the <smbconfoption name="domain logons"/> functionality (after the name of the
parameter in the &smb.conf; file). Additionally, one server in a Samba-3 domain must advertise itself as the
domain master browser.<footnote><para>See <link linkend="NetworkBrowsing">Network
Browsing</link>.</para></footnote> This causes the PDC to claim a domain-specific NetBIOS name that identifies
it as a DMB for its given domain or workgroup. Local master browsers (LMBs) in the same domain or workgroup on
broadcast-isolated subnets then ask for a complete copy of the browse list for the whole wide-area network.
Browser clients then contact their LMB, and will receive the domain-wide browse list instead of just the list
for their broadcast-isolated subnet.
</para>

</sect2>
</sect1>

<sect1>
<title>Domain Control: Example Configuration</title>

<para>
The first step in creating a working Samba PDC is to understand the parameters necessary
in &smb.conf;. An example &smb.conf; for acting as a PDC can be found in <link linkend="pdc-example">the
smb.conf file for an example PDC</link>. 
</para>

<example id="pdc-example">
<title>smb.conf for being a PDC</title>
<smbconfblock>
<smbconfsection name="[global]"/>
<smbconfoption name="netbios name"><replaceable>BELERIAND</replaceable></smbconfoption>
<smbconfoption name="workgroup"><replaceable>&example.workgroup;</replaceable></smbconfoption>
<smbconfoption name="passdb backend">tdbsam</smbconfoption>
<smbconfoption name="os level">33</smbconfoption>
<smbconfoption name="preferred master">auto</smbconfoption>
<smbconfoption name="domain master">yes</smbconfoption>
<smbconfoption name="local master">yes</smbconfoption>
<smbconfoption name="security">user</smbconfoption>
<smbconfoption name="domain logons">yes</smbconfoption>
<smbconfoption name="logon path">\\%N\profiles\%U</smbconfoption>
<smbconfoption name="logon drive">H:</smbconfoption>
<smbconfoption name="logon home">\\homeserver\%U\winprofile</smbconfoption>
<smbconfoption name="logon script">logon.cmd</smbconfoption>

<smbconfsection name="[netlogon]"/>
<smbconfoption name="path">/var/lib/samba/netlogon</smbconfoption>
<smbconfoption name="read only">yes</smbconfoption>
<smbconfoption name="write list"><replaceable>ntadmin</replaceable></smbconfoption>

<smbconfsection name="[profiles]"/>
<smbconfoption name="path">/var/lib/samba/profiles</smbconfoption>
<smbconfoption name="read only">no</smbconfoption>
<smbconfoption name="create mask">0600</smbconfoption>
<smbconfoption name="directory mask">0700</smbconfoption>
</smbconfblock>
</example>

<para>
The basic options shown in <link linkend="pdc-example">this example</link> are explained as follows:
</para>

<variablelist>
	<varlistentry><term>passdb backend </term>
		<listitem><para>
		<indexterm><primary>group</primary><secondary>account</secondary></indexterm>
		<indexterm><primary>smbpasswd</primary></indexterm>
		<indexterm><primary>tdbsam</primary></indexterm>
		<indexterm><primary>ldapsam</primary></indexterm>
		<indexterm><primary>guest</primary></indexterm>
		<indexterm><primary>default accounts</primary></indexterm>
		This contains all the user and group account information. Acceptable values for a PDC
		are: <emphasis>smbpasswd, tdbsam, and ldapsam</emphasis>. The <quote>guest</quote> entry provides
		default accounts and is included by default; there is no need to add it explicitly.
		</para>

		<para>
		<indexterm><primary>passdb backend</primary></indexterm>
		<indexterm><primary>distributed</primary></indexterm>
		<indexterm><primary>smbpasswd</primary></indexterm>
		<indexterm><primary>tdbsam</primary></indexterm>
		Where use of BDCs is intended, the only logical choice is
		to use LDAP so the passdb backend can be distributed. The tdbsam and smbpasswd files
		cannot effectively be distributed and therefore should not be used.
		</para></listitem>
	</varlistentry>

	<varlistentry><term>Domain Control Parameters </term>
		<listitem><para>
		<indexterm><primary>os level</primary></indexterm>
		<indexterm><primary>preferred master</primary></indexterm>
		<indexterm><primary>domain master</primary></indexterm>
		<indexterm><primary>network</primary><secondary>logon</secondary></indexterm>
		The parameters <emphasis>os level, preferred master, domain master, security, 
		encrypt passwords</emphasis>, and <emphasis>domain logons</emphasis> play a central role in assuring domain
		control and network logon support.
		</para>

		<para>
		<indexterm><primary>DMB</primary></indexterm>
		<indexterm><primary>encryped password</primary></indexterm>
		The <emphasis>os level</emphasis> must be set at or above a value of 32. A domain controller
		must be the DMB, must be set in <emphasis>user</emphasis> mode security,
		must support Microsoft-compatible encrypted passwords, and must provide the network logon
		service (domain logons). Encrypted passwords must be enabled. For more details on how 
		to do this, refer to <link linkend="passdb">Account Information Databases</link>.
		</para></listitem>
	</varlistentry>

	<varlistentry><term>Environment Parameters </term>
		<listitem><para>
		<indexterm><primary>logon path</primary></indexterm>
		<indexterm><primary>logon home</primary></indexterm>
		<indexterm><primary>logon drive</primary></indexterm>
		<indexterm><primary>logon script</primary></indexterm>
		The parameters <emphasis>logon path, logon home, logon drive</emphasis>, and <emphasis>logon script</emphasis> are
		environment support settings that help to facilitate client logon operations and that help
		to provide automated control facilities to ease network management overheads. Please refer
		to the man page information for these parameters.
		</para></listitem>
	</varlistentry>

	<varlistentry><term>NETLOGON Share </term>
		<listitem><para>
		<indexterm><primary>NETLOGON</primary></indexterm>
		<indexterm><primary>logon processing</primary></indexterm>
		<indexterm><primary>domain logon</primary></indexterm>
		<indexterm><primary>domain membership</primary></indexterm>
		<indexterm><primary>group policy</primary></indexterm>
		<indexterm><primary>NTConfig.POL</primary></indexterm>
		The NETLOGON share plays a central role in domain logon and domain membership support.
		This share is provided on all Microsoft domain controllers. It is used to provide logon
		scripts, to store group policy files (NTConfig.POL), as well as to locate other common
		tools that may be needed for logon processing. This is an essential share on a domain controller.
		</para></listitem>
	</varlistentry>

	<varlistentry><term>PROFILE Share </term>
		<listitem><para>
		<indexterm><primary>desktop profile</primary></indexterm>
		<indexterm><primary>VFS</primary></indexterm>
		<indexterm><primary>fake_permissions</primary></indexterm>
		<indexterm><primary>profile</primary></indexterm>
		<indexterm><primary></primary></indexterm>
		This share is used to store user desktop profiles. Each user must have a directory at the root
		of this share. This directory must be write-enabled for the user and must be globally read-enabled.
		Samba-3 has a VFS module called <quote>fake_permissions</quote> that may be installed on this share. This will
		allow a Samba administrator to make the directory read-only to everyone. Of course this is useful
		only after the profile has been properly created.
		</para></listitem>
	</varlistentry>
</variablelist>

<note><para>
The above parameters make for a full set of functionality that may define the server's mode
of operation. The following &smb.conf; parameters are the essentials alone:
</para>

<para>
<smbconfblock>
<smbconfoption name="netbios name">BELERIAND</smbconfoption>
<smbconfoption name="workgroup">&example.workgroup;</smbconfoption>
<smbconfoption name="domain logons">Yes</smbconfoption>
<smbconfoption name="domain master">Yes</smbconfoption>
<smbconfoption name="security">User</smbconfoption>
</smbconfblock>
</para>

<para>
The additional parameters shown in the longer listing in this section just make for
a more complete explanation.
</para></note>

</sect1>

<sect1>
<title>Samba ADS Domain Control</title>

<para>
<indexterm><primary>active directory</primary></indexterm>
Samba-3 is not, and cannot act as, an Active Directory server. It cannot truly function as an Active Directory
PDC. The protocols for some of the functionality of Active Directory domain controllers has been partially
implemented on an experimental only basis. Please do not expect Samba-3 to support these protocols. Do not
depend on any such functionality either now or in the future. The Samba Team may remove these experimental
features or may change their behavior. This is mentioned for the benefit of those who have discovered secret
capabilities in Samba-3 and who have asked when this functionality will be completed. The answer is maybe
someday or maybe never!
</para>

<para>
<indexterm><primary>domain controllers</primary></indexterm>
<indexterm><primary>active directory</primary></indexterm>
To be sure, Samba-3 is designed to provide most of the functionality that Microsoft Windows NT4-style
domain controllers have. Samba-3 does not have all the capabilities of Windows NT4, but it does have
a number of features that Windows NT4 domain controllers do not have. In short, Samba-3 is not NT4 and it
is not Windows Server 200x: it is not an Active Directory server. We hope this is plain and simple
enough for all to understand.
</para>

</sect1>

<sect1>
<title>Domain and Network Logon Configuration</title>

<para>
<indexterm><primary>domain logon</primary></indexterm>
The subject of network or domain logons is discussed here because it forms
an integral part of the essential functionality that is provided by a domain controller.
</para>

<sect2>
<title>Domain Network Logon Service</title>

<para>
<indexterm><primary>domain logon</primary></indexterm>
All domain controllers must run the netlogon service (<emphasis>domain logons</emphasis>
in Samba). One domain controller must be configured with <smbconfoption name="domain master">Yes</smbconfoption>
(the PDC); on all BDCs set the parameter <smbconfoption name="domain master">No</smbconfoption>.
</para>

<sect3>
<title>Example Configuration</title>

<example id="PDC-config">
<title>smb.conf for being a PDC</title>
<smbconfblock>
<smbconfsection name="[global]"/>
<smbconfoption name="domain logons">Yes</smbconfoption>
<smbconfoption name="domain master">(Yes on PDC, No on BDCs)</smbconfoption>

<smbconfsection name="[netlogon]"/>
<smbconfoption name="comment">Network Logon Service</smbconfoption>
<smbconfoption name="path">/var/lib/samba/netlogon</smbconfoption>
<smbconfoption name="guest ok">Yes</smbconfoption>
<smbconfoption name="browseable">No</smbconfoption>
</smbconfblock>
</example>

</sect3>
<sect3>
<title>The Special Case of MS Windows XP Home Edition</title>

<para>
<indexterm><primary>Windows XP Home edition</primary></indexterm>
To be completely clear: If you want MS Windows XP Home Edition to integrate with your
MS Windows NT4 or Active Directory domain security, understand it cannot be done.
The only option is to purchase the upgrade from MS Windows XP Home Edition to
MS Windows XP Professional.
</para>

<note><para>
MS Windows XP Home Edition does not have the ability to join any type of domain
security facility. Unlike MS Windows 9x/Me, MS Windows XP Home Edition also completely
lacks the ability to log onto a network.
</para></note>

<para>
Now that this has been said, please do not ask the mailing list or email any of the
Samba Team members with your questions asking how to make this work. It can't be done.
If it can be done, then to do so would violate your software license agreement with
Microsoft, and we recommend that you do not do that.
</para>

</sect3>

<sect3>
<title>The Special Case of Windows 9x/Me</title>

<para>
<indexterm><primary>domain</primary></indexterm>
<indexterm><primary>workgroup</primary></indexterm>
<indexterm><primary>authentication</primary></indexterm>
<indexterm><primary>browsing</primary></indexterm>
<indexterm><primary>rights</primary></indexterm>
A domain and a workgroup are exactly the same in terms of network
browsing. The difference is that a distributable authentication
database is associated with a domain, for secure login access to a
network. Also, different access rights can be granted to users if they
successfully authenticate against a domain logon server. Samba-3 does this
now in the same way as MS Windows NT/200x.
</para>

<para>
<indexterm><primary>browsing</primary></indexterm>
The SMB client logging on to a domain has an expectation that every other
server in the domain should accept the same authentication information.
Network browsing functionality of domains and workgroups is identical and
is explained in this documentation under the browsing discussions.
It should be noted that browsing is totally orthogonal to logon support.
</para>

<para>
<indexterm><primary>single-logon</primary></indexterm>
<indexterm><primary>domain logons</primary></indexterm>
<indexterm><primary>network logon</primary></indexterm>
Issues related to the single-logon network model are discussed in this
section. Samba supports domain logons, network logon scripts, and user
profiles for MS Windows for Workgroups and MS Windows 9x/Me clients,
which are the focus of this section.
</para>

<para>
<indexterm><primary>broadcast request</primary></indexterm>
When an SMB client in a domain wishes to log on, it broadcasts requests for a logon server. The first one to
reply gets the job and validates its password using whatever mechanism the Samba administrator has installed.
It is possible (but ill advised) to create a domain where the user database is not shared between servers;
that is, they are effectively workgroup servers advertising themselves as participating in a domain. This
demonstrates how authentication is quite different from but closely involved with domains.
</para>

<para>
Using these features, you can make your clients verify their logon via
the Samba server, make clients run a batch file when they log on to
the network and download their preferences, desktop, and start menu.
</para>

<para><emphasis>
MS Windows XP Home edition is not able to join a domain and does not permit the use of domain logons.
</emphasis></para>

<para>
Before launching into the configuration instructions, it is worthwhile to look at how a Windows 9x/Me client
performs a logon:
</para>

<orderedlist>
<listitem>
	<para>
	<indexterm><primary>DOMAIN&lt;1C&gt;</primary></indexterm>
	<indexterm><primary>logon server</primary></indexterm>
	The client broadcasts (to the IP broadcast address of the subnet it is in)
	a NetLogon request. This is sent to the NetBIOS name DOMAIN&lt;1C&gt; at the
	NetBIOS layer. The client chooses the first response it receives, which
	contains the NetBIOS name of the logon server to use in the format of 
	<filename>\\SERVER</filename>. The <literal>1C</literal> name is the name
	type that is registered by domain controllers (SMB/CIFS servers that provide
	the netlogon service).
	</para>
</listitem>

<listitem>
	<para>
	<indexterm><primary>IPC$</primary></indexterm>
	<indexterm><primary>SMBsessetupX</primary></indexterm>
	<indexterm><primary>SMBtconX</primary></indexterm>
	The client connects to that server, logs on (does an SMBsessetupX) and
	then connects to the IPC$ share (using an SMBtconX).
	</para>
</listitem>

<listitem>
	<para>
	<indexterm><primary>NetWkstaUserLogon</primary></indexterm>
	The client does a NetWkstaUserLogon request, which retrieves the name
	of the user's logon script. 
	</para>
</listitem>

<listitem>
	<para>
	The client then connects to the NetLogon share and searches for said script.	
	If it is found and can be read, it is retrieved and executed by the client.
	After this, the client disconnects from the NetLogon share.
	</para>
</listitem>

<listitem>
	<para>
	<indexterm><primary>NetUserGetInfo</primary></indexterm>
	<indexterm><primary>profile</primary></indexterm>
	The client sends a NetUserGetInfo request to the server to retrieve
	the user's home share, which is used to search for profiles. Since the
	response to the NetUserGetInfo request does not contain much more than	
	the user's home share, profiles for Windows 9x clients must reside in the user
	home directory.
	</para>
</listitem>

<listitem>
	<para>
	<indexterm><primary>profiles</primary></indexterm>
	The client connects to the user's home share and searches for the 
	user's profile. As it turns out, you can specify the user's home share as
	a share name and path. For example, <filename>\\server\fred\.winprofile</filename>.
	If the profiles are found, they are implemented.
	</para>
</listitem>

<listitem>
	<para>
	<indexterm><primary>CONFIG.POL</primary></indexterm>
	The client then disconnects from the user's home share and reconnects to
	the NetLogon share and looks for <filename>CONFIG.POL</filename>, the policies file. If this is
	found, it is read and implemented.
	</para>
</listitem>
</orderedlist>

<para>
The main difference between a PDC and a Windows 9x/Me logon server configuration is:
</para>

<itemizedlist>
<listitem><para>
	<indexterm><primary>password</primary><secondary>plaintext</secondary></indexterm>
	<indexterm><primary>plaintext password</primary></indexterm>
	Password encryption is not required for a Windows 9x/Me logon server. But note
	that beginning with MS Windows 98 the default setting is that plaintext
	password support is disabled. It can be re-enabled with the registry
	changes that are documented in <link linkend="PolicyMgmt">System and Account Policies</link>.
	</para></listitem>

	<listitem><para>
	<indexterm><primary>machine trust account</primary></indexterm>
	Windows 9x/Me clients do not require and do not use Machine Trust Accounts.
	</para></listitem>
</itemizedlist>

<para>
<indexterm><primary>network logon services</primary></indexterm>
A Samba PDC will act as a Windows 9x/Me logon server; after all, it does provide the
network logon services that MS Windows 9x/Me expect to find.
</para>

<note><para>
<indexterm><primary>sniffer</primary></indexterm>
Use of plaintext passwords is strongly discouraged. Where used they are easily detected
using a sniffer tool to examine network traffic.
</para></note>

</sect3>
</sect2>

<sect2>
<title>Security Mode and Master Browsers</title>

<para>
<indexterm><primary>security mode</primary></indexterm>
<indexterm><primary>user-mode security</primary></indexterm>
<indexterm><primary>share-mode security</primary></indexterm>
There are a few comments to make in order to tie up some loose ends. There has been much debate over the issue
of whether it is okay to configure Samba as a domain controller that operates with security mode other than
user-mode. The only security mode that will not work due to technical reasons is share-mode security. Domain
and server mode security are really just a variation on SMB user-level security.
</para>

<para>
<indexterm><primary>DOMAIN&lt;1C&gt;</primary></indexterm>
<indexterm><primary>DOMAIN&lt;1B&gt;</primary></indexterm>
<indexterm><primary>DMB</primary></indexterm>
<indexterm><primary>PDC</primary></indexterm>
<indexterm><primary>NetBIOS name</primary></indexterm>
<indexterm><primary>domain controller</primary></indexterm>
<indexterm><primary>election</primary></indexterm>
Actually, this issue is also closely tied to the debate on whether Samba must be the DMB for its workgroup
when operating as a domain controller.  In a pure Microsoft Windows NT domain, the PDC wins the election to be
the DMB, and then registers the DOMAIN&lt;1B&gt; NetBIOS name. This is not the name used by Windows clients
to locate the domain controller, all domain controllers register the DOMAIN&lt;1C&gt; name and Windows clients
locate a network logon server by seraching for the DOMAIN&lt;1C&gt; name.  A DMB is a Domain Master Browser
&smbmdash; see <link linkend="NetworkBrowsing">The Network Browsing Chapter</link>, <link
linkend="DMB">Configuring WORKGROUP Browsing</link>; Microsoft PDCs expect to win the election to become the
DMB, if it loses that election it will report a continuous and rapid sequence of warning messages to its
Windows event logger complaining that it has lost the election to become a DMB.  For this reason, in networks
where a Samba server is the PDC it is wise to configure the Samba domain controller as the DMB.
</para>

<note><para>
<indexterm><primary>DOMAIN&lt;1D&gt;</primary></indexterm>
<indexterm><primary>synchronization</primary></indexterm>
<indexterm><primary>domain control</primary></indexterm>
<indexterm><primary>browse list management</primary></indexterm>
<indexterm><primary>network</primary><secondary>logon</secondary><tertiary>service</tertiary></indexterm>
SMB/CIFS servers that register the DOMAIN&lt;1C&gt; name do so because they provide the network logon
service. Server that register the DOMAIN&lt;1B&gt; name are DMBs &smbmdash; meaning that they are responsible
for browse list synchronization across all machines that have registered the DOMAIN&lt;1D&gt; name. The later
are LMBs that have the responsibility to listen to all NetBIOS name registrations that occur locally to their
own network segment. The network logon service (NETLOGON) is germane to domain control and has nothing to do
with network browsing and browse list management. The 1C and 1B/1D name services are orthogonal to each
other.
</para></note>

<para>
Now back to the issue of configuring a Samba domain controller to use a mode other than <smbconfoption
name="security">user</smbconfoption>. If a Samba host is configured to use another SMB server or domain
controller in order to validate user connection requests, it is a fact that some other machine on the network
(the <smbconfoption name="password server"/>) knows more about the user than the Samba host. About 99 percent
of the time, this other host is a domain controller. Now to operate in domain mode security, the
<smbconfoption name="workgroup"/> parameter must be set to the name of the Windows NT domain (which already
has a domain controller).  If the domain does not already have a domain controller, you do not yet have a
domain.
</para>

<para>
Configuring a Samba box as a domain controller for a domain that already by definition has a
PDC is asking for trouble. Therefore, you should always configure the Samba domain controller
to be the DMB for its domain and set <smbconfoption name="security">user</smbconfoption>.
This is the only officially supported mode of operation.
</para>

</sect2>

</sect1>

<sect1>
<title>Common Errors</title>

<sect2>
<title><quote>$</quote> Cannot Be Included in Machine Name</title>

<para>
<indexterm><primary>BSD</primary></indexterm>
<indexterm><primary>FreeBSD</primary></indexterm>
<indexterm><primary>/etc/passwd</primary></indexterm>
A machine account, typically stored in <filename>/etc/passwd</filename>, takes the form of the machine
name with a <quote>$</quote> appended. Some BSD systems will not create a user with a <quote>$</quote> in the name.
Recent versions of FreeBSD have removed this limitation, but older releases are still in common use.
</para>

<para>
<indexterm><primary>vipw</primary></indexterm>
The problem is only in the program used to make the entry. Once made, it works perfectly.  Create a user
without the <quote>$</quote>. Then use <command>vipw</command> to edit the entry, adding the <quote>$</quote>.
Or create the whole entry with vipw if you like; make sure you use a unique user login ID.
</para>

<note><para>The machine account must have the exact name that the workstation has.</para></note>

<note><para>
The UNIX tool <command>vipw</command> is a common tool for directly editing the <filename>/etc/passwd</filename> file.
The use of vipw will ensure that shadow files (where used) will remain current with the passwd file. This is
important for security reasons.
</para></note>

</sect2>

<sect2>
<title>Joining Domain Fails Because of Existing Machine Account</title>
		
<para>
<indexterm><primary>join domain</primary></indexterm>
<quote>I get told, `You already have a connection to the Domain....' or `Cannot join domain, the
credentials supplied conflict with an existing set...' when creating a Machine Trust Account.</quote>
</para>

<para>
This happens if you try to create a Machine Trust Account from the machine itself and already have a
connection (e.g., mapped drive) to a share (or IPC$) on the Samba PDC. The following command will remove all
network drive connections:
<screen>
&dosprompt;<userinput>net use * /d</userinput>
</screen>
This will break all network connections.
</para>

<para>
Further, if the machine is already a <quote>member of a workgroup</quote> that is the same name as the domain
you are joining (bad idea), you will get this message. Change the workgroup name to something else &smbmdash;
it does not matter what &smbmdash; reboot, and try again.
</para>

</sect2>

<sect2>
<title>The System Cannot Log You On (C000019B)</title>

<para><quote>
I joined the domain successfully but after upgrading to a newer version of the Samba code I get the message,
<errorname>`The system cannot log you on (C000019B). Please try again or consult your system
administrator</errorname> when attempting to logon.'</quote>
</para>

<para>
<indexterm><primary>SID</primary></indexterm>
This occurs when the domain SID stored in the secrets.tdb database is changed. The most common cause of a
change in domain SID is when the domain name and/or the server name (NetBIOS name) is changed.  The only way
to correct the problem is to restore the original domain SID or remove the domain client from the domain and
rejoin. The domain SID may be reset using either the net or rpcclient utilities.
</para>

<para>
To reset or change the domain SID you can use the net command as follows:

<screen>
&rootprompt;<userinput>net getlocalsid 'OLDNAME'</userinput>
&rootprompt;<userinput>net setlocalsid 'SID'</userinput>
</screen>
</para>

<para>
Workstation Machine Trust Accounts work only with the domain (or network) SID. If this SID changes,
domain members (workstations) will not be able to log onto the domain. The original domain SID
can be recovered from the secrets.tdb file. The alternative is to visit each workstation to rejoin
it to the domain.
</para>

</sect2>

<sect2>
<title>The Machine Trust Account Is Not Accessible</title>

<para>
<quote>When I try to join the domain I get the message, <errorname>"The machine account 
for this computer either does not exist or is not accessible</errorname>." What's wrong?</quote>
</para>

<para>
This problem is caused by the PDC not having a suitable Machine Trust Account.  If you are using the
<smbconfoption name="add machine script"/> method to create accounts, then this would indicate that it has not
worked. Ensure the domain admin user system is working.
</para>

<para>
Alternately, if you are creating account entries manually, then they have not been created correctly. Make
sure that you have the entry correct for the Machine Trust Account in <filename>smbpasswd</filename> file on
the Samba PDC.  If you added the account using an editor rather than using the smbpasswd utility, make sure
that the account name is the machine NetBIOS name with a <quote>$</quote> appended to it (i.e.,
computer_name$). There must be an entry in both the POSIX UNIX system account backend as well as in the
SambaSAMAccount backend. The default backend for Samba-3 (i.e., the parameter <parameter>passdb
backend</parameter> is not specified in the &smb.conf; file, or if specified is set to
<literal>smbpasswd</literal>, are respectively the <filename>/etc/passwd</filename> and
<filename>/etc/samba/smbpasswd</filename> (or <filename>/usr/local/samba/lib/private/smbpasswd</filename> if
compiled using Samba Team default settings). The use of the <filename>/etc/passwd</filename> can be overridden
by alternative settings in the NSS <filename>/etc/nsswitch.conf</filename> file.
</para>

<para>
Some people have also reported that inconsistent subnet masks between the Samba server and the NT 
client can cause this problem.  Make sure that these are consistent for both client and server.
</para>
</sect2>

<sect2>
<title>Account Disabled</title>

<para><quote>When I attempt to log in to a Samba domain from a NT4/W200x workstation,
I get a message about my account being disabled.</quote></para>

<para>
Enable the user accounts with <userinput>smbpasswd -e <replaceable>username</replaceable>
</userinput>. This is normally done as an account is created.
</para>

</sect2>

<sect2>
<title>Domain Controller Unavailable</title>
		
<para><quote>Until a few minutes after Samba has started, clients get the error `Domain Controller Unavailable'</quote></para>

<para>
A domain controller has to announce its role on the network. This usually takes a while. Be patient for up to 15 minutes,
then try again.
</para>
</sect2>

<sect2>
<title>Cannot Log onto Domain Member Workstation After Joining Domain</title>

<para>
<indexterm><primary>schannel</primary></indexterm>
<indexterm><primary>signing</primary></indexterm>
After successfully joining the domain, user logons fail with one of two messages: one to the
effect that the domain controller cannot be found; the other claims that the account does not
exist in the domain or that the password is incorrect. This may be due to incompatible
settings between the Windows client and the Samba-3 server for <emphasis>schannel</emphasis>
(secure channel) settings or <emphasis>smb signing</emphasis> settings. Check your Samba
settings for <emphasis>client schannel</emphasis>, <emphasis>server schannel</emphasis>,
<emphasis>client signing</emphasis>, <emphasis>server signing</emphasis> by executing:
<screen>
<command>testparm -v | grep channel</command> and looking for the value of these parameters.
</screen>
</para>

<para>
Also use the MMC &smbmdash; Local Security Settings. This tool is available from the
Control Panel. The Policy settings are found in the Local Policies/Security Options area and are prefixed by
<emphasis>Secure Channel:..., and Digitally sign...</emphasis>.
</para>

<para>
It is important that these be set consistently with the Samba-3 server settings.
</para>

</sect2>

</sect1>
</chapter>
