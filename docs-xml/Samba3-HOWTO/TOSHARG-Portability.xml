<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE chapter PUBLIC "-//Samba-Team//DTD DocBook V4.2-Based Variant V1.0//EN" "http://www.samba.org/samba/DTD/samba-doc">
<chapter id="Portability">
<chapterinfo>
	&author.jelmer;
	&author.jht;
	<!-- Some other people as well, but there were no author names in the text files this file is based on-->
</chapterinfo>

<title>移植性</title>

<para>
<indexterm><primary>プラットフォーム</primary></indexterm>
<indexterm><primary>互換性</primary></indexterm>
Samba は広い範囲のプラットフォームで機能する。しかし、
すべてのプラットフォームの提供するインタフェースが常に互換性があるとは限らない。
この章は Samba のコンパイルと利用についてプラットフォームに特化した情報を含む。
</para>

<sect1>
<title>HPUX</title>

<para>
<indexterm><primary>/etc/logingroup</primary></indexterm>
<indexterm><primary>/etc/group</primary></indexterm>
ヒューレットパッカーの補助グループの実装が非標準である (歴史的な理由により)。
<filename>/etc/group</filename> と <filename>/etc/logingroup</filename> の
２つのグループファイルがある。システムは UID を前者のファイルを使用して割り当
てるが、 initgroups() は後者を参照する。
コツを知っている大抵のシステム管理者は、シンボリックリン
ク <filename>/etc/group</filename> 
を <filename>/etc/logingroup</filename> へ張る (ここに入ることができない愚鈍な
理由でハードリンクでは機能しない) 。
もし、所属しているグループのうちの一つが、<filename>/etc/logingroup</filename>
の中で、不正な ID であると考えられた場合はエラーを出す。
ここで言う不正な ID とは <constant>[0..UID_MAX]</constant> の範囲を超えた場合
であり、<constant>UID_MAX</constant> は HP-UX で現在のところ 60000 である。
この範囲は、-2 と 65534 を除外している。これは通常 <constant>nobody</constant>
GID である。
</para>

<para>
もしこの問題に遭遇した場合は、initgroups() に失敗するプログラムが、
実行しているユーザが許可された範囲外の GID のグループユーザによって実行されている
ことを確認すること。
If you encounter this problem, make sure the programs that are failing 
to initgroups() are run as users, not in any groups with GIDs outside the 
allowed range.
</para>

<para>
このことは、HP マニュアルページ setgroup(2) と passwd(4)に記述されている。
</para>

<para>
<indexterm><primary>gcc</primary></indexterm>
<indexterm><primary>ANSI コンパイラ</primary></indexterm>
HP-UX では、gcc または HP ANSI コンパイラを利用しなければならない。
HP-UX に付属する無償のコンパイラは ANSI に準拠していないため Samba をコンパイ
ルできない。
</para>

</sect1>

<sect1>
<title>SCO UNIX</title>

<para>
もし古いバージョンの SCO UNIX を稼働させているのなら、Samba を正常に
機能させるために TCP/IP の重要なパッチを入手する必要があるだろう。
そのパッチなしには、Samba を利用している際に転送データの破損に遭遇するだろう。
Without the patch, you may encounter corrupt data transfers using Samba.
</para>

<para>
必要とするパッチは UOD385 Connection Drivers SLS だ。
SCO <ulink noescape="1" url="ftp://ftp.sco.com/">ftp.sco.com</ulink> からダウ
ンロードできる。ディレクトリ SLS のファイル uod385a.Z と uod385a.ltr.Z 。
It is available from
SCO <ulink noescape="1" url="ftp://ftp.sco.com/">ftp.sco.com</ulink>, directory SLS,
files uod385a.Z and uod385a.ltr.Z).
</para>

<para>
ここで提供される情報は、SCO UNIX の古いバージョンを参照している。
もしより新しい SCO UNIX のバイナリを求めるならば、インストールする準備ができて
いるパッケージを入手するため SCO に連絡すること。
インストールするバイナリのためプラットフォームが最新であることも SCO で確認し
なければならない。
これはインストール作業にてデータ破損を避けるために重要なことだ。
SCO UNIX 製品のために Samba をビルドする場合、 Samba のソースに大幅なパッチが
必要となる。
SCO から直接バイナリパッケージを入手ことの方がとても容易である。
</para>

</sect1>

<sect1>
<title>DNIX</title>

<para>
DNIX has a problem with seteuid() and setegid(). These routines are
needed for Samba to work correctly, but they were left out of the DNIX
C library for some reason.
</para>

<para>
For this reason Samba by default defines the macro NO_EID in the DNIX
section of includes.h. This works around the problem in a limited way,
but it is far from ideal, and some things still will not work right.
</para>

<para> 
To fix the problem properly, you need to assemble the following two
functions and then either add them to your C library or link them into
Samba. Put the following in the file <filename>setegid.s</filename>:
</para>

<para><programlisting>
        .globl  _setegid
_setegid:
        moveq   #47,d0
        movl    #100,a0
        moveq   #1,d1
        movl    4(sp),a1
        trap    #9
        bccs    1$
        jmp     cerror
1$:
        clrl    d0
        rts
</programlisting></para>

<para>
Put this in the file <filename>seteuid.s</filename>:
</para>

<para><programlisting>
        .globl  _seteuid
_seteuid:
        moveq   #47,d0
        movl    #100,a0
        moveq   #0,d1
        movl    4(sp),a1
        trap    #9
        bccs    1$
        jmp     cerror
1$:
        clrl    d0
        rts
</programlisting></para>

<para>
After creating the files, you then assemble them using
</para>

<screen>
&prompt;<userinput>as seteuid.s</userinput>
&prompt;<userinput>as setegid.s</userinput>
</screen>

<para>
which should produce the files <filename>seteuid.o</filename> and
<filename>setegid.o</filename>.
</para>

<para>
Next you need to add these to the LIBSM line in the DNIX section of
the Samba Makefile. Your LIBSM line will look something like this:
</para>

<para><programlisting>
LIBSM = setegid.o seteuid.o -ln
</programlisting></para>

<para>
You should then remove the line:
</para>

<para><programlisting>
#define NO_EID
</programlisting></para>

<para>from the DNIX section of <filename>includes.h</filename>.</para>

</sect1>

<sect1>
<title>Red Hat Linux</title>

<para>
By default during installation, some versions of Red Hat Linux add an
entry to <filename>/etc/hosts</filename> as follows:
<programlisting>
127.0.0.1 loopback "hostname"."domainname"
</programlisting>
</para>

<para>
<indexterm><primary>loopback interface</primary></indexterm>
This causes Samba to loop back onto the loopback interface.
The result is that Samba fails to communicate correctly with
the world and therefore may fail to correctly negotiate who
is the master browse list holder and who is the master browser.
</para>

<para>
Corrective action: Delete the entry after the word "loopback"
in the line starting 127.0.0.1.
</para>
</sect1>

<sect1>
<title>AIX: Sequential Read Ahead</title>
<!-- From an email by William Jojo <jojowil@hvcc.edu> -->
<para>
Disabling sequential read ahead can improve Samba performance significantly
when there is a relatively high level of multiprogramming (many smbd processes
or mixed with another workload), not an abundance of physical memory or slower
disk technology. These can cause AIX to have a higher WAIT values. Disabling
sequential read-ahead can also have an adverse affect on other workloads in the
system so you will need to evaluate other applications for impact.
</para>

<para>
It is recommended to use the defaults provided by IBM, but if you experience a
high amount of wait time, try disabling read-ahead with the following commands:
</para>

<para>
For AIX 5.1 and earlier: <userinput>vmtune -r 0</userinput>
</para>

<para>
For AIX 5.2 and later jfs filesystems: <userinput>ioo -o minpgahead=0</userinput>
</para>

<para>
For AIX 5.2 and later jfs2 filesystems: <userinput>ioo -o j2_minPageReadAhead=0</userinput>
</para>

<para>
If you have a mix of jfs and jfs2 filesystems on the same host, simply use both
ioo commands.
</para>
</sect1>

<sect1>
<title>Solaris</title>

<sect2>
<title>Locking Improvements</title>

<para>Some people have been experiencing problems with F_SETLKW64/fcntl 
when running Samba on Solaris. The built-in file-locking mechanism was
not scalable. Performance would degrade to the point where processes would
get into loops of trying to lock a file. It would try a lock, then fail,
then try again. The lock attempt was failing before the grant was
occurring. The visible manifestation of this was a handful of
processes stealing all of the CPU, and when they were trussed, they would
be stuck in F_SETLKW64 loops.
</para>

<para>
Please check with Sun support for current patches needed to fix this bug.
The patch revision for 2.6 is 105181-34, for 8 is 108528-19, and for 9 is 112233-04.
After the installation of these patches, it is recommended to reconfigure
and rebuild Samba.
</para>

<para>Thanks to Joe Meslovich for reporting this.</para>

</sect2>

<sect2 id="winbind-solaris9">
<title>Winbind on Solaris 9</title>
<para>
Nsswitch on Solaris 9 refuses to use the Winbind NSS module. This behavior
is fixed by Sun in patch <ulink
url="http://sunsolve.sun.com/search/advsearch.do?collection=PATCH&amp;type=collections&amp;max=50&amp;language=en&amp;queryKey5=112960;rev=14&amp;toDocument=yes">112960-14</ulink>.
</para>
</sect2>
</sect1>

</chapter>
