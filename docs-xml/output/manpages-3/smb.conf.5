'\" t
.\"     Title: smb.conf
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.75.2 <http://docbook.sf.net/>
.\"      Date: 06/09/2010
.\"    Manual: ファイルフォーマットと変換
.\"    Source: Samba 3.4
.\"  Language: English
.\"
.TH "SMB\&.CONF" "5" "06/09/2010" "Samba 3\&.4" "ファイルフォーマットと変換"
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
smb.conf \- Samba の設定ファイル
.SH "概要"
.PP
smb\&.conf
ファイルは Samba システムの設定ファイルである。smb\&.conf
には、Samba システムの各プログラムが実行時に参照する設定情報が記述される。
smb\&.conf
ファイルは、\fBswat\fR(8)
プログラムによって設定、 管理されるように設計されている。 以下参照目的で、ファイルの形式と設定可能なパラメータに関して網羅的に記述する。
.SH "ファイルの形式"
.PP
ファイルはセクションとパラメータから構成される。セクションは、 大括弧(\(lq[\(rq
と
\(lq]\(rq) で囲まれたセクション名で始まり、次のセクションが始まるまで 続く。セクション内には以下の形式でパラメータが記述される:
.sp
.if n \{\
.RS 4
.\}
.nf
\fIパラメータ名（パラメータ）\fR = \fIパラメータ値（値）\fR
.fi
.if n \{\
.RE
.\}
.PP
ファイルは行を基本単位とし、改行で終了する各行は、コメント、 セクション名、パラメータのいずれかを表す。
.PP
セクション名およびパラメータ名は大文字と小文字を区別しない。
.PP
パラメータを示す行では、最初の 「=」 文字に重要な意味がある。 最初の 「=」 文字の前後の空白文字は破棄される。 セクション名およびパラメータ名の先頭、 途中、末尾にある空白文字は 無視される。パラメータ値の先頭と末尾にある空白文字も無視される。 ただし、パラメータ値の途中にある空白文字はそのまま意味を持つ。
.PP
セミコロン (\(lq:\(rq)、シャープ (\(lq#\(rq) で始まる行や、空白のみの行は 無視される。
.PP
\(lq\e\(rq
文字で終わる行は、UNIX の慣習通り次の行へ継続する。
.PP
「=」文字に続くパラメータ値には、文字列 (引用符で囲む必要はない)、または真偽値を表す、yes/no、0/1、true/false のいずれかを記述する。真偽値の場合、大文字と小文字は同じ意味だが、 記述されたとおりの文字列が保存される。 create mask など、幾つかのパラメータ値は数値となる。
.SH "セクションの説明"
.PP
設定ファイル中の ([global] セクションを除く) 各セクションでは、 共有リソース (単に\(lq共有\(rqとも呼ぶ (訳注: 「サービス」とも呼ばれる)) の設定が行なわれる。 セクション名は共有リソース名となり、 セクション内のパラメータは共有の設定に利用される。
.PP
[global]、[homes]、[printers] という 3 つの特殊なセクションに ついては、\fI特殊なセクション\fR
で説明する。 以下の説明は、通常のセクションについてのものである。
.PP
共有の設定としては、大きくアクセスを許可するディレクトリの設定と それを利用するユーザに対するアクセス許可の設定とがある。 その他いくつかの補助的なオプションの指定も可能である。
.PP
セクションは、ファイル共有サービス (クライアントからファイルシステムの延長として利用される) とプリントサービス (クライアントからサーバ上で動作している 印刷サービスにアクセスするために利用される) のいずれかに分類される。
.PP
セクションは、パスワードなしでアクセスできる
\fIゲスト\fR
サービスとして構成することもできる。 この場合、UNIX 側で指定された\fIゲストアカウント\fRの権限でアクセスが 行なわれる。
.PP
ゲストサービス以外のセクションにアクセスするにはパスワードが 必要である。通常クライアントからはユーザ名も提供されるが、 年代物のクライアントはパスワードのみでユーザ名を提供しないため、
\(lquser =\(rq
パラメータで指定したユーザのリストを用いてパスワードの検証を 行なうことも可能である。Windows 95/98/Me/NT/2000 のような最近の クライアントでは、このパラメータは不要である。
.PP
Samba より与えられたアクセス権は、システムより UNIX ユーザ (またはゲストユーザ) に与えられたアクセス権によって制限されることに注意して欲しい。 Samba はシステムが許可する以上のアクセス権を許可することはできない。
.PP
以下の簡単なセクションは、ファイル共有を定義するものである。 ユーザは
/home/bar
に対して書き込みができる。 共有は、foo
という共有名でアクセス可能である:
.sp
.if n \{\
.RS 4
.\}
.nf
	\fI[foo]\fR
	\m[blue]\fBpath = /home/bar\fR\m[]
	\m[blue]\fBread only = no\fR\m[]
.fi
.if n \{\
.RE
.\}
.PP
以下の簡単なセクションは印刷サービスを定義するものである。 共有は読み取りのみであるが、印刷可能である。これは、 スプールファイルのオープン、書き込み、クローズという作業についてのみ書き込みが許可されるということである。\fIguest ok\fR
パラメータは、(別途定義された) デフォルトのゲストユーザとしてアクセスが許可されていることを意味する:
.sp
.if n \{\
.RS 4
.\}
.nf
	\fI[aprinter]\fR
	\m[blue]\fBpath = /usr/spool/public\fR\m[]
	\m[blue]\fBread only = yes\fR\m[]
	\m[blue]\fBprintable = yes\fR\m[]
	\m[blue]\fBguest ok = yes\fR\m[]
.fi
.if n \{\
.RE
.\}
.sp
.SH "特殊なセクション"
.SS "[global] セクション"
.PP
このセクション中のパラメータは、サーバ全体に対して、 もしくは各セクションで項目が定義していないときの既定値として 適用される。詳細な情報はパラメータ(PARAMETERS)の節を参照のこと。
.SS "[homes] セクション"
.PP
homes セクションが設定ファイル中にあると、 接続してきたユーザのホームディレクトリを共有するサービスが 必要時にサーバによって作成されるようになる。
.PP
接続の要求が行なわれると、存在するセクションが検索される。 要求に合致するセクションが見つかった場合はそのセクションが 利用される。見つからなかった場合は、 要求されたセクション名をユーザ名とみなしてローカルのパスワードファイルが検索される。 ファイル中に名前が存在して、パスワードが適切だった場合、 [homes] セクションの設定を引き継ぐ形で共有が作成される。
.PP
新しく作成される共有に対しては、 幾つかの変更が行なわれる:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
共有名は、homes からユーザ名に変更される。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
path パラメータが設定されていなかった場合、 ディレクトリのパスはユーザのホームディレクトリに設定される。
.sp
.RE
.PP
\fIpath = \fR
行を [homes] セクションに記述した場合、"%S" マクロを用いると便利になる 場合があるかも知れない。以下に一例を示す:
.PP
\fBpath = /data/pchome/%S\fR
.PP
これは、UNIX からのアクセスと PC からのアクセスとでホームディレクトリが異なる場合に便利である。
.PP
これは多数のクライアントに対するホームディレクトリの 提供を最小の手間で素早く簡単に実現する方法である。
.PP
要求されたセクション名が
\(lqhomes\(rq
の場合にも同様の処理が行われるが、共有名が要求したユーザの 名前に変更されることはない。 [homes] セクションを使用する 方法は、複数のユーザがクライアント PC を共有する場合に 便利である。
.PP
[homes] セクションでは、通常のサービスで指定可能な すべてのパラメータを指定できるが、幾つかのものは他の セクションと少し違った意味になる。以下は典型的な [homes] セクションの例である:
.sp
.if n \{\
.RS 4
.\}
.nf
\fI[homes]\fR
\m[blue]\fBread only = no\fR\m[]
.fi
.if n \{\
.RE
.\}
.PP
重要な点として、[homes] セクションでゲストアクセスを許可した場合、 全てのホームディレクトリが全てのクライアントから
\fIパスワードなしで\fR
アクセス可能になるという点が挙げられる。 ほとんどあり得ないと思うが、もしこの設定を実際に行なうのであれば、\fI読み取り専用\fR
アクセスの設定にしておくことが好ましいであろう。
.PP
自動的に作成されるホームディレクトリの
\fIbrowseable\fR
パラメータの値は、[homes] セクションの browseable パラメータからではなく、[global] セクションの browseable パラメータより継承される。これは、 [homes] セクションで
\fIbrowseable = no\fR
を指定して [homes] 共有を不可視にしても、自動的に作成されるホームディレクトリを表示させるようにするための仕様である。
.SS "[printers] セクション"
.PP
このセクションは、プリンタ用の [homes] セクションに 相当する。
.PP
[printers] セクションが設定されていると、ユーザは、 ローカルホストの printcap ファイルで設定されている各プリンタに接続することが可能となる。
.PP
接続の要求が行なわれると、存在するセクションが検索される。 要求に合致するセクションが見つかった場合はそのセクションが利用される。 見つからなかった場合、[homes] セクションがあれば前述した処理が行なわれる。 それでも要求が解決できない場合は、 要求されたセクション名をプリンタ名とみなし、 適切な pritcap ファイルが検索され、 要求されたセクション名をプリンタ共有名とみなすかどうかの 確認が行なわれる。ファイル中に名前が存在した場合は、 [printers] セクションの設定を引き継ぐ形でプリンタ共有が 作成される。
.PP
新しく作成される共有に対しては、 幾つかの変更が行なわれる:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
共有名には、実際のプリンタ名が設定される。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
プリンタ名が設定されていない場合、 プリンタ名として実際のプリンタ名が設定される。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
共有がゲストアクセスを許可しておらず、 username パラメータも指定されていない場合、username に実際のプリンタ名が設定される。
.sp
.RE
.PP
[printers] サービスは、必ず printable にすること。 それ以外の設定を行なうと、サーバが設定ファイルの読み取りを 拒否してしまう。
.PP
通常指定されるパスは、sticky ビットが設定され、 誰でも書き込み可能になっているスプールディレクトリである。 典型的な [printers] のエントリは次のようになる:
.sp
.if n \{\
.RS 4
.\}
.nf
\fI[printers]\fR
\m[blue]\fBpath = /usr/spool/public\fR\m[]
\m[blue]\fBguest ok = yes\fR\m[]
\m[blue]\fBprintable = yes\fR\m[]
.fi
.if n \{\
.RE
.\}
.PP
printcap ファイル中で定義されているすべてのプリンタの エイリアス(別名)は、プリンタ名として認識される。 印刷システムが printcap ファイルのような機構を使用して いないのであれば、仮の printcap ファイルを設定する必要がある。 このファイルは以下のような形式の行で構成される:
.sp
.if n \{\
.RS 4
.\}
.nf
alias|alias|alias|alias\&.\&.\&.    
.fi
.if n \{\
.RE
.\}
.PP
各エイリアスは、印刷システムが処理可能なプリンタ名で ある必要がある。[global] セクションで、別のファイルを printcap ファイルとして指定することで、仮想的な printcap ファイル中にある名前のみがサーバに認識される。 もちろんこのファイル中には任意のエイリアスを記述することが 可能である。このテクニックは、ローカルプリンタの一部のみに アクセスを制限する機能を簡単に実現するためにも利用できる。
.PP
なお、エイリアスとは printcap ファイル中の各レコードの 最初のエントリに続く各要素をさす。 各レコードは改行コードで区切られ、各要素は (複数個存在する場合) 縦棒 (|) で区切られる。
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBNote\fR
.ps -1
.br
.PP
lpstat コマンドによりシステムで定義されている プリンタの一覧を取得可能な SYSV 系のシステムでは、
printcap name = lpstat
とすることで、 プリンタの一覧を取得することが可能である。 詳細は、printcap name
オプションを参照のこと。
.sp .5v
.RE
.SH "ユーザ定義共有"
.PP
Samba 3\&.0\&.23 より、root 以外のユーザが共有の追加、修正、削除を行なうことを可能とする機能が追加された。 この機能を
\fIユーザ定義共有(usershares)\fR
と呼び、 smb\&.conf の

セクションで定義される一連のパラメータによって制御される。 関連するパラメータを以下に示す :
.PP
usershare allow guests
.RS 4
ユーザ定義共有でゲストアクセスを許可するかどうかを制御する。
.RE
.PP
usershare max shares
.RS 4
作成を許可するユーザ定義共有の最大数を制御する。
.RE
.PP
usershare owner only
.RS 4
有効にすると、ユーザが所有しているディレクトリのみが共有可能となる。
.RE
.PP
usershare path
.RS 4
ユーザ定義共有を作成可能なディレクトリを指定する。 実際にユーザ定義共有を作成可能かどうかは、ファイルシステム上のディレクトリのパーミッションに依存する。
.RE
.PP
usershare prefix allow list
.RS 4
共有を許可するディレクトリの絶対パス名をコンマで区切って列挙する。 ここで指定されたパス名から始まるディレクトリのみが共有を許可される。
.RE
.PP
usershare prefix deny list
.RS 4
共有を拒否するディレクトリの絶対パス名をコンマで区切って列挙する。 ここで指定されたパス名から始まるディレクトリは共有を拒否される。
.RE
.PP
usershare template share
.RS 4
新しいユーザ定義共有を作成する際のテンプレートとなる既存の共有を指定する。 ユーザ定義共有の定義時に指定されなかったすべての共有に関するパラメータは、この共有のものが用いられる。
.RE
.PP
UNIX グループ
foo
のメンバにユーザ定義共有の作成を許可したい場合は、 共有の定義ファイルを格納するディレクトリを以下のように作成する:
.PP
root 権限で以下を実施:
.sp
.if n \{\
.RS 4
.\}
.nf
mkdir /usr/local/samba/lib/usershares
chgrp foo /usr/local/samba/lib/usershares
chmod 1770 /usr/local/samba/lib/usershares
.fi
.if n \{\
.RE
.\}
.PP
ついで、以下のパラメータ
.sp
.if n \{\
.RS 4
.\}
.nf
	\m[blue]\fBusershare path = /usr/local/samba/lib/usershares\fR\m[]
	\m[blue]\fBusershare max shares = 10\fR\m[] # (もしくは必要な共有数)
.fi
.if n \{\
.RE
.\}
.PP
を
smb\&.confの global セクションに追加。 これにより foo グループのメンバは、以下のコマンドでユーザ定義共有を作成することが可能となる。
.PP
net usershare add sharename path [comment] [acl] [guest_ok=[y|n]]
.RS 4
これにより、ユーザ定義共有を作成もしくは修正(上書き)する。
.RE
.PP
net usershare delete sharename
.RS 4
ユーザ定義共有を削除する。
.RE
.PP
net usershare list wildcard\-sharename
.RS 4
ユーザ定義共有を一覧する。
.RE
.PP
net usershare info wildcard\-sharename
.RS 4
ユーザ定義共有の情報を表示する。
.RE
.SH "パラメータ"
.PP
パラメータはセクションの属性を定義するものである。
.PP
幾つかのパラメータ (\fIsecurity\fR
など) は、 [global] セクションで指定する。また幾つかのパラメータ (\fIcreate mask\fR
など) は、すべてのセクションで 利用可能である。それ以外のパラメータは、通常のセクションでのみ 利用できる。以下の説明では、[homes] と [printers] セクションを "通常の" セクションとして扱う。(\fIG\fR) がついたパラメータは、 [global] セクションでのみ指定できる。(\fIS\fR) がついたパラメータは、個々のサービスを表すセクションで指定できる。 ただし、(\fIS\fR) がついたパラメータは、[global] セクション中で指定することも可能である。この場合、それらはすべての サービスに対するデフォルト値として機能する。
.PP
パラメータはアルファベット順に説明されている。 最良の順序とはいえないが、少なくとも目的のパラメータを見つけることは できるだろう。同義語がある場合は、主として用いるべき表記の部分で 説明が行なわれ、他はその表記への参照になっている。
.SH "変数による置換"
.PP
設定ファイルに記述可能な文字列の多くには、変数による置換を利用できる。 たとえば、\(lqpath = /tmp/%u\(rq
は、john というユーザ名でユーザが 接続すると、\(lqpath = /tmp/john\(rq
として解釈される。
.PP
これら置換の詳細については、各々のパラメータの説明にて 解説するが、どのパラメータに対しても適用される共通の変数置換もいくつか 存在する。それらを以下に記載する:
.PP
%U
.RS 4
セッションのユーザ名 (クライアントが接続時に 送信したものであるが、実際に接続したユーザ名と同じであるとは 限らない)。
.RE
.PP
%G
.RS 4
%U のプライマリグループ。
.RE
.PP
%h
.RS 4
Samba が動作しているマシンの インターネットホスト名。
.RE
.PP
%m
.RS 4
クライアントマシンの NetBIOS 名 (とても便利)。
.sp
Samba がポート 445 で待機している場合、クライアントがこの情報を送信しないため、この変数は利用できない。 Samba がドメインコントローラであるドメインで include パラメータにおいてこの変数を用いている場合などは、 [global] セクションで
\fIsmb ports = 139\fR
の設定を行なうこと。 これにより Samba はポート 445 で待機しなくなり、Samba 2\&.X で実現していた include 機能が利用できる。
.RE
.PP
%L
.RS 4
サーバの NetBIOS 名。これを用いることで、 クライアントから呼ばれた名前に応じて設定を変更することが 可能となる。これによりサーバは
\(lq二つの顔\(rq
を持つことができる。
.RE
.PP
%M
.RS 4
クライアントマシンのインターネットホスト名。
.RE
.PP
%R
.RS 4
プロトコルのネゴシエーションを経て選択された プロトコルレベル。これは CORE、COREPLUS、LANMAN1、LANMAN2、NT1 のいずれかの値をとる。
.RE
.PP
%d
.RS 4
サーバプロセスのプロセス ID。
.RE
.PP
%a
.RS 4
リモートマシンのアーキテクチャ。 現在認識できるのは Samba (\fBSamba\fR)、 Linux の CIFS ファイルシステム (\fBCIFSFS\fR)、 OS/2 (\fBOS2\fR)、 Windows for Workgroups (\fBWfWg\fR)、 Windows 9x/Me (\fBWin95\fR)、 Windows NT (\fBWinNT\fR)、 Windows 2000 (\fBWin2K\fR)、 Windows XP (\fBWinXP\fR)、 Windows XP 64\-bit(\fBWinXP64\fR), 2003R2 (\fBWin2K3\fR)を含むWindows Server 2003 (\fBWin2K3\fR)と, Windows Vista (\fBVista\fR) である。 それ以外のものは
\(lqUNKNOWN\(rq
となる。
.RE
.PP
%I
.RS 4
クライアントマシンの IP アドレス。
.RE
.PP
%i
.RS 4
クライアントが接続してきたサーバの IP アドレス。
.RE
.PP
%T
.RS 4
現在の日付と時間。
.RE
.PP
%D
.RS 4
現ユーザが所属するドメインかワークグループ名。
.RE
.PP
%w
.RS 4
Winbind のセパレータ
.RE
.PP
%$(\fIenvvar\fR)
.RS 4
環境変数\fIenvvar\fRの値。
.RE
.PP
以下の置換マクロは (すでに接続が確立されている場合に) いくつかの 設定オプションに対して有効なものである:
.PP
%S
.RS 4
現在のサービス名 (存在する場合)。
.RE
.PP
%P
.RS 4
現在のサービスのトップディレクトリ (存在する場合)。
.RE
.PP
%u
.RS 4
現在のサービスのユーザ名 (存在する場合)。
.RE
.PP
%g
.RS 4
%u のプライマリグループ。
.RE
.PP
%H
.RS 4
%u で指定されたユーザのホームディレクトリ。
.RE
.PP
%N
.RS 4
NIS のホームディレクトリサーバの名前。 これは NIS の auto\&.map エントリから取得される。Samba が
\fI\-\-with\-automount\fR
オプションをつけて コンパイルされていない場合、このオプションは %L と同じになる。
.RE
.PP
%p
.RS 4
NIS auto\&.map エントリから取得された サーバの ホームディレクトリのパス。NIS auto\&.map エントリは
%N:%p
のように分割されている。
.RE
.PP
これらの置換操作とその他の
smb\&.conf
のパラメータを組み合わせると、非常に凝った動作を設定できる。
.SH "名前の短縮(NAME MANGLING)"
.PP
Samba は、DOS や Windows クライアントが 8\&.3 形式に準拠しない 名前のファイルを扱うことができるように
\(lq名前の短縮\(rq
機能を提供している。この機能により、8\&.3 形式のファイル名についても 文字の case (大文字、小文字) を調整可能である。
.PP
短縮時の動作を制御するパラメータが幾つか存在しており、 それらは個々に解説を行なわず、ここでまとめて説明を行なう。 デフォルト値は testparm コマンドの出力を参照のこと。
.PP
以下のオプションは、すべて共有毎に設定できる (もちろん全体に対しても設定できる)。
.PP
オプションは以下の通りである:
.PP
case sensitive = yes/no/auto
.RS 4
ファイル名の case を識別するかどうかを制御する。 識別を行なわない場合、Samba は指定された名前に合致する ファイル名の有無を検索することが必要になる。デフォルトは
\fIauto\fR
であり、ファイル名の case を識別するクライアント(現在のところ Linux CIFSVFS や Samba 3\&.0\&.5 以降の smbclient) に対しては、case を識別する(UNIX の case を識別する挙動に準拠する) ファイルシステム上の Samba サーバにアクセスしているものとして通知する。 Windows および DOS システムでは case を識別するファイル名はサポートされておらず、このパラメータを auto に設定した場合、no の設定で動作する。 デフォルトは
\fIauto\fR
である。
.RE
.PP
default case = upper/lower
.RS 4
新しく作成されるファイル(現在ファイルシステム上に存在していないファイル)のファイル名のデフォルトの case を制御する。 デフォルトは
\fIlower\fR
である。 重要:
\m[blue]\fBcase sensitive = yes\fR\m[]、
\m[blue]\fBpreserve case = No\fR\m[]、
\m[blue]\fBshort preserve case = No\fR\m[]
の場合、このオプションにより、新しく作られるファイル名だけではなく、クライアントから渡される
\fIすべての\fR
ファイル名の case が変更されることに注意。 非常に多くのファイルを格納するディレクトリの最適化作業の一貫として、この設定変更が必要となる。
.RE
.PP
preserve case = yes/no
.RS 4
新しく作成されるファイル(現在ファイルシステム上に存在していないファイル)のファイル名について、クライアントから 渡された case で作成するか、デフォルトの case で作成するかを制御する。 デフォルトは
\fIyes\fRである。
.RE
.PP
short preserve case = yes/no
.RS 4
すべて大文字で適切な長さの 8\&.3 形式に 準拠した新しく作成されるファイル(現在ファイルシステム上に存在していないファイル)のファイル名について、大文字で作成するか、
デフォルト
の case で作成するかを制御する。 このオプションにより、preserve case = yes
で長いファイル名が case を保持する設定の時であっても、 短いファイル名は小文字で作成するといったことが可能になる。 デフォルトは
\fIyes\fR
である。
.RE
.PP
Samba 3\&.0 のデフォルトは、Windows NT のサーバと同様に動作する。 すなわち、case を識別しないが case は保持する。 ただし、大量のファイルが存在するディレクトリにおいては、case 関連のパラメータを "case sensitive = yes"、"case preserve = no"、"short preserve case = no" に設定するとよいであろう。 これにより、"default case" パラメータが有効になり、クライアントから送信されるすべてのファイル名が変更される。 (訳注: 上記設定は、case sensitive = yes によりファイル名の検索を抑止することで、パフォーマンスを向上させようとする意図だと思われる)
.SH "ユーザ名とパスワード認証についての注意"
.PP
ユーザがサービスに接続するための方法は幾つかある。サーバは、 以下のステップを踏みサービスに対して接続を許可するかどうかを確認する。 すべてのステップが失敗した場合、接続要求は拒否される。 いずれかのステップで成功した場合、それ以降のステップは行なわれない。
.PP
サービスが
\(lqguest only = yes\(rq
となっており、 サーバが共有レベルのセキュリティ (\(lqsecurity = share\(rq) で構成されている場合、ステップ 1 から 5 は省かれる。
.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}
クライアントからユーザ名とパスワードが 提供されており、それが UNIX システムのパスワード機構によって 認証された場合、そのユーザ名を使った接続が行なわれる。この ステップは
\e\eserver\eservice%\fIusername\fR
形式でユーザ名が提供された場合にも行なわれることに注意。
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}
クライアントからシステムに登録されている ユーザ名が提供された場合、そのユーザ名に対する適切な パスワードが提供されれば、接続が許可される。
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 3.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  3." 4.2
.\}
クライアントの NetBIOS 名および以前に使われた ユーザ名について提供されたパスワードとの確認が行なわれ、 合致すれば、対応するユーザ名を使った接続が許可される。
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 4.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  4." 4.2
.\}
クライアントが既にユーザ名とパスワードを 提供してサーバに認証されており、その際の認証トークンが 提示された場合、そのユーザ名が使われる。
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 5.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  5." 4.2
.\}
user =
フィールドが
smb\&.conf
ファイルで 該当サービスに対して設定されており、クライアントから提供された パスワードが (UNIX システムのパスワード認証により)
user =
行に記述されたユーザ名のいずれかのものと 合致した場合、接続は、user =
行で設定された ユーザ名で行なわれる。user =
リスト中のユーザ名の 中に
@
ではじまるものがあった場合、それはその名前の グループに所属するユーザ名のリストに展開される。
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 6.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  6." 4.2
.\}
サービスがゲストサービスの場合、 提供されたパスワードがなんであっても、そのサービスの
guest account =
で指定されたユーザ名で接続が 行なわれる。
.RE
.SH "レジストリベースの設定方法"
.PP
Sambaのバージョン 3\&.2\&.0 から、レジストリ中にSambaの設定を 格納する機能が有効になった。Sambaの設定は、レジストリキー
\fIHKLM\eSoftware\eSamba\esmbconf\fR中に格納される。 レジストリベースの設定は2つのレベルがある。
.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}
レジストリに共有の定義を格納する。 これは、\fIsmb\&.conf\fR中のグローバル パラメータ\fIregistry shares\fR
を\(lqyes\(rqに設定することで利用可能になる。
.sp
レジストリ定義の共有はスタートアップ時にはロードされ ないが、\fIsmbd\fRによって、実行時に動的に ロードされる。\fIsmb\&.conf\fR中の共有定義 はレジストリ中での同じ名前の共有定義に優先する。
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}
グローバルな\fIsmb\&.conf\fR
オプションをレジストリに格納する。これは,以下の2つの異なった 方法で有効にできる:
.sp
1番めは、\fIsmb\&.conf\fR中の [global]セクション中の\m[blue]\fBconfig backend = registry\fR\m[]を設定することで、レジストリのみの 設定を有効にできる。これは,この時点まで読み込んだ設定ファイ ルの内容をすべてリセットし、レジストリからグローバルセク ションの内容を読む。これは、レジストリベースの設定方法を使う 時の推奨方法である。
.sp
2番目は\fIsmb\&.conf\fRの[global] セクション中の、特別に新しい意味を持つ、\m[blue]\fBinclude = registry\fR\m[]パラメータによって有効にできる 混成設定方法である。これは,テキストファイルをインクルード するのと同じような優先度で、レジストリからグローバルオプ ションを読む。これは,初期設定がレジストリにアクセスするのに 必要な場合に特に有益である。
.sp
グローバルレジストリオプションの有効化は、レジストリ ベースの共有が有効になることで自動的に行われる。そのため、 レジストリのみの場合、共有は要求時にのみロードされる。
.RE
.sp
.RE
.PP
レジストリベースの設定に伴うシステムの破壊を限定的にするために、 レジストリでの設定中では、\fIlock directory\fRと
\fIconfig backend\fRの使用は無効化 されることに注意。 特に、レジストリでの設定中に、\fIlock directory\fRを 変更してしまい、それがいったん有効化されてしまうと、 デーモンからはそれの設定自体が見えなくなる、壊れた設定を作成することになる。
.PP
レジストリベースの設定は、キー\fIHKLM\eSoftware\eSamba\esmbconf\fRを
\fIregedit\fRや\fInet (rpc) registry\fRを使ってアクセスすることもできる。 利便性のため、\fBnet\fR(8)ユーティリティ の\fIconf\fRサブコマンドが、レジストリ ベースの設定をローカルに読み書きするための特別なインタフェース として提供されている。すなわち、データベースファイルに直接 アクセスし、サーバを迂回できる。
.SH "各パラメータの説明"


abort shutdown script (G)
.\" abort shutdown script
.PP
.RS 4
このパラメータは、
\fBsmbd\fR(8)
が呼び出すことで、
\m[blue]\fBshutdown script\fR\m[]
によって実行されたシャットダウン処理を停止させるスクリプトのフルパス名である。
.sp
接続しているユーザが
\fBSeRemoteShutdownPrivilege\fR
権限を保持している場合、このコマンドはroot権限で呼び出される。
.sp
既定値:
\fI\fIabort shutdown script\fR\fR\fI = \fR\fI""\fR\fI \fR
.sp
例:
\fI\fIabort shutdown script\fR\fR\fI = \fR\fI/sbin/shutdown \-c\fR\fI \fR
.RE

access based share enum (S)
.\" access based share enum
.PP
.RS 4
あるサービスに対してこのパラメータが
\fByes\fR
であれば、 そのサービスで提供される共有は、 （net view \e\esambaserver などで）共有の一覧表示が行われる際に、 共有に対して読み取りもしくは書き込みアクセス許可のあるユーザ以外から参照されなくなる。 これは Access\-based Enumeration　（訳注：Windows Server 2003 SP1 以降に導入された、アクセス許可のないフォルダを非表示にする機能）と同等の機能である。 主な違いは、共有に対するアクセス許可のみが評価され、共有内のファイルのセキュリティ識別子は、一覧表示の際の参照可否の確認には使用されないことである。
.sp
既定値:
\fI\fIaccess based share enum\fR\fR\fI = \fR\fIno\fR\fI \fR
.RE

acl check permissions (S)
.\" acl check permissions
.PP
.RS 4
この真偽値パラメータは、
\fBsmbd\fR(8)
が Windows クライアントから「open for delete」というプロトコル要求を受けとった際の挙動を制御する。 Windows クライアントにファイル削除のパーミッションがない場合は、オープン時に失敗することが想定される挙動である。しかし、POSIX システムでは、実際にファイルやディレクトリを削除しようとした段階で、初めて削除のパーミッション確認が行なわれる。 Windows クライアントは「delete on close」ビットを外すことで、削除のリクエストを「取り止める」ことが可能である。 このため、Samba が「open for delete」リクエストが行なわれた時点で該当のファイルを削除してみるといった方策も、 一度削除されたファイルを復活させることはできないため難しい。 このパラメータが true (デフォルト) の場合、smbd は「open for delete」リクエストの際にファイルシステムのパーミッションを直接チェックし、 ファイルシステムのパーミッション上削除できないと考えられる場合、該当のリクエストを拒否するようになる。 これは完全な方法ではなく、Samba がパーミッションを適切に確認できない場合に、ユーザがファイルを削除できてしまう可能性があるが、 大半の場合は Windows と同様の挙動となるであろう。 通常 Samba は POSIX ACL の挙動を適切に確認できるはずである。
.sp
このパラメータを「false」に設定した場合、Samba は「open for delete」リクエストの際にパーミッションの確認を行なわずにオープンを許可する。 ユーザにファイルを削除するアクセス許可がない場合は、クローズする時までわからない。 Windows 上のツールにとって、クローズ時点でこれが判明しても遅過ぎるため、ユーザにエラーメッセージが表示されるだろう。 また、削除したように見えたファイルが Windows 側のエクスプローラで再表示すると「魔法のように」復活するといった現象も発生するであろう。 これは非常に高度なプロトコルに関するパラメータであり、通常変更する必要はないはずである。 このパラメータは Samba 3\&.0\&.21 で現在の形となったが、現在とは若干挙動が異なる古い版は Samba 3\&.0\&.20 で導入された。古い版の挙動について、ここでは言及していない。
.sp
既定値:
\fI\fIacl check permissions\fR\fR\fI = \fR\fITrue\fR\fI \fR
.RE

acl compatibility (G)
.\" acl compatibility
.PP
.RS 4
このパラメータはどの OS の ACL の挙動と互換性をとるかを指定する。 設定可能な値は、Windows NT 4\&.0 互換の
\fIwinnt\fR
か、 Windows 2000 以上と互換の
\fIwin2k\fR
もしくは
\fIauto\fR
である。
\fIauto\fR
に設定した場合、パラメータの値はクライアントのバージョンに合わせて変更される。 このパラメータを既定値から変更する必要はないだろう。
.sp
既定値:
\fI\fIacl compatibility\fR\fR\fI = \fR\fIAuto\fR\fI \fR
.sp
例:
\fI\fIacl compatibility\fR\fR\fI = \fR\fIwin2k\fR\fI \fR
.RE

acl group control (S)
.\" acl group control
.PP
.RS 4
POSIX ファイルシステムでは、ファイルまたはディレクトリの所有者とスーパーユーザのみがファイルのパーミッションや ACL を修正できる。 このパラメータを有効にすると、Samba はこの制約を無視して、 ファイルやディレクトリの
\fIプライマリグループ所有者\fR
が、 ファイルのパーミッションや ACL を修正することを可能とする。
.sp
Windows サーバでは、グループがファイルやディレクトリの所有者となることができるため、 そのグループに所属する誰もがパーミッションを修正することができる。 これにより、ディレクトリのグループ所有者が、ファイルシステムのある地点以下のセキュリティ管理を委任することが可能となり、 その配下に作成されるファイルやディレクトリについても、そのグループが所有者となる。
.sp
このパラメータにより、公開されたディレクトリ階層内で Samba が Windows と類似した制御の制御を行なうことを可能とする。 これは、UNIX グループのメンバ全員がグループ所有者となっているファイルやディレクトリのパーミッション制御を行なうことが可能となることを意味する。
.sp
このパラメータは、\m[blue]\fBinherit owner\fR\m[]
パラメータが有効で、 ディレクトリに UNIX の
\fIsetgid ビット\fR
が設定された共有で用いる のが最適であり、共有内に作成される新しいファイルやディレクトリに、 親ディレクトリのグループ所有者を継承させることが可能となる。
.sp
このパラメータは、Samba 3\&.0\&.23 において、廃止予定の(deprecated)パラメータとなった。 しかし、Samba 3\&.0\&.31以降で復活し、ユーザが、所有するプライマリグループ中にいるとき、 パーミッションの変更を制御するのみになった。もはや
\fIdos filemode\fRオプションとは異なる。
.sp
既定値:
\fI\fIacl group control\fR\fR\fI = \fR\fIno\fR\fI \fR
.RE

acl map full control (S)
.\" acl map full control
.PP
.RS 4
この真偽値パラメータは、
\fBsmbd\fR(8)
が POSIX の ACE エントリでは最大のアクセス権を許可した状態である「rwx(read/write/execute)」を Windows 側の ACL の「フルコントロール」に対応づけるかどうかを制御する。 このパラメータを true に設定した場合、POSIX ACE で「rwx」のエントリに対して、Windows 側の ACL としては「フルコントロール」が返却される。 このパラメータが false に設定された場合、POSIX ACE で「rwx」のエントリに対して、 Windows 側の ACL としては read/write/execute を表すビットを設定したエントリが返却される。
.sp
既定値:
\fI\fIacl map full control\fR\fR\fI = \fR\fITrue\fR\fI \fR
.RE

add group script (G)
.\" add group script
.PP
.RS 4
このパラメータは、新しいグループの作成が要求された際に、
\fBsmbd\fR(8)
によって
\fIROOT 権限で\fR
実行されるスクリプトのフルパス名である。
\fI%g\fR
はグループ名に展開される。 スクリプトは Windows NT のドメイン管理ツールを使用して設定を行なう際にのみ有効である。 このスクリプトでは、UNIX側のグループ名の制約に捕らわれず、任意の名前のグループを作成することができる。 ただし、その場合スクリプトは標準出力に作成されたグループの gid の数値を表示する必要がある。
.sp
既定値:
\fI\fIadd group script\fR\fR\fI = \fR\fI\fR\fI \fR
.sp
例:
\fI\fIadd group script\fR\fR\fI = \fR\fI/usr/sbin/groupadd %g\fR\fI \fR
.RE

add machine script (G)
.\" add machine script
.PP
.RS 4
このパラメータは、"$"を付けたマシン名が、SambaのドメインとUnix アカウントと一致しなかった場合に、
\fBsmbd\fR(8)がマシンを追加する時に実行されるスクリプトのフルパス名である。
.sp
このオプションは、\m[blue]\fBadd user script\fR\m[]ととてもよく 似ていて、さらに、アカウント名の置換として%uを使う。%mの置換を使ってはいけない。
.sp
既定値:
\fI\fIadd machine script\fR\fR\fI = \fR\fI\fR\fI \fR
.sp
例:
\fI\fIadd machine script\fR\fR\fI = \fR\fI/usr/sbin/adduser \-n \-g machines \-c Machine \-d /var/lib/nobody \-s /bin/false %u\fR\fI \fR
.RE

add port command (G)
.\" add port command
.PP
.RS 4
Samba 3\&.0\&.23 では、Windows の"Add Standard TCP/IP Port ウィザード"によるリモートからのプリンタポートの追加がサポートされた。 このオプションは、smbd がシステムに対する新しいポートの追加要求を受信した際に、 実行される外部のコマンドを定義する。 スクリプトは以下の 2 つのパラメータをとる。
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fIポートの名称\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fIdevice URI\fR
.sp
.RE
deviceURI は socket://<hostname>[:<portnumber>] もしくは lpd://<hostname>/<queuename> のように指定する。
.sp
既定値:
\fI\fIadd port command\fR\fR\fI = \fR\fI\fR\fI \fR
.sp
例:
\fI\fIadd port command\fR\fR\fI = \fR\fI/etc/samba/scripts/addport\&.sh\fR\fI \fR
.RE

add printer command (G)
.\" add printer command
.PP
.RS 4
Samba 2\&.2における Windows NT/2000 クライアントに対応した MS\-RPC ベースの印刷サポートの実装にともない、 共有の一覧に表示される"Printers\&.\&.\&. " フォルダ中の "プリンタの追加"ウィザード(Add Printer Wizard (APW))アイコンを利用することが可能になった。 APWにより、SambaやWindows NT/ 2000プリンタサーバに別のマシンからのプリンタ追加が可能となった。
.sp
Sambaホストの場合、これは、下位レイヤの印刷システムにプリンタを物理的に追加できる必要があるということである。
\fIadd printer command\fR
は、 印刷システムにプリンタを追加するとともに、
smb\&.conf
ファイルに対して、
\fBsmbd\fR(8)
によって共有が行なわれるサービスのエントリを適切に追加するのに必要な処理を行なうスクリプトを設定する。
.sp
\fIadd printer command\fR
は 以下のパラメータを(順番に)付加して自動的に実行される:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fIprinter name\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fIshare name\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fIport name\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fIdriver name\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fIlocation\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fIWindows 9x driver location\fR
.sp
.RE
すべてのパラメータは、一つの例外を除き、 Windows NT/2000 クライアントから送信される PRINTER_INFO_2 構造体から取得される。 "Windows 9x driver location"パラメータは、下位互換性を保つためにのみ提供される。 それ以外の構造体のフィールドは、APWの問い合わせに対する回答から生成される。
.sp

\fIadd printer command\fR
が実行されると、
smbd
は、
smb\&.conf
を再度読み込んで、 APWで設定された共有がすでに存在していないかを確認する。 共有名が不正な場合、smbd
は、 クライアントに対して ACCESS_DENIED エラーを返却する。
.sp
\fIaddprinter command\fRは Samba が新しいプリンタが接続するポートとして設定した 文字列からなる1行を返却する。 返却されない場合、Samba は印刷共有の再読み込みを行なわない。
.sp
既定値:
\fI\fIadd printer command\fR\fR\fI = \fR\fI\fR\fI \fR
.sp
例:
\fI\fIadd printer command\fR\fR\fI = \fR\fI/usr/bin/addprinter\fR\fI \fR
.RE

add share command (G)
.\" add share command
.PP
.RS 4
Samba 2\&.2\&.0 では、Windows NT 4\&.0 のサーバーマネージャーを利用して共有設定を を追加・削除する機能が追加された。
\fIadd share command\fR
は、
smb\&.confに新しいサービスの設定を追加 する外部のプログラム、もしくはスクリプトを設定するためのパラメータである。
.sp

\fIadd share command\fR
を実行するため、管理者は
smbd
にroot アカウント(uid = 0)で接続するか、アカウントにSeDiskOperatorPrivilege
が付与されている必要がある。
\fIadd share command\fRで指定された スクリプトはroot権限で実行される。
.sp
コマンド実行時に、smbdは自動的に以下の 5 つの引数を付加して\fIadd share command\fRを実行する。
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fIconfigFile\fR
\-
smb\&.confの場所
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fIshareName\fR
\- 新しい共有名
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fIpathName\fR
\- ディスク上に「存在している」ディレクトリへのパス名
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fIcomment\fR
\- 新しい共有に対するコメント文字列
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fImax connections\fR
共有への最大同時接続数。
.sp
.RE
このパラメータは、ファイル共有の追加にのみ使われる。印刷共有の追加については、
\m[blue]\fBaddprinter command\fR\m[]
を参照のこと。
.sp
既定値:
\fI\fIadd share command\fR\fR\fI = \fR\fI\fR\fI \fR
.sp
例:
\fI\fIadd share command\fR\fR\fI = \fR\fI/usr/local/bin/addshare\fR\fI \fR
.RE

add user script (G)
.\" add user script
.PP
.RS 4
このパラメータは、以下に記述する特別な条件下において、
\fBsmbd\fR(8)
によって
\fIROOT 権限で\fR
実行されるスクリプトのフルパス名である。
.sp
通常、Samba サーバでは、サーバ上のファイルにアクセスするすべてのユーザに対して対応する UNIX ユーザが存在している必要がある。しかし、Windows NT のアカウントデータベースをユーザデータベースのマスタとして使うサイトでは、 Samba サーバ上のユーザの作成や保守を Windows NT の PDC と同期して行なうのは骨の折れる作業である。このオプションにより、Samba サーバに対してユーザがアクセスした時点で smbd が UNIX のユーザを
\fI必要に応じて\fR
作成することが可能になる。
.sp
このオプションを使う場合、
\fBsmbd\fR(8)
は
\fI決して\fR
\m[blue]\fBsecurity = share\fR\m[]
で構成されていてはならず、
\m[blue]\fBadd user script\fR\m[]
には、 作成される UNIX のユーザ名を表す
\fI%u\fR
を引数にとり、 UNIX ユーザを作成するスクリプトのフルパス名が設定されている必要がある。
.sp
Windows のユーザが Samba サーバにアクセスしようとして、 ログイン(SMB プロトコルの session setup) を行なう時に、
\fBsmbd\fR(8)
は、送信されたユーザ名とパスワードを認証するために、
\m[blue]\fBpassword server\fR\m[]
と通信を行なう。 認証が成功すると、
smbd
は UNIX 上のパスワードデータベース中から対応する UNIX のユーザを検索して Windows のユーザに対応づけようとする。この検索が失敗し、
\m[blue]\fBadd user script\fR\m[]
が設定されていると、
smbd
は、
\fI%u\fR
引数を作成すべきユーザ名に展開した上で、 設定されたスクリプトを
\fIROOT 権限で\fR
呼び出す。
.sp
スクリプトがユーザの作成に成功すると、
smbd
は、その UNIX ユーザがすでに存在していたかのようにして処理を継続する。このようにして、存在する Windows NT のアカウントに対応する UNIX のユーザが動的に作成される。
.sp
(訳注: この他に、Samba のドメイン環境において add user script はリモートからの要求によりユーザを作成するという重要な役割がある。)
.sp

\m[blue]\fBsecurity\fR\m[],
\m[blue]\fBpassword server\fR\m[],
\m[blue]\fBdelete user script\fR\m[]
も参照のこと。
.sp
既定値:
\fI\fIadd user script\fR\fR\fI = \fR\fI\fR\fI \fR
.sp
例:
\fI\fIadd user script\fR\fR\fI = \fR\fI/usr/local/samba/bin/add_user %u\fR\fI \fR
.RE

add user to group script (G)
.\" add user to group script
.PP
.RS 4
このパラメータは、 Windows NT のドメイン管理ツールによってユーザにグループが追加された際に実行されるスクリプトのフルパス名である。 これは
\fBsmbd\fR(8)
によって
\fIROOT 権限で\fR
呼び出される。
\fI%g\fR
はグループ名に置換され、
\fI%u\fR
はユーザ名に置換される。
.sp

adduser
コマンドは、すべてのシステムにおいて、 以下の例で用いた構文をサポートしているわけではないことに注意。
.sp
既定値:
\fI\fIadd user to group script\fR\fR\fI = \fR\fI\fR\fI \fR
.sp
例:
\fI\fIadd user to group script\fR\fR\fI = \fR\fI/usr/sbin/adduser %u %g\fR\fI \fR
.RE

administrative share (S)
.\" administrative share
.PP
.RS 4
このパラメータが共有のために
\fByes\fR
になっている場合、その共有は管理用となる。管理用の共有は Windows NT ベースのすべてのオペレーティングシステムで作られるデフォルトの ネットワーク共有であり、C$, D$, ADMIN$ などと同様のものである。 これらの共有のタイプは STYPE_DISKTREE_HIDDEN となる。
.sp
このオプションに関する詳細は、後述の
\m[blue]\fBsecurity\fR\m[]
を参照してほしい。
.sp
既定値:
\fI\fIadministrative share\fR\fR\fI = \fR\fIno\fR\fI \fR
.RE

admin users (S)
.\" admin users
.PP
.RS 4
このパラメータは、共有上で管理者権限が与えられるユーザのリストである。 指定されたユーザは、すべてのファイル操作をスーパーユーザ (root) として実行できる。
.sp
このリストに登録されているユーザは、 ファイルのパーミッションに関係なくあらゆる操作を行うことができてしまうため、 このオプションは十分に注意して使用すべきである。
.sp
このパラメータは、 Samba 3\&.0 における
\m[blue]\fBsecurity = share\fR\m[]
環境では動作しない。 これは仕様である。
.sp
既定値:
\fI\fIadmin users\fR\fR\fI = \fR\fI\fR\fI \fR
.sp
例:
\fI\fIadmin users\fR\fR\fI = \fR\fIjason\fR\fI \fR
.RE

afs share (S)
.\" afs share
.PP
.RS 4
このパラメータは、共有に対して AFS 特有の機能を有効にするかどうかを指定する。 もし有効な場合、\fIpath\fR
パラメータでエクスポートされているディレクトリをローカルの AFS インポートとして扱う。 特殊な AFS の機能というのは、もし configure 時に \-\-with\-fake\-kaserver オプションを有効にした場合に、 AFS トークンを作成しようとする機能などが含まれる。
.sp
既定値:
\fI\fIafs share\fR\fR\fI = \fR\fIno\fR\fI \fR
.RE

afs username map (G)
.\" afs username map
.PP
.RS 4
ダミーの kaserver の AFS 機能を使用している場合、 作成するトークンのユーザ名を指定したい場合もあるだろう。 たとえば、AFS Protection Database に複数のドメインのユーザが混在している場合などが挙げられる。 一つの解決策は、winbind と同じように + をセパレータとして DOMAIN+User と指定することである。
.sp
マップされたユーザ名はログインするためのセル名を含んでいる必要がある。 そのため、このパラメータが指定されていない場合、トークンは使用されない。
.sp
(訳注: AFSに関する知識不足のため、訳の正確性については担保できない)
.sp
既定値:
\fI\fIafs username map\fR\fR\fI = \fR\fI\fR\fI \fR
.sp
例:
\fI\fIafs username map\fR\fR\fI = \fR\fI%u@afs\&.samba\&.org\fR\fI \fR
.RE

aio read size (S)
.\" aio read size
.PP
.RS 4
Samba が非同期 I/O サポート付きでビルドされていて、かつこの整数パラメータ が非ゼロ値にセットされている場合、ファイルリードする際に要求された I/O サイズがこの値より大きければ、Samba は非同期リードを行う。 注意：非同期リードが行われるのは、non\-chained と non\-chaining リードで、 かつライトキャッシュを使わない場合に限られる。
.sp
Samba 3\&.0 における非同期 I/O におけるサポートは、リードとライトを合わせて 10個までの、未解決の非同期リクエストに限られる。
.sp
Related command:
\m[blue]\fBwrite cache size\fR\m[]
.sp
Related command:
\m[blue]\fBaio write size\fR\m[]
.sp
既定値:
\fI\fIaio read size\fR\fR\fI = \fR\fI0\fR\fI \fR
.sp
例:
\fI\fIaio read size\fR\fR\fI = \fR\fI16384 # リクエストサイズが 16KB を超えるリードについて非同期 I/O を使用する。 \fR\fI \fR
.RE

aio write behind (S)
.\" aio write behind
.PP
.RS 4
もしも、Sambaが非同期I/Oをサポートするように構築された場合、 このパラメータで示されたファイルに対して、クライアントに対する 結果を返す前に、 Sambaは書き込み要求が完了するまで待たない。その代わり、実際の操作が 成功するか否かに関係なく、Sambaは書き込み要求が正常に終わったと、即座に 結果を返す。これはaioサポートがないクライアントのスピードを向上させるかも しれないが、データが亡失し、ファイルが壊れるという観点で、これはとても 危険である。
.sp
文法は、\m[blue]\fBveto files\fR\m[]と同一である。
.sp
既定値:
\fI\fIaio write behind\fR\fR\fI = \fR\fI\fR\fI \fR
.sp
例:
\fI\fIaio write behind\fR\fR\fI = \fR\fI/*\&.tmp/\fR\fI \fR
.RE

aio write size (S)
.\" aio write size
.PP
.RS 4
Samba が非同期 I/O サポート付きでビルドされており、かつこの整数パラメータ が非ゼロ値にセットされている場合、ファイルをライトする際に要求された I/O サイズがこの値より大きければ、Samba は非同期ライトを行う。 注意：非同期ライトが行われるのは、non\-chained と non\-chaining ライトで、 かつライトキャッシュを使わない場合に限られる。
.sp
Samba 3\&.0 における非同期 I/O におけるサポートは、リードとライトを合わせて 10個までの、未解決の非同期リクエストに限られる。
.sp
Related command:
\m[blue]\fBwrite cache size\fR\m[]
.sp
Related command:
\m[blue]\fBaio read size\fR\m[]
.sp
既定値:
\fI\fIaio write size\fR\fR\fI = \fR\fI0\fR\fI \fR
.sp
例:
\fI\fIaio write size\fR\fR\fI = \fR\fI16384 # リクエストサイズが 16KB を超えるライトについて非同期 I/O を使用する。 \fR\fI \fR
.RE

algorithmic rid base (G)
.\" algorithmic rid base
.PP
.RS 4
このパラメータにより、 Samba が UID や GID を NT セキュリティ識別子(訳注:SID)の構築に必要な RID に機械的に対応づける際の RID の値が設定される。
.sp
Windows NT/2000 から移行を行なうサイトでは、存在しているユーザやグループの RID がシステムのユーザと競合してしまうことを防ぐため、この値を大きい値にすることが有用な場合もあるだろう。
.sp
サーバ上の ACL が正しく機能する上では、すべての UID および GID が SID に変換できることが必須である。 このため、機械的な対応づけを無効にせずに、一定の範囲を対象領域から除外することが、 問題を避ける上で必要である。 RID の競合に対応したパスワード機構において、ユーザおよびグループには、 「小さな」 RID が割り当てられる。
.sp
既定値:
\fI\fIalgorithmic rid base\fR\fR\fI = \fR\fI1000\fR\fI \fR
.sp
例:
\fI\fIalgorithmic rid base\fR\fR\fI = \fR\fI100000\fR\fI \fR
.RE

allocation roundup size (S)
.\" allocation roundup size
.PP
.RS 4
このパラメータにより、管理者が Windows クライアントから見たアロケーションサイズを切り上げることが可能となる。 デフォルトのサイズである 1MB にすることで、通常 Windows クライアントのパフォーマンスは向上する。 ただし、Visual Studio のように、 アロケーションサイズを切り上げることで問題が発生するアプリケーションもある。 Visual Studio のコンパイラーが内部エラーでクラッシュしてしまうような場合は、 該当の共有でこのパラメータを 0 に設定すること。
.sp
このパラメータには、切り上げるサイズをバイト単位の整数値で指定する。
.sp
既定値:
\fI\fIallocation roundup size\fR\fR\fI = \fR\fI1048576\fR\fI \fR
.sp
例:
\fI\fIallocation roundup size\fR\fR\fI = \fR\fI0 # (to disable roundups)\fR\fI \fR
.RE

allow trusted domains (G)
.\" allow trusted domains
.PP
.RS 4
このパラメータは、\m[blue]\fBsecurity\fR\m[]
パラメータが
\fBserver\fR、
\fBdomain\fR
もしくは
\fBads\fR
に設定されている時のみ有効である。 no に設定されている場合、 smbd が動作しているドメインもしくはワークグループ外からのリソースへの接続要求は、失敗する。 これは、たとえそのドメインが認証を行なうサーバによって信頼されている場合であっても同様である。
.sp
このオプションは、 Samba サーバが所属するドメインのユーザのみにリソースを提供させたい場合に便利である。 一例として DOMA と DOMB という 2 つのドメインがあって、 DOMA は Samba サーバを含み、DOMB を信頼している場合を想定する。 通常の条件では、DOMB中にアカウントを持つユーザは、 Samba サーバに同じ名前の UNIX アカウントがあれば、 DOMA にアカウントがなくてもリソースにアクセスできるため、 セキュリティ境界の区分けが困難である。
.sp
既定値:
\fI\fIallow trusted domains\fR\fR\fI = \fR\fIyes\fR\fI \fR
.RE

announce as (G)
.\" announce as
.PP
.RS 4
このパラメータは、
\fBnmbd\fR(8)
が、 自身を「ネットワークコンピュータ」中のブラウズリストにアナウンスする際のサーバの種類を指定する。 デフォルトでは Windows NT に設定されている。有効な値は: 「NT Server」(これは「NT」と表記することもできる)、 「NT Workstation」、「Win95」、「WfW」であり、各々 Windows NT Server、 Windows NT Workstation、Windows 95、Windows for Workgroups を意味する。 変更を行なうと、Samba サーバがブラウザサーバ(訳注: ポテンシャルブラウザの意?)に正しく参加できなくなるかも知れないため、 Samba サーバを NT サーバとして表示させたくない特別な理由がない限り、 このパラメータを変更しないこと。
.sp
既定値:
\fI\fIannounce as\fR\fR\fI = \fR\fINT Server\fR\fI \fR
.sp
例:
\fI\fIannounce as\fR\fR\fI = \fR\fIWin95\fR\fI \fR
.RE

announce version (G)
.\" announce version
.PP
.RS 4
このパラメータは、 nmbd が自身をサーバとしてアナウンスする際に指定するメジャーおよびマイナーバージョン番号を指定する。 デフォルトは 4\&.9 である。 Samba サーバをより下位のサーバとして設定する特別な必要性がない限り、このパラメータは変更しないこと。
.sp
既定値:
\fI\fIannounce version\fR\fR\fI = \fR\fI4\&.9\fR\fI \fR
.sp
例:
\fI\fIannounce version\fR\fR\fI = \fR\fI2\&.0\fR\fI \fR
.RE

auth methods (G)
.\" auth methods
.PP
.RS 4
このパラメータにより、管理者は
smbd
がユーザ認証を行なう際に使用する認証機構を選択することが可能となる。 このパラメータのデフォルトは、\m[blue]\fBsecurity\fR\m[]
パラメータに基づいて適切な値が設定される。 このオプションは開発者向けであり、 特殊な状況でのみ使用するものと考えるべきである。 実際の運用では多くの場合 (必ずというわけではない)、デフォルト設定のままにしておくべきである。
.sp
ユーザが認証されるまで、 リスト中の各エントリによって順番にユーザ認証が行なわれる。 従って、実際に認証が成功となる認証機構は1つだけである。
.sp
設定可能な値としては、\fBguest\fR
(匿名アクセス)、
\fBsam\fR
(NetBIOS名あるいはドメイン名に基づくローカルのアカウントリストの検索)、
\fBwinbind\fR
(winbinddによるリモートユーザーの認証要求の中継)、
\fBntdomain\fR
(winbindd 導入以前のリモートドメインユーザーの認証方法。 現在は winbindd を使用する方が望ましいので使用すべきではない)、
\fBtrustdomain\fR
(信頼できるユーザーの、smbd からリモート DC への直接アクセスによる認証。 現在は winbindd を使用する方が望ましいので使用すべきではない) がある。
.sp
既定値:
\fI\fIauth methods\fR\fR\fI = \fR\fI\fR\fI \fR
.sp
例:
\fI\fIauth methods\fR\fR\fI = \fR\fIguest sam winbind\fR\fI \fR
.RE

available (S)
.\" available
.PP
.RS 4
このパラメータにより、サービスを「無効」とすることが可能である。
\fIavailable = no\fR
の場合、 サービスに対する接続は\fIすべて\fR失敗する。これらの失敗は記録される。
.sp
既定値:
\fI\fIavailable\fR\fR\fI = \fR\fIyes\fR\fI \fR
.RE

bind interfaces only (G)
.\" bind interfaces only
.PP
.RS 4
このグローバルパラメータにより、 Samba 管理者が SMB 要求を受け付けるインタフェースを制限できるようになる。 この影響は、ファイルサービス
\fBsmbd\fR(8)
とネームサービス
\fBnmbd\fR(8)
とで多少異なる。
.sp
このパラメータを指定すると、ネームサービス
nmbd
は、
\m[blue]\fBinterfaces\fR\m[]
パラメータで指定されたインタフェースのポート 137 と 138 にバインドする。
nmbd
は、ブロードキャストメッセージを受信するために、 「すべてのアドレス」となるインタフェース (0\&.0\&.0\&.0) のポート 137 と 138 にもバインドする。このオプションが設定されていない場合、
nmbd
は、これらすべてのソケットに対してネームサービスを提供する。
\m[blue]\fBbind interfaces only\fR\m[]
が設定されていると、
nmbd
はブロードキャストパケットの送信元アドレスを確認して、
\m[blue]\fBinterfaces\fR\m[]
パラメータで指定されたインタフェースのブロードキャストアドレスを経由しないパケットを破棄する。 他のソケットでユニキャストパケットを受信した場合、
nmbd
は、
\m[blue]\fBinterfaces\fR\m[]
パラメータで指定されたインタフェースを経由しないパケットを送出したマシンに対してはネームサービスを拒否する。 もっとも、IP ソースアドレスを偽造 (spoofing) することで、この単純なチェックは破られてしまう。 そのため、このパラメータを
nmbd
のセキュリティ機能と位置付けて本格的に利用すべきではない。
.sp
ファイルサービスの場合、このパラメータを指定すると、
\fBsmbd\fR(8)
が
\m[blue]\fBinterfaces\fR\m[]
パラメータで指定されたインタフェースにのみバインドするようになる。 これにより、
smbd
がサービスを提供するネットワークを指定したインタフェース経由のものに制限することが可能である。 PPP などの間欠的なネットワークインタフェースや、非ブロードキャストなネットワークインタフェースにサービスを提供している場合は、 これらの非永続的なインタフェースをうまく処理できないため、このパラメータを使わないこと。
.sp
\m[blue]\fBbind interfaces only\fR\m[]
が設定されているが、
\fI127\&.0\&.0\&.1\fR
のネットワークアドレスが
\m[blue]\fBinterfaces\fR\m[]
パラメータに指定されていない場合は、 以下に示すような理由のため、\fBsmbpasswd\fR(8)
や
\fBswat\fR(8)
などが期待したように動作しないことがある。
.sp
ユーザの SMB パスワードを変更するために、
smbpasswd
はデフォルトで
\fIlocalhost \- 127\&.0\&.0\&.1\fR
のアドレスに SMB クライアントとして接続を行ない、パスワード変更要求を送信する。
\m[blue]\fBbind interfaces only\fR\m[]
が設定されているにも関わらず、
\fI127\&.0\&.0\&.1\fR
のネットワークアドレスが
\m[blue]\fBinterfaces\fR\m[]
パラメータに含まれていなかった場合、
smbpasswd
のデフォルトの状態では接続に失敗してしまう。
smbpasswd
については、
\fBsmbpasswd\fR(8)
に
\fI\-r \fR\fI\fIremote machine\fR\fR
パラメータを指定して、
\fIremote machine\fR
にローカルホストのプライマリインタフェースのIPアドレスを設定することにより、 強制的にローカルホストのプライマリIPインタフェースを利用させることも可能である。
.sp

swat
のステータス(status)ページは、
smbd
と
nmbd
が実行されているかを確認するために、
\fI127\&.0\&.0\&.1\fR
から接続を行なおうとする。 そのため、\fI127\&.0\&.0\&.1\fRを追加していない場合、smbd
と
nmbd
は実際には動作している場合でも、 常に「not running」と表示される。更に、swat
から
smbd
と
nmbd
の開始/停止/再起動を行なうこともできなくなる。
.sp
既定値:
\fI\fIbind interfaces only\fR\fR\fI = \fR\fIno\fR\fI \fR
.RE

blocking locks (S)
.\" blocking locks
.PP
.RS 4
このパラメータは、クライアントからオープン中のファイルの一部範囲に対して、 バイト範囲のロック(byte range lock)が要求された際に、タイムアウトが発生した場合の
\fBsmbd\fR(8)
の動作を制御する。
.sp
このパラメータが設定されている場合にロック範囲の要求が即座に処理できない場合、 Samba は内部的にロック要求をキューイングして、タイムアウトが来るまで定期的にロックを取得する動作を行なう。
.sp
このパラメータが
\fBno\fR
の場合、 Samba は以前のバージョンの Samba (訳注: Samba 1\&.9\&.x 以前)と同様に振舞い、 ロック範囲が取得できない場合にただちにロック要求を失敗させる。
.sp
既定値:
\fI\fIblocking locks\fR\fR\fI = \fR\fIyes\fR\fI \fR
.RE

block size (S)
.\" block size
.PP
.RS 4
このパラメータにより、ディスクの空き領域を報告する際の
\fBsmbd\fR(8)
の動作が制御される。 デフォルトでは、ディスクのブロックサイズを 1024 バイトとして報告が行なわれる。
.sp
このパラメータを変更した場合、クライアントからの書き込みに影響がでることが予想されるが、確認されていない。このパラメータは、熟練した管理者が(通常より大きい値に)変更を行なうことで、再コンパイルを行なうことなく、クライアントからの書き込みパフォーマンスへの影響をテストすることを可能とするために追加された。これは実験的なオプションのため、将来のリリースでは削除されるかも知れない。
.sp
このオプションを変更しても、報告されるディスクの空き容量自体は変わらない。クライアントに報告されるディスクのブロックサイズが変更されるだけである。
.sp
既定値:
\fI\fIblock size\fR\fR\fI = \fR\fI1024\fR\fI \fR
.sp
例:
\fI\fIblock size\fR\fR\fI = \fR\fI4096\fR\fI \fR
.RE

browsable
.\" browsable
.PP
.RS 4
このパラメータは右記のパラメータの別名である：browseable\&.
.RE

browseable (S)
.\" browseable
.PP
.RS 4
このパラメータは、net view コマンドやブラウズリスト中に現れる利用可能な共有の一覧にこの共有を表示させるかどうかを制御する。
.sp
既定値:
\fI\fIbrowseable\fR\fR\fI = \fR\fIyes\fR\fI \fR
.RE

browse list (G)
.\" browse list
.PP
.RS 4
このパラメータは、クライアントからの
NetServerEnum
コールに対して、
\fBsmbd\fR(8)
がブラウズリストを提供するかどうかを制御する。 通常
\fBtrue\fR
に設定されている。 これを変更する必要はまずないであろう。
.sp
既定値:
\fI\fIbrowse list\fR\fR\fI = \fR\fIyes\fR\fI \fR
.RE

cache directory (G)
.\" cache directory
.PP
.RS 4
通常、TDBファイルのほとんどは、
\fIlock directory\fR
中に格納される。Samba 3\&.4\&.0から、
\fIstate directory\fRと
\fIcache directory\fRオプションを使って、 恒常的なデータを持つTDBファイルと、一時的なデータを持つTDBファイルの間で 異なる設定が可能となった。
.sp
このオプションは、一時的なデータを保持するTDBファイルを億ディレクトリ を指定する。
.sp
既定値:
\fI\fIcache directory\fR\fR\fI = \fR\fI${prefix}/var/locks\fR\fI \fR
.sp
例:
\fI\fIcache directory\fR\fR\fI = \fR\fI/var/run/samba/locks/cache\fR\fI \fR
.RE

casesignames
.\" casesignames
.PP
.RS 4
このパラメータは右記のパラメータの別名である：case sensitive\&.
.RE

case sensitive (S)
.\" case sensitive
.PP
.RS 4
\m[blue]\fBname mangling\fR\m[]
セクションでの説明を参照のこと。
.sp
既定値:
\fI\fIcase sensitive\fR\fR\fI = \fR\fIno\fR\fI \fR
.RE

change notify (S)
.\" change notify
.PP
.RS 4
このパラメータは、Samba がクライアントからのファイル変更通知要求に対して 返信するべきかどうかを指定する。
.sp
このパラメータを変更する必要はないはずである
.sp
既定値:
\fI\fIchange notify\fR\fR\fI = \fR\fIyes\fR\fI \fR
.RE

change share command (G)
.\" change share command
.PP
.RS 4
Samba 2\&.2\&.0 では、Windows NT 4\&.0 のサーバーマネージャーを利用して共有設定を を追加・削除する機能が追加された。
\fIchange share command\fR
は、
smb\&.confの既存のサービスの設定を変更 する外部のプログラム、もしくはスクリプトを設定するためのパラメータである。
.sp

\fIchange share command\fR
を実行するため、管理者は
smbd
にroot アカウント(uid = 0)で接続するか、アカウントにSeDiskOperatorPrivilege
が付与されている必要がある。
\fIadd share command\fRで指定された スクリプトはroot権限で実行される。
.sp
コマンド実行時に、smbdは自動的に以下の 5 つの引数を付加して\fIchange share command\fRを実行する。
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fIconfigFile\fR
\-
smb\&.confの場所
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fIshareName\fR
\- 新しい共有名
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fIpathName\fR
\- ディスク上に「存在している」ディレクトリへのパス名
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fIcomment\fR
\- 新しい共有に対するコメント文字列
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fImax connections\fR
共有への最大同時接続数。
.sp
.RE
このパラメータは、ファイル共有設定の変更にのみ使われる。印刷共有の設定を 変更にするには、共有されているホストのプリンタフォルダを使用する。
.sp
既定値:
\fI\fIchange share command\fR\fR\fI = \fR\fI\fR\fI \fR
.sp
例:
\fI\fIchange share command\fR\fR\fI = \fR\fI/usr/local/bin/changeshare\fR\fI \fR
.RE

check password script (G)
.\" check password script
.PP
.RS 4
パスワードの複雑性を検証するためのプログラム名を指定する。 パスワードはプログラムの標準入力に送られる。
.sp
プログラムは、パスワードが良好であった場合に 0 を、それ以外の場合は他の値を返却しなければならない。 パスワードが脆弱であると判断された(プログラムが 0 を返却しなかった)場合、 ユーザには、パスワード変更の失敗が通知される。
.sp
example ディレクトリに、crackcheck
という サンプルのプログラムがある。 これは cracklib を用いてパスワードのチェックを行なっている。
.sp
既定値:
\fI\fIcheck password script\fR\fR\fI = \fR\fIDisabled\fR\fI \fR
.sp
例:
\fI\fIcheck password script\fR\fR\fI = \fR\fI/usr/local/sbin/crackcheck\fR\fI \fR
.RE

client lanman auth (G)
.\" client lanman auth
.PP
.RS 4
このパラメータは、\fBsmbclient\fR(8)
などの Samba のクライアントツールが 脆弱な LANMAN パスワードハッシュを使用した認証を行なうか否かを制御する。 無効にした場合、 Samba クライアントからは、NT パスワードハッシュを利用するクライアント (Windows NT/2000クライアント、Samba など。しかし Windows 95/98 は含まない) に対してのみ接続できる。
.sp
LANMAN 暗号化レスポンスは簡単に解読することが可能である。 これは大文字と小文字を区別しないことや、使用しているアルゴリズムなどに起因する。 Windows 95/98 サーバが存在しない場合は、このオプションを無効にした方がよいだろう。
.sp
このオプションを無効にすると、client plaintext auth
オプションも同時に無効となる。
.sp
同様に、
client ntlmv2 auth
パラメータを有効にした場合、NTLMv2 ログインのみが可能となる。
.sp
既定値:
\fI\fIclient lanman auth\fR\fR\fI = \fR\fIno\fR\fI \fR
.RE

client ldap sasl wrapping (G)
.\" client ldap sasl wrapping
.PP
.RS 4

\m[blue]\fBclient ldap sasl wrapping\fR\m[]
は、ldapとの通信が 署名付きか、署名+暗号化(シールされている)かを定義する。設定可能な値は、
\fIplain\fR,
\fIsign\fR
と\fIseal\fRである。
.sp
値\fIsign\fRと\fIseal\fRは、 もしもSambaが最新のOpenLDAPバージョン(2\&.3\&.xかそれ以降)とともに コンパイルされた時に有効である。
.sp
このオプションは、(たとえば Windows 2000 SP3 またはそれ以降の)署名された LDAP接続を使うことを強制するドメインコントローラの場合に必要である。 LDAP署名と暗号化LDAP接続は、Windowsサーバ側のレジストリキー "HKLM\eSystem\eCurrentControlSet\eServices\e
NTDS\eParameters\eLDAPServerIntegrity" によって制御する事が出来る。
.sp
使用するKRB5ライブラリ(MITと古いバージョンのHeimdal)に依存するが、 メッセージ "integrity only" はサポートされないことが可能である。この場合、
\fIsign\fRは
\fIseal\fRのための単なる別名である。
.sp
既定値は\fIplain\fRで、これは、KRB5のクロックスキュー エラーに対して過敏ではない。これは、\fIsign\fRか
\fIseal\fRを使う場合においてはKDCとの時刻同期があること を暗黙的に示している。
.sp
既定値:
\fI\fIclient ldap sasl wrapping\fR\fR\fI = \fR\fIplain\fR\fI \fR
.RE

client ntlmv2 auth (G)
.\" client ntlmv2 auth
.PP
.RS 4
このパラメータにより、\fBsmbclient\fR(8)
がサーバへの接続時に NTLMv2 暗号化パスワードレスポンスを使用した認証を行なうかどうかが設定される。
.sp
有効にすると、NTLMv2 および LMv2 レスポンス(両方とも以前のバージョンよりはセキュアである) が送信される。 ただし、多くのサーバ(Windows NT 4\&.0 SP3以前、Windows 9x および Samba 2\&.2)は NTLMv2 と互換性がない。
.sp
同様に、有効にした場合 NTLMv1、
client lanman auth
および
client plaintext auth
認証は無効となる。また、共有レベルの認証も同時に無効となる。
.sp
無効にした場合、 NTLM レスポンス (および可能であれば LANMAN レスポンス) が、client lanman auth
の値に応じてクライアントから送信される。
.sp
サイトによっては (特に「ベストプラクティス」のセキュリティポリシーを適用しているサイト)、NTLMv2 のみを許可し、脆弱な LM および NTLM レスポンスは許可していない。
.sp
既定値:
\fI\fIclient ntlmv2 auth\fR\fR\fI = \fR\fIno\fR\fI \fR
.RE

client plaintext auth (G)
.\" client plaintext auth
.PP
.RS 4
このパラメータは、サーバが暗号化パスワードをサポートしていない場合にクライアントから平文パスワードを送出するかどうかを制御する。
.sp
既定値:
\fI\fIclient plaintext auth\fR\fR\fI = \fR\fIyes\fR\fI \fR
.RE

client schannel (G)
.\" client schannel
.PP
.RS 4
このパラメータはクライアントが netlogon セキュアチャネルの使用を有効にするか、もしくは要求するかを制御する。
\m[blue]\fBclient schannel = no\fR\m[]
はセキュアチャネルを有効にしない。
\m[blue]\fBclient schannel = auto\fR\m[]
はセキュアチャネルを有効にするが、強制はしない。
\m[blue]\fBclient schannel = yes\fR\m[]
はサーバが netlogon セキュアチャネルを理解できない場合、アクセスを許可しない。
.sp
既定値:
\fI\fIclient schannel\fR\fR\fI = \fR\fIauto\fR\fI \fR
.sp
例:
\fI\fIclient schannel\fR\fR\fI = \fR\fIyes\fR\fI \fR
.RE

client signing (G)
.\" client signing
.PP
.RS 4
このパラメータは、SMB署名を使うために、クライアントに対して有効にするか、もしくは強制するかを設定する。 設定可能な値は、\fIauto\fR、\fImandatory\fR、\fIdisabled\fR
である。
.sp
auto に設定した場合、SMB 署名が有効になるが、強制はしない。 mandatory に設定すると、SMB 署名が必須となる。disable に設定すると、SMB 署名は有効にならない。
.sp
既定値:
\fI\fIclient signing\fR\fR\fI = \fR\fIauto\fR\fI \fR
.RE

client use spnego (G)
.\" client use spnego
.PP
.RS 4
この値により、Samba クライアントが認証の際に Simple and Protected NEGOciation (RFC2478 で規定) をサポートしたサーバ (Windows XP 、 Windows 2000 、Samba 3\&.0 を含む) に対して SPNEGO の使用を試みるかどうかが制御される。 SPNEGO は Kerberos 認証の際に有効となる。
.sp
既定値:
\fI\fIclient use spnego\fR\fR\fI = \fR\fIyes\fR\fI \fR
.RE

cluster addresses (G)
.\" cluster addresses
.PP
.RS 4
このパラメータを使うと、nmbd が WINS サーバに登録する追加のアドレスを 付加することができる。これらのアドレス(群)は、すべてのノード上で 同時に存在しなければならないわけではないが、これらは WINS サーバに 登録されるため、クライアントはこれらのうちのどのノードにも接続できる。
.sp
既定値:
\fI\fIcluster addresses\fR\fR\fI = \fR\fI\fR\fI \fR
.sp
例:
\fI\fIcluster addresses\fR\fR\fI = \fR\fI10\&.0\&.0\&.1 10\&.0\&.0\&.2 10\&.0\&.0\&.3\fR\fI \fR
.RE

clustering (G)
.\" clustering
.PP
.RS 4
このパラメータは、Samba が ctdb に接続して tdb ファイルにアクセスし、 さらにメッセージ処理のバックエンドとして ctdb を使うべきかどうかを 指定する。
.sp
ctdb が動作している状態でクラスタ構成を取る場合にのみ、 このパラメータを
yes
にすること。
.sp
既定値:
\fI\fIclustering\fR\fR\fI = \fR\fIno\fR\fI \fR
.RE

comment (S)
.\" comment
.PP
.RS 4
これは、クライアントから「ネットワークコンピュータ」や
net view
コマンド経由でサーバ上で利用可能な共有を一覧する際に、共有名の横に表示される文字列である。
.sp
コンピュータ名の横に表示される文字列を設定したい場合は、\m[blue]\fBserver string\fR\m[]
パラメータを参照のこと。
.sp
既定値:
\fI\fIcomment\fR\fR\fI = \fR\fI # コメント文字列なし\fR\fI \fR
.sp
例:
\fI\fIcomment\fR\fR\fI = \fR\fIFred\'s Files\fR\fI \fR
.RE

config backend (G)
.\" config backend
.PP
.RS 4
設定内容を格納するためのバックエンドを切り替える。設定可能な値は
\fIfile\fR（デフォルト）および\fIregistry\fR
である。\fIsmb\&.conf\fR
を読み込んでいる途中で
\m[blue]\fBconfig backend = registry\fR\m[]
を検出すると、それまでに読み込まれた設定内容は破棄され、その代りに グローバルオプションがレジストリから読み込まれる。つまり、これは レジストリのみの設定にするための仕組みである。共有の定義は即時には 読み込まれないが、その代りに
\fIregistry shares\fR
を
\fIyes\fR
にセットしてくれる。
.sp
注意：このオプションは、レジストリ設定自身の中でセットすることもできる。
.sp
既定値:
\fI\fIconfig backend\fR\fR\fI = \fR\fIfile\fR\fI \fR
.sp
例:
\fI\fIconfig backend\fR\fR\fI = \fR\fIregistry\fR\fI \fR
.RE

config file (G)
.\" config file
.PP
.RS 4
このオプションを指定することで、デフォルトの設定ファイル (通常smb\&.conf)の代わりのファイルを利用して、 設定を上書きすることが可能になる。このオプション自身が config file 中に記述されるため、これには「鶏と卵」問題がある。
.sp
そのため、このパラメータによって設定ファイルが変更されると、 新しい設定ファイルの内容が先頭からロードされる。
.sp
このオプションには、通常の変数置換が適用されるので、 うまく使えばとても便利であろう。
.sp
指定された設定ファイルが存在しない場合は読み込まれない (これにより、特定クライアントに対して、 特別な設定ファイルを指定するということが可能となる)。
.sp
\fI既定値なし\fR
.sp
例:
\fI\fIconfig file\fR\fR\fI = \fR\fI/usr/local/samba/lib/smb\&.conf\&.%m\fR\fI \fR
.RE

copy (S)
.\" copy
.PP
.RS 4
このパラメータにより、サービスエントリの「複製」 が可能となる。指定されたサービスの設定が単純に現在のサービスへと複製される。 現在のセクションに設定されているパラメータは、 複製元のセクションの設定を上書きする。
.sp
この機能を使うと、「ひな型(template)」となるサービスを作成した上で、 同様の設定のサービスを単純に作成するということが可能となる。 複製元のサービスは、 設定ファイル内で複製先のサービスより前に記述する必要があることに注意。
.sp
既定値:
\fI\fIcopy\fR\fR\fI = \fR\fI\fR\fI \fR
.sp
例:
\fI\fIcopy\fR\fR\fI = \fR\fIotherservice\fR\fI \fR
.RE

create krb5 conf (G)
.\" create krb5 conf
.PP
.RS 4
このパラメータをnoにすると、winbindが 固有の krb5\&.confを作成することを防止する。krb5ライブラリがADのサイトを 認識せず、そのため、可能性のある任意のドメインコントローラから対象として 外すことがとても多いという理由で、winbindは通常これを行う。winbindは サイトを認識し、固有のkrb5\&.confファイルを作成することにより、 krb5ライブラリがローカルのDCを使うようにする。
.sp
winbindがこれを行うことを防止することは、winbindが知ることの出来ない、 システム上にある、システムのkrb5\&.conf中に特別なオプションを追加しなければ ならない場合に必要かもしれない。
.sp
既定値:
\fI\fIcreate krb5 conf\fR\fR\fI = \fR\fIyes\fR\fI \fR
.RE

create mode
.\" create mode
.PP
.RS 4
このパラメータは右記のパラメータの別名である：create mask\&.
.RE

create mask (S)
.\" create mask
.PP
.RS 4
ファイル作成時に付与されるパーミッションは、 DOS の属性を UNIX のパーミッションに変換することにより生成されるが、 最終的には、このパラメータとビット単位の AND 演算が行なわれる。 このパラメータは、ファイルの UNIX のパーミッションに対するビットマスクと 考えることができる。ここで\fI設定されない\fRビットは、 ファイル作成時のパーミッションから削除される。
.sp
このパラメータの既定値は、
「group」と「other」の書き込みおよび実行権を UNIX のパーミッションから取り除いた値である。
.sp
この処理に引続き、Samba はこのパラメータにより生成されたパーミッションを
\m[blue]\fBforce create mode\fR\m[]
パラメータの値とビット単位の OR 演算を行なう。 なおパラメータの値はデフォルトで、000 に設定されている。
.sp
このパラメータは、ディレクトリのパーミッション生成には関与しない。
\m[blue]\fBdirectory mask\fR\m[]
パラメータを参照のこと。
.sp
このパラメータは、Windows NT/2000 の ACL エディタにより設定されるアクセス許可には関与しない。 管理者が ACL に対するビットマスクも同様に設定したいと考えている場合は、
\m[blue]\fBsecurity mask\fR\m[]
の設定が必要である。
.sp
既定値:
\fI\fIcreate mask\fR\fR\fI = \fR\fI0744\fR\fI \fR
.sp
例:
\fI\fIcreate mask\fR\fR\fI = \fR\fI0775\fR\fI \fR
.RE

csc policy (S)
.\" csc policy
.PP
.RS 4
このパラメータは、\fIクライアントサイドのキャッシングポリシー\fRを規定し、 オフラインキャッシュ機能を持つクライアントが、 共有上のファイルをどのようにキャッシュするかを規定する。 有効な値は、manual, documents, programs, disable である。
.sp
これらの値は、Windows のサーバ側の設定に対応している。
.sp
例えば、移動プロファイルが格納されている共有では、
\m[blue]\fBcsc policy = disable\fR\m[]
とすることで、 オフラインキャッシュを無効にできる。
.sp
既定値:
\fI\fIcsc policy\fR\fR\fI = \fR\fImanual\fR\fI \fR
.sp
例:
\fI\fIcsc policy\fR\fR\fI = \fR\fIprograms\fR\fI \fR
.RE

ctdbd socket (G)
.\" ctdbd socket
.PP
.RS 4

clustering=yes
の指定を行う場合は、 ctdbd がどの unix ドメインソケットを監視するのかを、Samba に対して 教えてやる必要がある。ctdb 1\&.0 におけるデフォルトのパスは /tmp/ctdb\&.socket であるが、これを smb\&.conf で明示してやらなければならない。
.sp
既定値:
\fI\fIctdbd socket\fR\fR\fI = \fR\fI\fR\fI \fR
.sp
例:
\fI\fIctdbd socket\fR\fR\fI = \fR\fI/tmp/ctdb\&.socket\fR\fI \fR
.RE

ctdb timeout (G)
.\" ctdb timeout
.PP
.RS 4
このパラメータはSambaとctdb間での接続のタイムアウト時間を秒単位で指定する。 これはSambaをクラスタリングがサポート出来るようにコンパイルし、
\fIclustering=yes\fRを設定した場合にのみ有効である。
.sp
クラスタブロック内に何らかのものがある場合、ブロック状態に追加しようと するときに、ctdbをとても長い時間待つことがたまにある。うまく動作するクラスタ 環境においては、これは決して発生しないが、ちょっとした問題があるかもしれない とてもたくさんのコンポーネントがクラスタ中にはある。クラスタ間で何かを転送 するために、長いサービス時間がかかる、負荷の高いクラスタ上では有効かもしれない という理由で、この値の正しい落とし所を選択するのはとてもトリッキーである。 この値を小さくしすぎると、クラスタが提供するサービスをデグレードする事になり、 長くしすぎると、クラスタそれ自身を、何らかの重大な障害から、長い時間リカバリ できなくなるかもしれない。
.sp
もしも、このパラメータを設定する場合、これはsmb\&.conf中に存在する必要があるが、 レジストリに接続するのにctdbが必要であるという理由で、レジストリ設定中 (通常はクラスタ上)に配置するのは好ましくないことに注意。
.sp
\fIctdb timeout\fRをnに設定することは、クラスタのパニック による応答に、どのプロセスもn秒以上待たないということになる。既定値として強く 推奨する0に設定(既定値)すると、Sambaはそれを永久にブロックする。
.sp
既定値:
\fI\fIctdb timeout\fR\fR\fI = \fR\fI0\fR\fI \fR
.RE

cups connection timeout (G)
.\" cups connection timeout
.PP
.RS 4
このパラメータは\m[blue]\fBprinting\fR\m[]で\fBcups\fR
が指定されたときだけ有効になる。
.sp
これが有効な場合、smbdがCUPSサーバに接続時にタイムアウトするまでの時間を 指定する。もし、指定時間以上の秒数が経過しても接続が確立しない場合には 接続エラーとなる。
.sp
既定値:
\fI\fIcups connection timeout\fR\fR\fI = \fR\fI30\fR\fI \fR
.sp
例:
\fI\fIcups connection timeout\fR\fR\fI = \fR\fI60\fR\fI \fR
.RE

cups encrypt (G)
.\" cups encrypt
.PP
.RS 4
このパラメータは、もしも\m[blue]\fBprinting\fR\m[]が
\fBcups\fRで、もしもCUPSが1\&.0\&.xよりも新しいものを 使っている場合にのみ適用可能である。これは、SambaがCUPSサーバと通信する時に、 暗号化を使うべきか否かを定義する。取り得る値は
\fIauto\fR,
\fIyes\fR
と
\fIno\fRである。
.sp
autoに設定した場合、各CUPS接続のセットアップ時にTLSのハンドシェークを試みる。 もしもそれが失敗した場合、暗号化なし操作に切り替える。
.sp
既定値:
\fI\fIcups encrypt\fR\fR\fI = \fR\fI"no"\fR\fI \fR
.RE

cups options (S)
.\" cups options
.PP
.RS 4
このパラメータは
\m[blue]\fBprinting\fR\m[]
が
\fBcups\fR
に設定されている場合のみ有効である。 この値は、 CUPS ライブラリに直接渡されるオプションを記述した任意の形式の文字列である。
.sp
CUPS で有効な一般の印刷オプション ( CUPS の「Spftware Users\' Manual」に記載されているもの ) はすべて設定できる。 また、設定対象のキューで有効な ( 「lpoptions \-d printername \-l」で表示される ) 任意のプリンタ固有のオプションも設定できる。 複数のパラメータは、ABNF指定のPAPIテキストオプションに準じた、空白で 分離された名前/値ペアでなければならない。複数の値を持つ場合 ("name={a=\&.\&.\&. b=\&.\&.\&. c=\&.\&.\&.}")は、中括弧がそのままで格納される。
.sp
Windows クライアントが Samba を経由して印刷を行なう際に CUPS サーバの
error_log
ファイルに 「Unsupported format \'application/octet\-stream\'」といったメッセージが含まれている場合、 このパラメータを
\fBraw\fR
に設定するとよい。 現在では
/etc/cups/mime\&.{convs,types}
において、 システム全体で raw 印刷を有効にする必要はない。
.sp
既定値:
\fI\fIcups options\fR\fR\fI = \fR\fI""\fR\fI \fR
.sp
例:
\fI\fIcups options\fR\fR\fI = \fR\fI"raw,media=a4\fR\fI \fR
.RE

cups server (G)
.\" cups server
.PP
.RS 4
このパラメータは
\m[blue]\fBprinting\fR\m[]
が
\fBcups\fR
に設定されている場合のみ有効である。
.sp
このパラメータが設定されると、CUPS の
client\&.conf
で設定された ServerName オプションの値が置き換えられる。 これは、仮想 Samba サーバ毎に異なる CUPS デーモンに接続する際に必要である。
.sp
なお、サーバ名に引続きコロンの後ろにポート番号を記述することで、ポー ト番号を指定することも可能である。 ポートの指定が行なわれ名張った場合、IPP のデフォルトポート (631) が用いられる。
.sp
既定値:
\fI\fIcups server\fR\fR\fI = \fR\fI""\fR\fI \fR
.sp
例:
\fI\fIcups server\fR\fR\fI = \fR\fImycupsserver\fR\fI \fR
.sp
例:
\fI\fIcups server\fR\fR\fI = \fR\fImycupsserver:1631\fR\fI \fR
.RE

deadtime (G)
.\" deadtime
.PP
.RS 4
このパラメータの値(10進の整数)は、接続が利用されなくなったとみなされて切断が行なわれるまでの経過時間(分)を表す。 deadtime はオープンされているファイルが存在しない時のみ有効である。
.sp
このパラメータは、多数の利用されていない接続によって、サーバ上のリソースが枯渇するのを防ぐのに有効である。
.sp
多くのクライアントは、このパラメータをユーザに意識させないように、接続が切断されていた際に、自動で再接続を行なう機能を持っている。
.sp
ほとんどのシステムにおいて、このパラメータを利用して、数分でタイムアウトが発生するようにすることを推奨する。
.sp
deadtime が 0 の場合、タイムアウトによる自動的な切断は行なわれない。
.sp
既定値:
\fI\fIdeadtime\fR\fR\fI = \fR\fI0\fR\fI \fR
.sp
例:
\fI\fIdeadtime\fR\fR\fI = \fR\fI15\fR\fI \fR
.RE

debug class (G)
.\" debug class
.PP
.RS 4
このブール値パラメータが有効の場合、デバッグ用ヘッダの中にデバッグクラス (DBGC_CLASS) が表示される。
.sp
現在利用可能なデバッグクラスに関する詳細は、\m[blue]\fBlog level\fR\m[]
の章を参照してほしい。
.sp
既定値:
\fI\fIdebug class\fR\fR\fI = \fR\fIno\fR\fI \fR
.RE

debug hires timestamp (G)
.\" debug hires timestamp
.PP
.RS 4
ログメッセージに秒単位以上のタイムスタンプが必要な場合、 この真偽値のパラメータを有効にすることにより、 マイクロ秒単位のタイムスタンプがメッセージに付加される。
.sp
このパラメータを有効にする際は、
\m[blue]\fBdebug timestamp\fR\m[]
が有効になっている必要があることに注意。
.sp
既定値:
\fI\fIdebug hires timestamp\fR\fR\fI = \fR\fIyes\fR\fI \fR
.RE

debug pid (G)
.\" debug pid
.PP
.RS 4
fork されて生成された
\fBsmbd\fR(8)
プロセスが同一のログファイルを共用している場合、 どのプロセスがメッセージを出力しているかを識別することは非常に難しい。 この真偽値パラメータを有効にすることで、ログファイル中のタイムスタンプメッセージのヘッダにプロセスIDが付加されるようになる。
.sp
このパラメータを有効にする際は、
\m[blue]\fBdebug timestamp\fR\m[]
が有効になっている必要があることに注意。
.sp
既定値:
\fI\fIdebug pid\fR\fR\fI = \fR\fIno\fR\fI \fR
.RE

debug prefix timestamp (G)
.\" debug prefix timestamp
.PP
.RS 4
このオプションを有効にすると、デバッグメッセージにタイムスタンプメッセージ ヘッダが付くようになる。ただし
\m[blue]\fBdebug timestamp\fR\m[]
に含まれるファイル名や関数情報には付加されない。 タイムスタンプを表すためだけに、新たなデバッグ行が発生することはない。
.sp
注意：このパラメータは
\m[blue]\fBdebug timestamp\fR\m[]
を上書きする。
.sp
既定値:
\fI\fIdebug prefix timestamp\fR\fR\fI = \fR\fIno\fR\fI \fR
.RE

timestamp logs
.\" timestamp logs
.PP
.RS 4
このパラメータは右記のパラメータの別名である：debug timestamp\&.
.RE

debug timestamp (G)
.\" debug timestamp
.PP
.RS 4
Samba のデバッグログのメッセージには、 デフォルトでタイムスタンプが付加されるが、 高い、\m[blue]\fBdebug level\fR\m[]
を設定している場合、 このタイムスタンプが目障りに感じることもあるだろう。 この真偽値パラメータにより、タイムスタンプの付加を抑止することができる。
.sp
既定値:
\fI\fIdebug timestamp\fR\fR\fI = \fR\fIyes\fR\fI \fR
.RE

debug uid (G)
.\" debug uid
.PP
.RS 4
Samba は root 権限で動作する時もあれば、 接続したユーザの権限で動作する時もある。 このパラメータを有効にすると、現在の euid、egid、uid、gid をログファイル中のタイムスタンプメッセージに付加する。
.sp
このパラメータを有効にする際は、
\m[blue]\fBdebug timestamp\fR\m[]
が有効になっている必要があることに注意。
.sp
既定値:
\fI\fIdebug uid\fR\fR\fI = \fR\fIno\fR\fI \fR
.RE

dedicated keytab file (G)
.\" dedicated keytab file
.PP
.RS 4

\m[blue]\fBkerberos method\fR\m[]が "dedicated keytab" に設定されている場合に、kerberos の keytab ファイルへのパスを指定する。
.sp
既定値:
\fI\fIdedicated keytab file\fR\fR\fI = \fR\fI\fR\fI \fR
.sp
例:
\fI\fIdedicated keytab file\fR\fR\fI = \fR\fI/usr/local/etc/krb5\&.keytab\fR\fI \fR
.RE

default case (S)
.\" default case
.PP
.RS 4
\m[blue]\fBname mangling\fR\m[]
セクションを参照のこと。
\m[blue]\fBshort preserve case\fR\m[]
パラメータにも注意。
.sp
既定値:
\fI\fIdefault case\fR\fR\fI = \fR\fIlower\fR\fI \fR
.RE

default devmode (S)
.\" default devmode
.PP
.RS 4
このパラメータは、\m[blue]\fBprintable\fR\m[]
サービスにのみ適用される。 smbd が、Windows NT/2000/XP クライアントに対してプリンタドライバを提供する際に、 Samba サーバ上の各プリンタでは、用紙サイズ、用紙の方向、両面印刷指定、 settings といった情報が定義されたデバイスモード(device mode)という値を設定する必要がある。 デバイスモードの適切な値は、プリンタドライバ自身のみが生成することができる (この処理は、Win32 プラットフォームでのみ実行することができる)。 smbd はデバイスモードを生成するドライバのコードを実行できないため、 このフィールドの既定値としては、NULL が設定される。
.sp
Windows NT/2000/XP クライアントに対してプリンタドライバを提供する上での問題点の多くは、 デバイスモードの生成に関するものである。 ドライバによっては、デバイスモードとして NULL を設定すると、 クライアント側の Explorer\&.exe をクラッシュさせるものがある。 また、デバイスモードがドライバ自身によって生成されていないと（たとえば smbd がデフォルトのデバイスモードを生成するなど）、 クライアントのスプーラサービス(spoolsv\&.exe)を停止させてしまうものもある。
.sp
このパラメータは、熟慮の上、プリンタドライバのテストを行なった上で用いること。 デバイスモードを NULL のままにしておき、Windows クライアントに適切な値を設定される方が好ましい。 ただし、ドライバが常にこの処理を行なうとは限らないため、
default devmode = yes
の設定を行なうことで、smbd にデフォルトのデバイスモードを生成するような指示を行なうことができるようになっている。
.sp
Windows NT/2000 の印刷システムやデバイスモードに関する詳細な情報については、
MSDN documentation
を参照のこと。
.sp
既定値:
\fI\fIdefault devmode\fR\fR\fI = \fR\fIyes\fR\fI \fR
.RE

default
.\" default
.PP
.RS 4
このパラメータは右記のパラメータの別名である：default service\&.
.RE

default service (G)
.\" default service
.PP
.RS 4
このパラメータは、 要求されたサービスが存在しなかった場合に接続されるサービス名を指定する。 パラメータの値に、大括弧(\'[\' と \']\')は\fI不要である\fRことに注意(設定例を参照のこと)。
.sp
このパラメータに既定値はない。 このパラメータが設定されていない場合、 存在しない共有に対する接続は失敗する。
.sp
default service は
\m[blue]\fBguest ok\fR\m[]
と
\m[blue]\fBread\-only\fR\m[]
パラメータを有効にしたサービスにするのが一般的である。
.sp
外面的なサービス名はクライアントから要求されたサービス名に変換される。 これは、\fI%S\fR
のようなマクロをワイルドカードサービスに適用する際に、非常に有用である。
.sp
default service のサービス名に現れる「_」文字は、「/」にマッピングされる。 これにより、いろいろと面白いことができるだろう。
.sp
既定値:
\fI\fIdefault service\fR\fR\fI = \fR\fI\fR\fI \fR
.sp
例:
\fI\fIdefault service\fR\fR\fI = \fR\fIpub\fR\fI \fR
.RE

defer sharing violations (G)
.\" defer sharing violations
.PP
.RS 4
Windows ではファイルのオープン時に他のプロセスとの共有方法を指定することができる。 あるプロセスがファイルを開こうとした時に指定した共有方法が 別のプロセスによって指定された共有方法と共存できないようなものであった際に 共有違反が発生する。 このパラメータにより、smbd は Windows サーバのように動作するようになり、 「共有違反」のエラーメッセージを 1 秒待ってから返却するようになり、 クライアントはこの間に共有違反を起こしたファイルをクローズすることが可能となる。
.sp
UNIX のデフォルトでは、こうした挙動は行なわれない。
.sp
このパラメータは Samba の挙動をより Windows に近づけるためのものであり、 無効にする必然性はないであろう。
.sp
既定値:
\fI\fIdefer sharing violations\fR\fR\fI = \fR\fITrue\fR\fI \fR
.RE

delete group script (G)
.\" delete group script
.PP
.RS 4
このパラメータは、グループの削除が要求された際に、
\fBsmbd\fR(8)
によって
\fIROOT 権限で\fR
実行されるスクリプトのフルパス名である。
\fI%g\fR
はグループ名に置換される。 スクリプトは Windows NT のドメイン管理ツールを使用して設定を行なう際にのみ有効である。
.sp
既定値:
\fI\fIdelete group script\fR\fR\fI = \fR\fI\fR\fI \fR
.RE

deleteprinter command (G)
.\" deleteprinter command
.PP
.RS 4
Samba 2\&.2における Windows NT/2000 クライアントに対応した MS\-RPC ベースの印刷サポートの実装にともない、 DeletePrinter() RPC呼び出しを発行することにより、 実行中にプリンタを削除することが可能になった。
.sp
Samba ホスト上では、 実際の印刷システム上から物理的にプリンタが削除される。
\m[blue]\fBdeleteprinter command\fR\m[]
パラメータには、 プリンタを印刷システムとsmb\&.confから削除するために 必要な操作を実行するためのスクリプトを設定する。
.sp
\m[blue]\fBdeleteprinter command\fR\m[]
は
\m[blue]\fBprinter name\fR\m[]のみをパラメータに設定されて自動的に呼び出される。
.sp
\m[blue]\fBdeleteprinter command\fR\m[]
が実行されると、
smbd
は削除対象のプリンタを無効にするために、
smb\&.conf
を読み直す。 共有名が依然として有効な場合、smbd
はクライアントに ACCESS_DENIED エラーを返却する。
.sp
既定値:
\fI\fIdeleteprinter command\fR\fR\fI = \fR\fI\fR\fI \fR
.sp
例:
\fI\fIdeleteprinter command\fR\fR\fI = \fR\fI/usr/bin/removeprinter\fR\fI \fR
.RE

delete readonly (S)
.\" delete readonly
.PP
.RS 4
このパラメータにより、読み取り専用のファイルの削除が可能になる。 これは DOS の仕様ではないが、UNIX では可能な処理である。
.sp
このオプションは、rcs のようなアプリケーションを動作させるのに有用で、 UNIX ファイルの所有者に関する仕様がファイルのパーミッション変更を妨げたり、 DOS の仕様が読み取り専用ファイルの削除を妨げたりする問題を回避する。
.sp
既定値:
\fI\fIdelete readonly\fR\fR\fI = \fR\fIno\fR\fI \fR
.RE

delete share command (G)
.\" delete share command
.PP
.RS 4
Samba 2\&.2\&.0 では、Windows NT 4\&.0 のサーバマネージャーを利用して共有設定を を追加・削除する機能が追加された。
\fIdelete share command\fR
は、
smb\&.confに既存のサービスを削除 する外部のプログラム、もしくはスクリプトを設定するためのパラメータである。
.sp

\fIdelete share command\fR
を実行するため、管理者は
smbd
にroot アカウント(uid = 0)で接続するか、アカウントにSeDiskOperatorPrivilege
が付与されている必要がある。
\fIdelete share command\fRで指定された スクリプトはroot権限で実行される。
.sp
コマンド実行時に、smbdは自動的に以下の 2つの引数を付加して\fIdelete share command\fRを 実行する。
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fIconfigFile\fR
\-
smb\&.confの場所
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fIshareName\fR
\- 既存の共有名
.sp
.RE
このパラメータは、ファイル共有設定の削除にのみ使われる。印刷共有の設定を 削除するときは\m[blue]\fBdeleteprinter command\fR\m[]を参照のこと。
.sp
既定値:
\fI\fIdelete share command\fR\fR\fI = \fR\fI\fR\fI \fR
.sp
例:
\fI\fIdelete share command\fR\fR\fI = \fR\fI/usr/local/bin/delshare\fR\fI \fR
.RE

delete user from group script (G)
.\" delete user from group script
.PP
.RS 4
このパラメータは、 Windows NT のドメイン管理ツールによってユーザがグループから削除された際に実行されるスクリプトのフルパス名である。 これは
\fBsmbd\fR(8)
によって
\fIROOT 権限で\fR
呼び出される。
\fI%g\fR
はグループ名に置換され、
\fI%u\fR
はユーザ名に置換される。
.sp
既定値:
\fI\fIdelete user from group script\fR\fR\fI = \fR\fI\fR\fI \fR
.sp
例:
\fI\fIdelete user from group script\fR\fR\fI = \fR\fI/usr/sbin/deluser %u %g\fR\fI \fR
.RE

delete user script (G)
.\" delete user script
.PP
.RS 4
このパラメータは、リモート RPC (NT) ツールによってユーザの管理が行なわれた際に、
\fBsmbd\fR(8)
によって実行されるスクリプトのフルパス名である。
.sp
このスクリプトは、「ドメインユーザマネージャ」や
rpcclient
により、リモートのクライアントがサーバからユーザを削除した際に呼び出される。
.sp
このスクリプトは指定されたユーザ名の UNIX ユーザを削除するものでなければならない。
.sp
既定値:
\fI\fIdelete user script\fR\fR\fI = \fR\fI\fR\fI \fR
.sp
例:
\fI\fIdelete user script\fR\fR\fI = \fR\fI/usr/local/samba/bin/del_user %u\fR\fI \fR
.RE

delete veto files (S)
.\" delete veto files
.PP
.RS 4
このオプションは、アクセスが禁止(veto)されたディレクトリ (\m[blue]\fBveto files\fR\m[]
オプションを参照のこと)を含むディレクトリを削除しようとする際に影響する。 このオプションが
\fBno\fR
(デフォルト) の場合、 アクセスが禁止されたディレクトリ内にアクセスを禁止されていないファイルやディレクトリが含まれていても、 ディレクトリ内の削除は失敗する。これは通常期待されている動作であろう。
.sp
このオプションを
\fByes\fR
に設定すると、 Samba はアクセスが禁止されたディレクトリ内でも 再帰的にすべてのファイルやディレクトリを削除しようとする。 NetAtalk のようなファイルサーバを併用する際は、 通常 DOS/Windows ユーザからの参照するのを禁止しているディレクトリ内にメタファイル (たとえば
\&.AppleDoubleなど)を作成するため、このオプションが有用である。
.sp

\m[blue]\fBdelete veto files = yes\fR\m[]
を指定することで、 これらのディレクトリは、親ディレクトリが削除された際に、自動的に削除される (ただし、ユーザはディレクトリを削除するパーミッションを持っている必要がある)。
.sp
既定値:
\fI\fIdelete veto files\fR\fR\fI = \fR\fIno\fR\fI \fR
.RE

dfree cache time (S)
.\" dfree cache time
.PP
.RS 4
\fIdfree cache time\fR
パラメータは、 Samba のディスク空き容量の計算で問題が発生するシステムでのみ利用すること。 Ultrix では問題の発生することが知られているが、 他のオペレーティングシステムで発生するかも知れない。 この問題は、各々のディレクトリの一覧表示の終了時に 「終了 再試行 無視 (Abort Retry Ignore)」のエラーが発生する形で顕在化する。
.sp
このパラメータは Samba 3\&.0\&.21 で新設されたものである。 これは、smbd がディスク空き容量の結果をキャッシュする時間を秒単位で指定する。0 (既定値) の場合、キャッシュは行なわれない。 これにより、高負荷のサーバで
\m[blue]\fBdfree command\fR\m[]
のスクリプトが頻繁に呼ばれて負荷が増大することが避けられる。
.sp
このパラメータのデフォルト値は 0 であり、キャッシュは行なわれない。
.sp
\fI既定値なし\fR
.sp
例:
\fI\fIdfree cache time\fR\fR\fI = \fR\fIdfree cache time = 60\fR\fI \fR
.RE

dfree command (S)
.\" dfree command
.PP
.RS 4
\fIdfree command\fR
パラメータは、 Samba のディスク空き容量の計算で問題が発生するシステムでのみ利用すること。 Ultrix では問題の発生することが知られているが、 他のオペレーティングシステムで発生するかも知れない。 この問題は、各々のディレクトリの一覧表示の終了時に 「終了 再試行 無視 (Abort Retry Ignore)」のエラーが発生する形で顕在化する。
.sp
このパラメータでは、 総ディスク容量と空き容量を計算する内部ルーチンを置き換える外部スクリプトを指定する。 以下に、この機能を果たすスクリプトの仕様を示す。
.sp
Samba 3\&.0\&.21 において、このパラメータは共有単位に設定可能なパラメータとなり、 新たに追加された
\m[blue]\fBdfree cache time\fR\m[]
パラメータにより、 高負荷のシステムにおいて、このスクリプトの出力結果をキャッシュできるようになった。
.sp
外部スクリプトは、対象となるファイルシステム中のディレクトリを示すパラメータ 1 つを受け取る。 これは通常
\&./という文字列からなる。 スクリプトはアスキー文字で 2 つの整数を返さなければならない。 1 つめはブロック単位のディスク総容量で、 2 つめは利用できるブロック数でなければならない。 3 番目の戻り値として、オプションでブロックサイズをバイト単位で返却させることもできる。 デフォルトのブロックサイズは 1024 バイトである。
.sp
注意: スクリプトは、setuid や setgid しては
\fIならず\fR、 (root のみ書き込み可能で)所有者は root である必要がある。
.sp
dfree スクリプト(実行可能にする必要がある)を以下に示す:
.sp
.if n \{\
.RS 4
.\}
.nf
 
#!/bin/sh
df $1 | tail \-1 | awk \'{print $(NF\-4),$(NF\-2)}\'
.fi
.if n \{\
.RE
.\}
.sp
もしくは、以下のようなものも考えられる(Sys V ベースのシステムの場合):
.sp
.if n \{\
.RS 4
.\}
.nf
 
#!/bin/sh
/usr/bin/df \-k $1 | tail \-1 | awk \'{print $3" "$5}\'
.fi
.if n \{\
.RE
.\}
.sp
システムによっては、コマンド名をフルパスで記述する必要がある場合があるので注意。
.sp
デフォルトは内部ルーチンにより、ディスクの総容量と空き容量が計算される。
.sp
\fI既定値なし\fR
.sp
例:
\fI\fIdfree command\fR\fR\fI = \fR\fI/usr/local/samba/bin/dfree\fR\fI \fR
.RE

directory mode
.\" directory mode
.PP
.RS 4
このパラメータは右記のパラメータの別名である：directory mask\&.
.RE

directory mask (S)
.\" directory mask
.PP
.RS 4
このパラメータは、パーミッションを示す8進数の数値であり、 UNIX 側のディレクトリ作成時に DOS の属性から UNIX のパーミッションを生成する際に使われる。
.sp
ディレクトリ作成時に付与されるパーミッションは、 DOS の属性と UNIX のパーミッションとのマッピングにしたがって、 DOS の属性を UNIX のパーミッションに変換することにより生成されるが、 最終的には、このパラメータとビット単位の AND 演算が行なわれる。 このパラメータは、ディレクトリの UNIX のパーミッションに対するビットマスクと 考えることができる。ここで\fI設定されない\fRビットは、 ディレクトリ作成時のパーミッションから削除される。
.sp
このパラメータの既定値は、 「group」と「other」の書き込み権を UNIX のパーミッションから取り除き、ディレクトリの所有者のみが変更可能にしたものである。
.sp
この処理に引き続いて、Samba はこのパラメータで生成された UNIX のパーミッションと
\m[blue]\fBforce directory mode\fR\m[]
パラメータの値との OR 演算を行う。 このパラメータは既定では 000 に設定されている(つまり、追加されるパーミッションはない)。
.sp
このパラメータは、Windows NT/2000 の ACL エディタで設定される アクセス許可には適用されない。ACL に対しても強制的にマスクを適用したい場合は、
\m[blue]\fBdirectory security mask\fR\m[]
パラメータを設定することが必要である。
.sp
既定値:
\fI\fIdirectory mask\fR\fR\fI = \fR\fI0755\fR\fI \fR
.sp
例:
\fI\fIdirectory mask\fR\fR\fI = \fR\fI0775\fR\fI \fR
.RE

directory name cache size (S)
.\" directory name cache size
.PP
.RS 4
このパラメータは、ディレクトリネームキャッシュのサイズを指定する。 これは*BSDシステムではoffにする必要がある。
.sp
既定値:
\fI\fIdirectory name cache size\fR\fR\fI = \fR\fI100\fR\fI \fR
.RE

directory security mask (S)
.\" directory security mask
.PP
.RS 4
このパラメータは、 Windows NT クライアント上のセキュリティダイアログボックスを使って、 UNIX ディレクトリのパーミッションを操作する時に、 設定可能な UNIX 側のパーミッションを指定する。
.sp
このパラメータは、変更されるパーミッションビットに対して、 マスクとして適用され (AND 操作が適用され)るため、 このマスクにないビットは変更操作から保護される。 このパラメータを、AND ではなく OR 操作を実行するパラメータである
\m[blue]\fBforce directory security mode\fR\m[]
と混同しないように。 基本的に、マスク中で 0 と指定されたビットは、常時0であるビットと見なされる。
.sp
基本的に、このマスク中ですべてのビットを0に設定することは、ファイル上の、 このビットの以前のステータスにかかわらず、ファイルのパーミッション上の 対応するビットを0に設定する結果となる。
.sp
このパラメータが明示的に指定されなかった場合は、 0777 に設定される。これにより、ディレクトリに対する全ての user/group/world パーミッションが変更可能となる。
.sp
\fI注意\fR
: 他の方法を使って Samba サーバにアクセスすることが可能なユーザは、この制限を簡単に回避できてしまう。 そのため、このパラメータの主な用途はスタンドアロンで動作する"アプライアンス" システムになるだろう。通常のシステムの管理者のほとんどは、 このパラメータを規定値の
\fB0777\fR
のままにしておきたいと考えるだろう。
.sp
既定値:
\fI\fIdirectory security mask\fR\fR\fI = \fR\fI0777\fR\fI \fR
.sp
例:
\fI\fIdirectory security mask\fR\fR\fI = \fR\fI0700\fR\fI \fR
.RE

disable netbios (G)
.\" disable netbios
.PP
.RS 4
このパラメータを有効にすると、 Samba の NetBIOS サポート機能が無効になる。 Windows 2000 および Windows XP を除くすべてのバージョンの Windows では、NetBIOS のみを使用できる。
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBNote\fR
.ps -1
.br
NetBIOS サポートを無効にすると、 NetBIOS のみをサポートするクライアントからは Samba サーバにアクセスできなくなることに注意。
.sp .5v
.RE
既定値:
\fI\fIdisable netbios\fR\fR\fI = \fR\fIno\fR\fI \fR
.RE

disable spoolss (G)
.\" disable spoolss
.PP
.RS 4
このパラメータを有効にすることで、 Samba の SPOOLSS MS\-RPC サポートを無効にし、Samba 2\&.0\&.x と同様の動作をさせることが可能となる。 Windows NT/2000 クライアントは、Lanman 形式の印刷コマンドを利用することも可能である。 Windows 9x/Me は、このパラメータに影響されない。 なお、このパラメータを有効にすると、NT のプリンタプロパティを利用した、 Windows NTのプリンタ追加ウィザードによる Sambaマシンへのプリンタドライバのアップロード機能が無効になる。 また、Windows NT/2000 クライアントが、必要に応じて Samba マシンからプリンタドライバをダウンロードする機能も同時に無効になる。
\fIこのパラメータを有効にする際は、充分注意すること。\fR
.sp
既定値:
\fI\fIdisable spoolss\fR\fR\fI = \fR\fIno\fR\fI \fR
.RE

display charset (G)
.\" display charset
.PP
.RS 4
Samba がメッセージを標準出力や標準エラー出力に出力する際に 用いる文字コードセットを指定する。 既定値は "LOCALE"であり、これは、ロケールに従い、自動的に設定される ことを意味する。 この値は、通常、
\m[blue]\fBunix charset\fR\m[]
と同じに 設定すべきである。
.sp
既定値:
\fI\fIdisplay charset\fR\fR\fI = \fR\fI"LOCALE" or "ASCII" (システムに依存)\fR\fI \fR
.sp
例:
\fI\fIdisplay charset\fR\fR\fI = \fR\fIUTF8\fR\fI \fR
.RE

dmapi support (S)
.\" dmapi support
.PP
.RS 4
このパラメータにより、Samba がオフラインのファイルの判定に DMAPI を用いるかどうかが制御される。 これは、通常ファイルを自動的にテープに移動していくような階層型ストレージとの連携の際に用いられる。
.sp
Samba はファイルの状態を DMAPI アプリケーションが登録したイベントを確認することで推測することに注意。 この方法は、多くの階層型ストレージシステムで機能するが、一部機能しないシステムもあるかも知れない。この場合、 Samba はファイルがオフラインであるという誤った報告を行なうことになる。
.sp
このパラメータは、コンパイル時に DMAPI の実装サポートを確認できた場合にのみ有効となる。 また、実行時にシステムで DMAPI が使用可能であることが確認できた場合にのみ使用される。
.sp
既定値:
\fI\fIdmapi support\fR\fR\fI = \fR\fIno\fR\fI \fR
.RE

dns proxy (G)
.\" dns proxy
.PP
.RS 4
WINS サーバとして機能している
\fBnmbd\fR(8)
が WINS サーバとして機能している場合、ある NetBIOS 名が登録されていなかった時に、その NetBIOS 名を DNS 名として扱い、名前の問い合わせを行ったクライアントに代わってその名前を DNS サーバに対して問い合わせるように設定する。
.sp
NetBIOS 名の最大長は 15 文字であるため、 問い合わせる DNS 名(もしくはDNSの別名)も、最大15文字に制限される。
.sp
nmbd
が DNS への名前解決を行う際には、問い合わせにより他の処理が停止させないために、自分自身を複製したプロセスを生成する。
.sp
既定値:
\fI\fIdns proxy\fR\fR\fI = \fR\fIyes\fR\fI \fR
.RE

domain logons (G)
.\" domain logons
.PP
.RS 4
このパラメータが
\fByes\fR
に設定されると、 Samba サーバは、自身が所属する
\m[blue]\fBworkgroup\fR\m[]
に所属する Windows 95/98 に対するドメインログオン機能を提供するようになる。 さらに、Samba サーバは、 Windows NT 4\&.0 形式のドメインコントローラとしても機能するようになる。 この機能の設定に関する詳細な記述は、 Samba\-PDC\-HOWTO の「Domain Control」章を参照のこと。
.sp
既定値:
\fI\fIdomain logons\fR\fR\fI = \fR\fIno\fR\fI \fR
.RE

domain master (G)
.\" domain master
.PP
.RS 4
このオプションにより、
\fBsmbd\fR(8)
が WAN 環境におけるブラウズリストの統合を行なうことが可能になる。 このオプションを設定すると、nmbd
は、指定された
\m[blue]\fBworkgroup\fR\m[]
のドメインマスタブラウザであることを表す、ドメイン固有の特別な NetBIOS 名(訳注:NetBIOS 名で末尾が 0x1b のユニーク名を指す) を登録する。 各サブネット上にある、同じ名前の
\m[blue]\fBworkgroup\fR\m[]
に属するローカルマスタブラウザは、この
nmbdに対して、 ローカルに収集したブラウズリストを提供するとともに、
\fBsmbd\fR(8)
に対してネットワーク全体のブラウズリストの完全な複製の提供を要求するようになる。 ブラウザのクライアントは、ローカルマスタブラウザと通信することで、 個々のサブネットのブラウズリストではなく、 そのドメイン全体のブラウズリストを取得できるようになる。
.sp
Windows NT のプライマリドメインコントローラは、
\m[blue]\fBworkgroup\fR\m[]
のドメインマスタブラウザとして機能するために、
\m[blue]\fBworkgroup\fR\m[]
固有の特別な NetBIOS 名を登録することが前提とされていることに注意 (Windows NT PDC のこの動作を抑止することはできない)。 つまり、このパラメータが Yes に設定され、nmbd
が Windows NT PDC より前に、\m[blue]\fBworkgroup\fR\m[]
のための特別な NetBIOS 名を登録してしまうと、 サブネット越しのブラウズは正常に動作せず、失敗する。
.sp
\m[blue]\fBdomain logons = yes\fR\m[]
の場合、\m[blue]\fBdomain master\fR\m[]
パラメータはデフォルトで有効となる。
\m[blue]\fBdomain logons\fR\m[]
が有効でない場合(デフォルト)、
\m[blue]\fBdomain master\fR\m[]
パラメータもデフォルトでは有効にならない。
.sp

\m[blue]\fBdomain logons = Yes\fR\m[]
の場合、このパラメータもデフォルトで Yes となり、Samba は PDC として動作するようになる。
\m[blue]\fBdomain master = No\fR\m[]
の場合、Samba は BDC として動作するようになる。通常、このパラメータを「No」に設定する必要があるのは、BDC として機能させる場合のみである。
.sp
既定値:
\fI\fIdomain master\fR\fR\fI = \fR\fIauto\fR\fI \fR
.RE

dont descend (S)
.\" dont descend
.PP
.RS 4
システムに存在するディレクトリには、 クライアントに参照させたくないものや、 無限に深い(再帰的)なものが存在する(たとえば Linux での
/proc)。 このパラメータは常に空のように見せかけるサーバ側のディレクトリをコンマで区切って指定する。
.sp
Samba が要求する「dont descend」の書式は一定ではない。 たとえば
/proc
ではなく
\&./proc
でなければならないかもしれない。 実験してみるのが最良の方法である。 :\-)
.sp
既定値:
\fI\fIdont descend\fR\fR\fI = \fR\fI\fR\fI \fR
.sp
例:
\fI\fIdont descend\fR\fR\fI = \fR\fI/proc,/dev\fR\fI \fR
.RE

dos charset (G)
.\" dos charset
.PP
.RS 4
DOS SMB クライアントは、サーバ側でも自身と同じ文字コードセットを使用していると想定する。 このオプションにより、 Samba が DOS クライアントと通信する際に用いられる文字コードセットを指定する。
.sp
デフォルトは Samba にインストールされた文字コードセットによって異なる。 Samba は、文字コードセット 850 の使用を試みるが、使用できない場合は ASCII を使用する。
\fBtestparm\fR(1)
コマンドを実行することで、システム上の既定値を確認することが可能である。
.sp
\fI既定値なし\fR
.RE

dos filemode (S)
.\" dos filemode
.PP
.RS 4
Samba の既定の動作では、ファイルやディレクトリの所有者のみが アクセス権を変更できるという、UNIX的な仕様になっている。しかし、この仕様が DOS/Windows のユーザを混乱させてしまうことも多い。このパラメータを有効に することによって、(何らかの手段によって)ファイルに書き込み権のあるユーザは、 パーミッション(ACLを含む)の変更もできるようになる。ファイルの所有グループに 所属しているユーザは、グループに対して読み込み権限しか与えられていない場合は パーミッションの変更を行なうことができないことに注意。ファイルやディレクトリの 所有者を変更することも可能である。 ネイティブなWindowsデータをメタデータとして格納する、VFSモジュールacl_xattrか acl_tdbは、ロードされるどのような共有に対しても、WindowsのACLを正しく エミュレートするために、このオプションを自動的にオンにする事が要求される ことに注意。
.sp
既定値:
\fI\fIdos filemode\fR\fR\fI = \fR\fIno\fR\fI \fR
.RE

dos filetime resolution (S)
.\" dos filetime resolution
.PP
.RS 4
DOS や Windows の FAT ファイルシステム下では、 時刻の最小単位は 2 秒である。共有に対してこのパラメータを設定すると、
\fBsmbd\fR(8)
に対して 1 秒精度の要求が 行なわれた際に、 返却される時間をもっとも近い 2 秒の境界値に丸める。
.sp
このオプションはおもに、Samba の共有で Visual C++ を 使用するための互換性オプションとして利用する。 共有で oplock が有効であると、 Visual C++ はファイルが最後の読み込みから変更されていないかを検査するときに、 扱う日付の最小単位が異なる 2 つの時刻取得の呼び出し (call) を利用する。 そのうちのひとつの呼び出しは 1秒単位であり、もうひとつは 2 秒単位になっている。 2 秒単位で扱う呼び出しが奇数秒を切り捨てるため、 ファイルが奇数秒の日付であると 2 つの日付が一致せず、 Visual C++ はファイルが変更されたと報告し続けてしまう。 このオプションを\fByes\fRに設定することで 2 つの日付は一致し、Visual C++ も幸福になれる。
.sp
既定値:
\fI\fIdos filetime resolution\fR\fR\fI = \fR\fIno\fR\fI \fR
.RE

dos filetimes (S)
.\" dos filetimes
.PP
.RS 4
DOS や Windows では、ファイルに書き込み権のあるユーザが、 ファイルのタイムスタンプを変更することが可能である。POSIXの仕様では、 ファイルの所有者かrootのみがタイムスタンプを変更できる。Sambaの既定値は、DOSの 仕様をエミュレートし、smbdの実効ユーザが、 ファイルの所有者でなくても、タイムスタンプの変更を可能にする。 Microsoft Office 2000 以降で行なわれた変更に対応するため、Samba 3\&.0\&.14 以降では 既定値が「no」から「yes」に変更された。このパラメータが「yes」になっていない 場合、ファイルが複数のユーザ間で共用されていると、Microsoft Excel はファイルが 他のユーザによって変更されたという警告のダイアログボックスを表示してしまう。
.sp
既定値:
\fI\fIdos filetimes\fR\fR\fI = \fR\fIyes\fR\fI \fR
.RE

ea support (S)
.\" ea support
.PP
.RS 4
この真偽値パラメータにより、
\fBsmbd\fR(8)
は、クライアントが共有内に OS/2 形式の拡張属性を格納することを可能とする。 このパラメータを有効にするためには、下位のファイルシステムが (Linux の場合 XFS や EXT3 に対するパッチとして提供されているような) 拡張属性をサポートしていることが必要である。 Linux の場合、拡張属性を有効にするには、カーネルが拡張属性を有効にしてコンパイルされていることに加え、 ファイルシステムのマウントオプションとして user_xattr を指定してマウントする必要がある。
.sp
既定値:
\fI\fIea support\fR\fR\fI = \fR\fIno\fR\fI \fR
.RE

enable asu support (G)
.\" enable asu support
.PP
.RS 4
「Advanced Server for Unix (ASU)」というプロダクトを実行しているホストでは、 IPC コネクションのみをサポートするビルトイン [ADMIN$] 共有が作成されるなど、 ASU 特有の動作が幾つか存在する。長年、これは smbd の既定値の動作でもあった。 ところが、Print Migrator tool というマイクロソフトのアプリケーションでは、 リモートのサーバで [ADMIN$] というファイル共有がサポートされている必要がある。 このパラメータを無効にすることで、smb\&.conf に [ADMIN$] というファイル共有を作成することが可能になる。
.sp
既定値:
\fI\fIenable asu support\fR\fR\fI = \fR\fIno\fR\fI \fR
.RE

enable core files (G)
.\" enable core files
.PP
.RS 4
このパラメータは、コアダンプが内部出口(internal exits)に書かれるように 指定する。通常これは\fByes\fRに設定する。 決してこれを変更してはならない。
.sp
既定値:
\fI\fIenable core files\fR\fR\fI = \fR\fIyes\fR\fI \fR
.sp
例:
\fI\fIenable core files\fR\fR\fI = \fR\fIno\fR\fI \fR
.RE

enable privileges (G)
.\" enable privileges
.PP
.RS 4
このパラメータは、smbd が
net rpc rights
もしくは Windows 側のユーザ、グループ管理ツールにより、特定の SID に対して指定のユーザー権利を付与する機能を制御する。 このパラメータはデフォルトで有効となっているが、Domain Admins グループのメンバがユーザーやグループにユーザー権利を割り当てることで、 root 権限で実行される smbd の処理が該当ユーザとして接続した状態で実行されることを防止するために無効にすることも可能である。
.sp
ユーザー権利を使用することで、例えば smbd が動作するサーバの root 権限を与えずに、 Samba ドメインに参加する権利を付与することが可能である。
.sp
より詳細な説明については、Samba HOWTO 中の記載を参照のこと。
.sp
既定値:
\fI\fIenable privileges\fR\fR\fI = \fR\fIyes\fR\fI \fR
.RE

enable spoolss (G)
.\" enable spoolss
.PP
.RS 4
\m[blue]\fBdisable spoolss\fR\m[]の逆の意味を持つ別名。
.sp
既定値:
\fI\fIenable spoolss\fR\fR\fI = \fR\fIyes\fR\fI \fR
.RE

encrypt passwords (G)
.\" encrypt passwords
.PP
.RS 4
この真偽値パラメータにより、 クライアントとのネゴシエーションに暗号化パスワードを利用するかどうかが決定される。 Windows NT 4\&.0 SP3 以降 や Windows 98 以降では、 レジストリの変更をしない限り、暗号化パスワードがデフォルトである。(訳注: これ以前のバージョンでも暗号化パスワードがデフォルトである。ただし、暗号化パスワードの利用ができなかった場合に平文パスワードを送出する点が異なる。) Samba で暗号化パスワードを使う方法は Samba HOWTO collection 中の「User Database」の章を参照してほしい。
.sp
Microsoft の暗号化パスワードを想定して、 平文パスワードのサポートを無効にした Windows クライアントは、 暗号化パスワードが有効になっており、 アカウントのパスワードが適切に暗号化されている Samba サーバにのみ接続できる。 ユーザアカウントに対して暗号化パスワードを作成する方法については、 smbpasswd コマンドのマニュアルページを参照のこと。
.sp
Microsoft 社の Windows 製品では、すでに平文パスワードのサポートは行なわれていない(訳注: 設定としては残存している)ため、 平文パスワードの利用は推奨できない。 平文パスワードを使用した場合は、このパラメータを no にすること。
.sp
暗号化パスワードを正しく機能させるためには、
\fBsmbd\fR(8)
がローカルの
\fBsmbpasswd\fR(5)
ファイル (設定と保守の方法に関する情報は
\fBsmbpasswd\fR(8)
プログラムを参照)を参照するようにするか、
\m[blue]\fBsecurity = [server|domain|ads]\fR\m[]
パラメータを設定して、
smbd
が別のサーバで認証を行うようにする必要がある。
.sp
既定値:
\fI\fIencrypt passwords\fR\fR\fI = \fR\fIyes\fR\fI \fR
.RE

enhanced browsing (G)
.\" enhanced browsing
.PP
.RS 4
このオプションにより、 Samba に実装されている複数サブネット間でのブラウザのアナウンスメントに関する拡張が有効になる。 ただし、この拡張は、Microsoft の実装の標準とは異なる。
.sp
ブラウザのアナウンスメントに関する一つ目の拡張点は、 Samba のWINSサーバに登録されているすべてのドメインマスタブラウザを問い合わせる定期的なワイルドカードクエリと、 返答に含まれる各DMBと行なわれるブラウズリストの同期処理のサポートである。 二つ目の拡張点は、DMBとして識別されているマシンとの間で 定常的に行なわれるランダムなブラウズリストの同期処理のサポートである。 (訳注: これは 120151 などで記載されている、WINS クライアントとなっている Windows NT 3\&.5 以上の DMB が定期的に WINS サーバに接続し、WINSサーバが保有する「ドメイン名<1B>」のリストを自身のブラウズリストに追加していく処理のサポートだと思われる)
.sp
中身が空のワークグループがブラウズリストから消えないというトラブルが発生した場合は、 このオプションを無効にしたい場合もあるだろう。 ブラウザのプロトコルの仕様上、 この拡張により空のワークグループが永久に残ってしまうという悩ましい問題が起こることがある。
.sp
通常は、サブネット越えのブラウザのアナウンスメントの信頼性向上のため、 このオプションは、有効のままにしておくべきである。
.sp
既定値:
\fI\fIenhanced browsing\fR\fR\fI = \fR\fIyes\fR\fI \fR
.RE

enumports command (G)
.\" enumports command
.PP
.RS 4
ここでいう「ポート(port)」の概念は、 UNIXのものと大きく異なる。Windows NT/2000のプリントサーバにおいて、 ポートはポートモニタと関連付けられ、通常ローカルポート(LPT1:、COM1:、 FILE:)やリモートポート(LPD Port Monitorなど)といった名称をもつ。 Sambaのデフォルトでは、
\fB「Samba Printer Port」\fR
というポートのみが定義されている。 Windows NT/2000においては、すべてのプリンタに適切なポート名がある。 デフォルトの\fB「Samba Printer Port」 \fR以外のポート名をポートの一覧に表示させたい場合 (smbdはポート名を全く使用していない)、 標準出力に対してポート名のリストを1行に一つずつ生成するようなプログラムを
\fIenumports command\fRで定義することができる。 この一覧はレベル1および2のEnumPorts() RPCのレスポンス中で利用される。
.sp
既定値:
\fI\fIenumports command\fR\fR\fI = \fR\fI\fR\fI \fR
.sp
例:
\fI\fIenumports command\fR\fR\fI = \fR\fI/usr/bin/listports\fR\fI \fR
.RE

eventlog list (G)
.\" eventlog list
.PP
.RS 4
このパラメータは、 Samba がマイクロソフトの「イベントビューア」ユーティリティ経由での表示を可能とするログファイル名の一覧を定義する。 一覧に含まれるログに対しては、ディスク上の
$(lockdir)/eventlog
内に、 対応する TDB ファイルが割り当てられる。
.sp
管理者は、外部のプロセスを用いて
/var/log/messages
のような一般の UNIX ログファイルを解析し、 イベントログの TDB ファイルにエントリを書き込む必要がある。 イベントログのエントリを書き込む方法については、eventlogadm(8) ユーティリティを参照のこと。
.sp
既定値:
\fI\fIeventlog list\fR\fR\fI = \fR\fI\fR\fI \fR
.sp
例:
\fI\fIeventlog list\fR\fR\fI = \fR\fISecurity Application Syslog Apache\fR\fI \fR
.RE

fake directory create times (S)
.\" fake directory create times
.PP
.RS 4
NTFS や Windows VFAT ファイルシステムでは、 すべてのファイルとディレクトリの作成時刻を保持している。 これは UNIX が保持している ctime (状態変更時刻)とは異なるため、 Samba の既定動作では UNIX が保持している中で最も古い時刻を報告する。 共有でこのパラメータを
\fByes\fR
にした場合、Samba はディレクトリの作成時刻として、 常に 1980/1/1 の午前 0 時を報告する。
.sp
このオプションは、Samba 共有上で Visual C++ を使うときに互換性を保つためのオプションとして用いられることが多い。 Visual C++ は、各オブジェクトファイルに対する依存性チェック用途のオブジェクトディレクトリと、 そのディレクトリを作成するルールを持った makefile を生成する。 NMAKE が日付を比較する際にディレクトリをチェックするときには、ファイル作成時刻を使用する。 これにより、オブジェクトディレクトリが存在しない場合は作成され、作成されたディレクトリは、 ディレクトリ中に存在するオブジェクトファイルよりも古い時刻を保持することになる。
.sp
しかし、UNIX の時刻の扱いに関する仕様のため、 Samba が報告するディレクトリの作成時間はディレクトリにファイルが作成または削除されたときにも更新されてしまう。 その結果 NMAKE は、オブジェクトディレクトリで最後にビルドされたファイルを除く すべてのオブジェクトファイルがオブジェクトディレクトリより古いと判断し、それらを再構築してしまう。 このオプションを有効にすることで、 常にディレクトリは含まれるファイルよりも前の日付になり、 NMAKE によるビルドが意図したように行なわれることが保証される。
.sp
既定値:
\fI\fIfake directory create times\fR\fR\fI = \fR\fIno\fR\fI \fR
.RE

fake oplocks (S)
.\" fake oplocks
.PP
.RS 4
oplock は、SMB クライアントがファイル操作の結果をローカルにキャッシュするための許可をサーバから取得するための機能である。 サーバが oplock (opportunistic lock = 便宜的ロック) を許可すると、 クライアントは自分だけがそのファイルにアクセスしていると認識して、 積極的にファイルの内容をキャッシュする。oplock のタイプによっては、 クライアントがファイルのオープン/クローズの操作をキャッシュすることもありうる。 これにより、多大な性能向上が期待できる。
.sp

fake oplocks = yes
の設定を行なうと、\fBsmbd\fR(8)
は、 実際にそのファイルを利用しているクライアント数に関わらず、 常に oplock を許可する。
.sp
一般的には、このパラメータを利用するよりも、 実際の
\m[blue]\fBoplocks\fR\m[]
を利用する方がよい。
.sp
CDROM 等の物理的に読みとり専用のメディアの場合など、 読みとり専用か、同時に 1 台のクライアントからだけしか アクセスされないとわかっている共有でこのオプションを有効にすると、 多くの操作で大きな性能改善が見られるだろう。複数のクライアントから 同時にファイルの読み書きアクセスする可能性がある共有でこのオプションを有効にすると、 ファイルの内容が破壊される場合が起こりうる。 このオプションは慎重に使用して欲しい!
.sp
既定値:
\fI\fIfake oplocks\fR\fR\fI = \fR\fIno\fR\fI \fR
.RE

follow symlinks (S)
.\" follow symlinks
.PP
.RS 4
このパラメータにより、Samba の管理者は、
\fBsmbd\fR(8)
がシンボリックリンクを追跡する処理を共有単位で禁止することが可能になる。 このパラメータを
\fBno\fR
に設定した場合、 シンボリックリンクのファイルやディレクトリの追跡する処理が抑制される(ユーザにはエラーが返却される)。 このオプションは、ユーザが自分のホーム・ディレクトリに
/etc/passwd
へのシンボリックリンクを追加するのを防止したりする効果がある。 ただし、わずかながらファイル名の検索が遅くなるだろう。
.sp
このオプションはデフォルトで有効になっている (つまり、smbd
はシンボリックリンクを追跡する)。
.sp
既定値:
\fI\fIfollow symlinks\fR\fR\fI = \fR\fIyes\fR\fI \fR
.RE

force create mode (S)
.\" force create mode
.PP
.RS 4
このパラメータは、Samba によって作成されたファイルのパーミッションに
\fI必ず\fR設定される UNIX のパーミッションビットを指定する。 これは、ファイルの作成時時に、ファイルのパーミッションビットに対して、 このパラメータの値でビット単位のOR 演算を行なうことで実現される。 このパラメータの既定値は(8進で)000である。 このパラメータの値がビット単位の OR 演算に用いられるのは、
\fIcreate mask\fR
パラメータの適用後である。
.sp
下記の例は、作成されるすべてのファイルに対し、 グループ(group)とその他のユーザ(others)の読み込みと実行ビットと、 所有者(user)の読み込み/書き込み/実行ビットが必ず付与されるようにする。
.sp
既定値:
\fI\fIforce create mode\fR\fR\fI = \fR\fI000\fR\fI \fR
.sp
例:
\fI\fIforce create mode\fR\fR\fI = \fR\fI0755\fR\fI \fR
.RE

force directory mode (S)
.\" force directory mode
.PP
.RS 4
このパラメータは、Samba によって作成されたディレクトリのパーミッションに
\fI必ず\fR設定される UNIX のパーミッションビットを指定する。 これは、ディレクトリの作成時に、 パーミッションビットに対して、このパラメータの値でビット単位の OR 演算を行なうことで実現される。 このパラメータの既定値は 000 (8 進数表記)である。この場合、作成されるディレクトリに対して特にパーミッションビットは追加されない。 このパラメータの値が適用されるのは、
\fIdirectory mask\fR
パラメータの適用後である。
.sp
下記の例は、作成されるすべてのディレクトリに対し、 グループ(group)とその他のユーザ(others)の読み込みと実行権ビットと、 所有者(user)の読み込み/書き込み/実行ビットが必ず付与されるようにする。
.sp
既定値:
\fI\fIforce directory mode\fR\fR\fI = \fR\fI000\fR\fI \fR
.sp
例:
\fI\fIforce directory mode\fR\fR\fI = \fR\fI0755\fR\fI \fR
.RE

force directory security mode (S)
.\" force directory security mode
.PP
.RS 4
このパラメータは、 Windows NT クライアント上のセキュリティダイアログボックスを使って、 UNIX ディレクトリのパーミッションを操作する時に、 設定可能な UNIX 側のパーミッションを指定する。
.sp
このパラメータは、変更されるパーミッションビットに対して、 OR操作のマスクとして適用されるため、 このマスクにあるビットはユーザが行なった修正変更操作に関わらず、設定される。 このパラメータを、OR ではなく AND 操作を実行するパラメータである
\m[blue]\fBdirectory security mask\fR\m[]
と混同しないように。
.sp
基本的に、マスク中で 1 と指定されたビットは、 ディレクトリのセキュリティを修正する際に、常に「on」に設定されたとみなされる。
.sp
このパラメータが明示的に設定されなかった場合は、 0000 に設定される。これにより、ディレクトリに対する全ての user/group/world パーミッションを制限なしに変更可能となる。
.sp
\fI注意\fR
: 他の方法を使って Samba サーバにアクセスすることが可能なユーザは、この制限を簡単に回避できてしまう。 そのため、このパラメータの主な用途はスタンドアロンで動作する「アプライアンス」システムになるだろう。 通常システムの管理者のほとんどは、このパラメータを 0000 のままにしておきたいと考えるだろう。
.sp
既定値:
\fI\fIforce directory security mode\fR\fR\fI = \fR\fI0\fR\fI \fR
.sp
例:
\fI\fIforce directory security mode\fR\fR\fI = \fR\fI700\fR\fI \fR
.RE

group
.\" group
.PP
.RS 4
このパラメータは右記のパラメータの別名である：force group\&.
.RE

force group (S)
.\" force group
.PP
.RS 4
このパラメータには、 このサービスに接続するすべてのユーザのデフォルトの所属グループと見なされる UNIX のグループ名を指定する。 このパラメータを使うと、サービス上のファイルに対するアクセスの際のパーミッションチェックには、 ここで指定したグループを用いることができるため、ファイル共有を行う際に便利である。 この設定を行うことで、 このサービス内において提供するファイルやディレクトリに対して指定されたグループ名にパーミッションを割り当てることにより、 Samba の管理者がこれらのファイルの共有を許可/不許可にすることができるようになる。
.sp
Samba 2\&.0\&.5 以降では、このパラメータの機能が拡張されている。 \'+\' 文字からはじまるグループ名が設定されていた場合、 現在共有にアクセスしているユーザが設定されたグループのメンバーだった場合のみ、 そのグループをユーザのデフォルトのプライマリグループに設定する。 この動作により、該当のグループに予め所属しているユーザのみが、 そのグループを所有者とするファイルを作成する設定を行うことが可能となる。 これにより、所有権の設定をより細かく行なうことが可能となる。 たとえば、force group = +sys
という設定を行った場合、 sys グループに所属しているユーザが Samba の 共有 にアクセスした際にのみ、 デフォルトのプライマリグループが sys に設定される。 その他すべてのユーザは、通常のプライマリグループのままとなる。
.sp

\m[blue]\fBforce user\fR\m[]
パラメータも設定されていた場合、
\fIforce group\fR
で指定されたグループより、
\fIforce user\fR
で指定されたユーザのプライマリグループの方が優先される。
.sp
既定値:
\fI\fIforce group\fR\fR\fI = \fR\fI\fR\fI \fR
.sp
例:
\fI\fIforce group\fR\fR\fI = \fR\fIagroup\fR\fI \fR
.RE

force printername (S)
.\" force printername
.PP
.RS 4
Windows NT （以降）の OS から印刷を行なう場合、
smb\&.conf
中の各プリンタには、 クライアントから使用可能な名前が 2 つある。 最初のものは smb\&.conf で定義された共有名(短い名前)である。 Windows 9x クライアントからは、このプリンタ名しか使用できない。 プリンタに割り当てられたもう一つの名前は、Samba サーバの「プリンタ」 (プリンタとFAX)フォルダ」を参照すると表示されるものである。 これは、(\fIprinter name\fR
オプションと混同しないように) 単にプリンタ名と記載する。
.sp
Samba を含む Windows 互換のリモートのプリンタサーバ上で、 プリンタに対して新しいドライバが割り当てられた際、 Windows クライアントは、そのドライバの名前に合致するように、プリンタ名を変更する。 これは、複数のプリンタに同じドライバを割り当てているユーザを混乱させる結果となる。 Samba において、プリンタのプリンタ名を smb\&.conf で定義された共有名と異なる名称にすることを禁止したい場合は、
\fIforce printername = yes\fR
と設定すること。
.sp
Windows では、プリンタ名と共有名を強制的に一致させることができないため、 このパラメータを有効にすると、Windows サーバから Samba サーバへプリンタの移行を行なう際に問題が発生するので注意。
.sp
プリンタがクライアントにより使用を開始された後にこのパラメータの値を変更することは、 ユーザが自身の「プリンタ」フォルダからプリンタを削除することができなくなるため、推奨しない。
.sp
既定値:
\fI\fIforce printername\fR\fR\fI = \fR\fIno\fR\fI \fR
.RE

force security mode (S)
.\" force security mode
.PP
.RS 4
このパラメータは、 Windows NT クライアント上で NT 固有のセキュリティダイアログボックスを使った UNIX ファイルのパーミッションを操作を行うときに、 変更可能とする UNIX のパーミッションビットを指定する。
.sp
このパラメータは、 変更されるパーミッションビットに対して、OR 操作のマスクとして適用されるため、 このマスクに含まれるビットは、ユーザの設定に関わらず on となる。 このパラメータを、OR ではなく AND 操作を実行するパラメータである
\m[blue]\fBsecurity mask\fR\m[]
と混同しないように。
.sp
端的にいえば、マスク中の各ビットは、ユーザがファイルのセキュリティを変更するときに、 常に「on」に設定するビットとして考えることもできる。
.sp
このパラメータが明示的に設定されなかった場合は、 0 に設定される。これにより、ディレクトリに対する全ての user/group/world パーミッションを制限なしに変更可能となる。
.sp
\fI注意\fR
: 他の方法を使って Samba サーバにアクセスすることが可能なユーザは、この制限を簡単に回避できてしまう。 そのため、このパラメータの主な用途はスタンドアロンで動作する「アプライアンス」システムになるだろう。 通常システムの管理者のほとんどは、 このパラメータを 0000 のままにしておきたいと考えるだろう。
.sp
既定値:
\fI\fIforce security mode\fR\fR\fI = \fR\fI0\fR\fI \fR
.sp
例:
\fI\fIforce security mode\fR\fR\fI = \fR\fI700\fR\fI \fR
.RE

force unknown acl user (S)
.\" force unknown acl user
.PP
.RS 4
このパラメータを設定すると、 ファイルの所有者や所有グループとして不明な SID (ユーザやグループIDを示す、 セキュリティディスクリプタ) を含む Windows NT の ACL は、 現在接続しているユーザの UNIX での uid や gid に自動的にマッピングされる。
.sp
これは、Windows NT のクライアントマシン上で作成された、 マシン内でのみ有効なユーザ(ドメインユーザでない)を含んだ ACL を持つファイルやフォルダを(通常 XCOPY /O により)、 Windows NT クライアントから Samba サーバにコピーした際に、 ファイル上の不明な userid や groupid を現在接続しているユーザのものに対応付けることを意図したものである。 winbindd による Windows NT の SID から UNIX 側の uid や gid への任意の対応づけを可能とする以外に、 この問題を適切に対処する方法はない。
.sp
XCOPY /O が ACCESS_DENIED エラーを引きおこす際には、このパラメータを使って欲しい。
.sp
既定値:
\fI\fIforce unknown acl user\fR\fR\fI = \fR\fIno\fR\fI \fR
.RE

force user (S)
.\" force user
.PP
.RS 4
このパラメータは、サービスに対する接続のすべてで、 デフォルトのユーザとみなされる UNIX ユーザの名前を指定する。 これはファイルを共有する上で便利であるが、誤って使用すると、 セキュリティ上の問題を引き起こす原因となるので、慎重に使用すべきである。
.sp
このユーザ名は接続の確立後に適用される。 従って、クライアントが有効なユーザ名とパスワードで接続を行う必要があることには変わりはない。 接続が確立すると、全てのファイル操作は強制的に「force user」で指定されたユーザの権限で実行される。 クライアントが接続を確立した際のユーザ名は無視される。 これは大変便利なことがある。
.sp
Samba 2\&.0\&.5 以降では、このパラメータによって 設定されたユーザのプライマリグループが、 すべてのファイル操作においてプライマリグループとして利用される。 Samba 2\&.0\&.5 以前では、プライマリグループは本来接続を行ったユーザのプライマリグループのまま変わらない(これはバグである)。
.sp
既定値:
\fI\fIforce user\fR\fR\fI = \fR\fI\fR\fI \fR
.sp
例:
\fI\fIforce user\fR\fR\fI = \fR\fIauser\fR\fI \fR
.RE

fstype (S)
.\" fstype
.PP
.RS 4
このパラメータは、 クライアントが共有のファイルシステムを問い合わせた際に、
\fBsmbd\fR(8)
が返却する共有のファイルシステム名を指定する。 デフォルトは Windows NT 互換の
\fBNTFS\fR
だが、 必要に応じて
\fBSamba\fR
や
\fB FAT \fR
といった別の文字列に、変更することができる。
.sp
既定値:
\fI\fIfstype\fR\fR\fI = \fR\fINTFS\fR\fI \fR
.sp
例:
\fI\fIfstype\fR\fR\fI = \fR\fISamba\fR\fI \fR
.RE

get quota command (G)
.\" get quota command
.PP
.RS 4
get quota command
は Samba が実行されている OS 上で、API が提供されていない場合に限り使用すべきである。
.sp
このオプションは、必ず
\&./configure \-\-with\-sys\-quotas
が指定されているときのみ有効である。 もしくは Linux において
\&./configure \-\-with\-quotas
が指定され、システムにクオータの API が存在し、機能する場合にのみ使用できる。
.sp
このパラメータは、指定されたディレクトリが存在するパーティションについて、指定されたユーザやグループのクオータ情報を取得するスクリプトへのパスを指定する。
.sp
このスクリプトは三つの引数をとる:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
ディレクトリ
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
問い合わせのタイプ
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
ユーザの uid もしくはグループの gid
.sp
.RE
問い合わせのタイプは以下のいずれかの値をとる:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
1 \- ユーザのクオータ
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
2 \- ユーザのデフォルトのクオータ (uid = \-1)
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
3 \- グループのクオータ
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
4 \- グループのデフォルトのクオータ (gid = \-1)
.sp
.RE
スクリプトの出力は、以下の要素をスペースで区切った1行の形式で行なわれる:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
要素1 \- クオータフラグ (0 = クオータは無効、 1 = クオータは有効、 2 = クオータは有効で使用を強制されている)
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
要素2 \- 現在の使用済ブロック数
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
要素3 \- ブロック数のソフトウェア的な上限
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
要素4 \- ブロック数のハードウェア的な上限
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
要素5 \- 現在の使用済 inode 数
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
要素6 \- inode 数のソフトウェア的な上限
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
要素7 \- inode 数のハードウェア的な上限
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
要素8(オプション) \- ブロックあたりのバイト数(デフォルト1024)
.sp
.RE
既定値:
\fI\fIget quota command\fR\fR\fI = \fR\fI\fR\fI \fR
.sp
例:
\fI\fIget quota command\fR\fR\fI = \fR\fI/usr/local/sbin/query_quota\fR\fI \fR
.RE

getwd cache (G)
.\" getwd cache
.PP
.RS 4
これはチューニングのためのオプションである。このパラメータを有効にすると、 getwd() の呼び出し時間を減らすためのあるキャッシュアルゴリズムが有効になる。特に
\m[blue]\fBwide smbconfoptions\fR\m[]
パラメータが
\fBno\fR
に設定された場合は、パフォーマンスに対して相当な効果がある。
.sp
既定値:
\fI\fIgetwd cache\fR\fR\fI = \fR\fIyes\fR\fI \fR
.RE

guest account (G)
.\" guest account
.PP
.RS 4
このパラメータは、
\m[blue]\fBguest ok\fR\m[]
(以下を参照のこと) が設定されたサービスにアクセスする際に使用されるユーザ名である。 ゲストサービスに接続しているクライアントすべてに対して、 ここで設定したユーザの権限が適用される。 このユーザはパスワードファイルに存在している必要があるが、ログイン可能となっている必要はない。 このパラメータとして、「ftp」ユーザを利用するのもよいであろう。
.sp
システムによっては、アカウント「nobody」では印刷することができない。 この場合は別のアカウントを使用すること。 ゲストユーザでログイン(su \-コマンドなどを使用する)して、
lpr(1)
や
lp(1)
などの、 システムにある印刷コマンドを実行して印刷を行ってみることで、 これを確認しておくべきであろう。
.sp
このパラメータは % マクロを受け付けない。 システムの大半の箇所では、正常動作する上でこの値が静的に設定されていることが必要とされるためである。
.sp
既定値:
\fI\fIguest account\fR\fR\fI = \fR\fInobody # default can be changed at compile\-time\fR\fI \fR
.sp
例:
\fI\fIguest account\fR\fR\fI = \fR\fIftp\fR\fI \fR
.RE

public
.\" public
.PP
.RS 4
このパラメータは右記のパラメータの別名である：guest ok\&.
.RE

guest ok (S)
.\" guest ok
.PP
.RS 4
このパラメータが
\fByes\fR
のサービスに付いては、 サービスへの接続の際にパスワードが要求されない。 この場合、\m[blue]\fBguest account\fR\m[]
の権限で操作が行われる。
.sp
このパラメータは
\m[blue]\fBrestrict anonymous = 2\fR\m[]
のメリットを無効にする。
.sp
このオプションに関する詳細については、
\m[blue]\fBsecurity\fR\m[]
セクションを参照のこと。
.sp
既定値:
\fI\fIguest ok\fR\fR\fI = \fR\fIno\fR\fI \fR
.RE

only guest
.\" only guest
.PP
.RS 4
このパラメータは右記のパラメータの別名である：guest only\&.
.RE

guest only (S)
.\" guest only
.PP
.RS 4
このパラメータが
\fByes\fR
のサービスについては、 ゲスト接続のみが許可される。 このパラメータは、\m[blue]\fBguest ok\fR\m[]
が有効になっていないサービスでは無効である。
.sp
このオプションに関する詳細については、\m[blue]\fBsecurity\fR\m[]
セクションを参照のこと。
.sp
既定値:
\fI\fIguest only\fR\fR\fI = \fR\fIno\fR\fI \fR
.RE

hide dot files (S)
.\" hide dot files
.PP
.RS 4
この真偽値パラメータにより、 ドットで始まるファイル名のファイルを隠しファイルとして扱うかどうかが制御される。
.sp
既定値:
\fI\fIhide dot files\fR\fR\fI = \fR\fIyes\fR\fI \fR
.RE

hide files (S)
.\" hide files
.PP
.RS 4
これは、見せたくないがアクセスは許可したいファイルやディレクトリのリストを指定する。 DOSの「隠し」属性が該当するファイルやディレクトリに付加される。
.sp
リストの各エントリは、 スペースをエントリ中に含められるようにするため、「/」で区切る必要がある。 「*」と「?」は、DOSのワイルドカードと同様にして、 複数のファイルやディレクトリを指定するために利用することができる。
.sp
各エントリはUNIXのパス形式で指定すること。DOSのパス形式で指定したり、 UNIXでディレクトリを意味する「/」を含んだりはできない。
.sp
この設定には、 case sensitive オプションの設定が影響することに注意。
.sp
このパラメータを設定すると、 全てのファイルやディレクトリに対して該当するかどうかの確認を行う必要が発生するため、 Samba のパフォーマンスに影響がでる。
.sp
以下の設定例は、Thursby
から入手可能な Macintosh 上の SMB クライアント (DAVE) が内部的な用途に作成するファイルの指定に加え、 ドットで始まるファイルを隠しファイルとして指定したものである。
.sp
このパラメータの設定例を以下に示す。
.sp
.if n \{\
.RS 4
.\}
.nf
hide files = /\&.*/DesktopFolderDB/TrashFor%m/resource\&.frk/
.fi
.if n \{\
.RE
.\}
.sp
既定値:
\fI\fIhide files\fR\fR\fI = \fR\fI # どのファイルも隠されない\fR\fI \fR
.RE

hide special files (S)
.\" hide special files
.PP
.RS 4
このパラメータにより、クライアントからソケット、デバイス、FIFOなどのファイルがディレクトリ一覧で表示されることを抑止できる。
.sp
既定値:
\fI\fIhide special files\fR\fR\fI = \fR\fIno\fR\fI \fR
.RE

hide unreadable (S)
.\" hide unreadable
.PP
.RS 4
このパラメータにより、読みとりができないファイルの存在をクライアントから隠蔽できる。 このパラメータのデフォルトは off になっている。
.sp
既定値:
\fI\fIhide unreadable\fR\fR\fI = \fR\fIno\fR\fI \fR
.RE

hide unwriteable files (S)
.\" hide unwriteable files
.PP
.RS 4
このパラメータにより、書き込みができないファイルの存在をクライアントから隠蔽できる。 このパラメータのデフォルトは off になっている。 書き込みができないディレクトリについては通常通り表示されることに注意。
.sp
既定値:
\fI\fIhide unwriteable files\fR\fR\fI = \fR\fIno\fR\fI \fR
.RE

homedir map (G)
.\" homedir map
.PP
.RS 4
このパラメータは、
\m[blue]\fBnis homedir\fR\m[]
が
\fByes\fR
で
\fBsmbd\fR(8)
が Windows 95/98 の
\fIlogon server\fR
として機能している場合に、 ユーザのホームディレクトリがあるサーバがどこかの情報をもつ NIS (YP)のマップを指定する。 現在のところ、Sun の auto\&.home マップ形式のみが認識される。 マップの形式は以下のとおり:
.sp
.if n \{\
.RS 4
.\}
.nf
username server:/some/file/system
.fi
.if n \{\
.RE
.\}
.sp
プログラムは、最初の「:」の前までをサーバ名として解釈する。 これ以外のマップの形式や、Amd (別の automounter)のマップにも対応した優れた解析ロジックもおそらく存在するはずである。
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBNote\fR
.ps -1
.br
このオプションを利用する場合は、 システムがNISクライアントとして稼働している必要がある。
.sp .5v
.RE
既定値:
\fI\fIhomedir map\fR\fR\fI = \fR\fI\fR\fI \fR
.sp
例:
\fI\fIhomedir map\fR\fR\fI = \fR\fIamd\&.homedir\fR\fI \fR
.RE

host msdfs (G)
.\" host msdfs
.PP
.RS 4
\fByes\fR
の場合、 Samba は DFS サーバとして機能し、 DFS を利用可能なクライアントは、サーバ上で提供された DFS ツリーを参照することが可能となる。
.sp
共有単位のパラメータである
\m[blue]\fBmsdfs root\fR\m[]
も参照のこと。 Samba で DFS ツリーを構成する場合の詳細な情報については、 Samba3\-HOWTO の MSDFS の章を参照のこと。
.sp
既定値:
\fI\fIhost msdfs\fR\fR\fI = \fR\fIyes\fR\fI \fR
.RE

hostname lookups (G)
.\" hostname lookups
.PP
.RS 4
Samba が(負荷のかかる)ホスト名検索を行なうか、 IP アドレスを使用するかを指定する。現在ホスト名検索を使用している箇所としては、
hosts deny
および
hosts allow
の確認箇所などが挙げられる。
.sp
既定値:
\fI\fIhostname lookups\fR\fR\fI = \fR\fIno\fR\fI \fR
.sp
例:
\fI\fIhostname lookups\fR\fR\fI = \fR\fIyes\fR\fI \fR
.RE

allow hosts
.\" allow hosts
.PP
.RS 4
このパラメータは右記のパラメータの別名である：hosts allow\&.
.RE

hosts allow (S)
.\" hosts allow
.PP
.RS 4
このパラメータの同義語として
\m[blue]\fBallow hosts\fR\m[]
がある。
.sp
このパラメータには、サービスに対するアクセスを許可するホストのリストを、 コンマ, スペース, タブで区切って指定する。
.sp
[global] セクションで指定された場合、 個々のサービスで異なった設定が行われている場合も含めて、 その設定が全てのサービスに対して適用される。
.sp
ホストの指定は、IPアドレスでもホスト名でも行うことができる。 例えば、あるClass C サブネット上のホストのみにアクセスを限定したい場合は、
allow hosts = 150\&.203\&.5\&.とすればよい。 指定に利用できる記法の全ては、
hosts_access(5)のマニュアルページ中に記載されている。 このマニュアルページはシステムに存在しないかも知れないので、 ここで簡単に説明を行っておく。
.sp
なお、localhost のアドレスである 127\&.0\&.0\&.1 からのアクセスは、
\m[blue]\fBhosts deny\fR\m[]
パラメータで明示的に禁止されない限り、常にアクセスを許可される。
.sp
ホストの指定に、network/netmask 形式を用いたり、 システムがネットグループをサポートしている場合はネットグループ名を用いたりすることも可能である。
\fIEXCEPT\fR
を用いることで、ワイルドカードによるホストの指定に対する例外を設けることも可能である。 以下の例が手がかりになるだろう:
.sp
Example 1: 150\&.203\&.*\&.* 内の全てのIPアドレスを許可する; ただし、例外のアドレスが1つある
.sp
hosts allow = 150\&.203\&. EXCEPT 150\&.203\&.6\&.66
.sp
Example 2: 指定した network/netmask の範囲内のホストからのアクセスを許可する
.sp
hosts allow = 150\&.203\&.15\&.0/255\&.255\&.255\&.0
.sp
Example 3: 個別に指定したホストからのアクセスを許可する
.sp
hosts allow = lapland, arvidsjaur
.sp
Example 4: NISネットグループの「foonet」に含まれるホストからのアクセスを原則として許可するが、あるホストからのアクセスについては拒否する。
.sp
hosts allow = @foonet
.sp
hosts deny = pirate
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBNote\fR
.ps -1
.br
実際のアクセスには、ユーザレベルで適切なパスワード指定する必要があることに注意。
.sp .5v
.RE
ホストレベルのアクセス制御が期待通りになっているかどうかの確認手段については
\fBtestparm\fR(1)
を参照のこと。
.sp
既定値:
\fI\fIhosts allow\fR\fR\fI = \fR\fI # なし (全てのホストがアクセス許可される)\fR\fI \fR
.sp
例:
\fI\fIhosts allow\fR\fR\fI = \fR\fI150\&.203\&.5\&. myhost\&.mynet\&.edu\&.au\fR\fI \fR
.RE

deny hosts
.\" deny hosts
.PP
.RS 4
このパラメータは右記のパラメータの別名である：hosts deny\&.
.RE

hosts deny (S)
.\" hosts deny
.PP
.RS 4
\fIhosts allow\fR
の反対の意味を持ち、 このパラメータで指定されたホストは、サービス内で明示的にアクセスが許可されない限り、 サービスへのアクセスを\fI拒否される\fR。 両者の設定が矛盾した場合は、\fIallow\fR
側の設定が優先される。
.sp
デフォルトでアクセスを拒否したい場合は、 ALL (もしくはネットマスク
0\&.0\&.0\&.0/0) の指定を行ない、
\m[blue]\fBhosts allow = hosts allow\fR\m[]
パラメータにより、 アクセスを許可したいホストを明示的に指定すること。
.sp
既定値:
\fI\fIhosts deny\fR\fR\fI = \fR\fI # なし (アクセスを拒否されるホストはない)\fR\fI \fR
.sp
例:
\fI\fIhosts deny\fR\fR\fI = \fR\fI150\&.203\&.4\&. badhost\&.mynet\&.edu\&.au\fR\fI \fR
.RE

idmap alloc backend (G)
.\" idmap alloc backend
.PP
.RS 4
idmap alloc backend は Winbindが WindowsのSIDに対してUnixのuid/gidを 割り当てるためのプラグインインターフェースを提供する。 このオプションは ID割り当て機能を提供する idmap モジュールの名前を結びつけるために 利用される。 それぞれのidmapプラグインが実装しているID割り当て機能の特徴については それぞれのmanページを参照のこと。最も共通のプラグインは、 tdb (\fBidmap_tdb\fR(8)) と ldap (\fBidmap_ldap\fR(8)) である。
.sp
このパラメータの既定値は\m[blue]\fBidmap backend\fR\m[]
である。そのため、Winbindは標準のバックエンドから取得したUnixのIDを 割り当てる。このパラメータは、会社でユーザ情報を集中管理している といった時に、UnixのID情報を外部から取得する必要がある場合にのみ設定 する。
.sp
\m[blue]\fBidmap alloc config\fR\m[]
オプションも参照のこと。
.sp
\fI既定値なし\fR
.sp
例:
\fI\fIidmap alloc backend\fR\fR\fI = \fR\fItdb\fR\fI \fR
.RE

idmap alloc config (G)
.\" idmap alloc config
.PP
.RS 4
idmap alloc config のプレフィックスは、
\m[blue]\fBidmap alloc backend\fR\m[]
パラメーターで設定された バックエンドに対するパラメーターの設定方法を提供する。 それぞれの idmap プラグインに対する個別の設定方法の詳細については man ページを参照すること。
.sp
\fI既定値なし\fR
.RE

idmap backend (G)
.\" idmap backend
.PP
.RS 4
idmap backend は Winbindが SID/uid/gid のマッピングテーブルを 格納するための様々なバックエンドを利用するためのプラグイン インターフェースを提供する。
.sp
このオプションは、\m[blue]\fBidmap config\fR\m[]で何も指定 されていないときに、既定値として利用するバックエンドを指定する ときに利用する。
.sp
この既定値のバックエンドは、winbindで生成されたidmapの格納場所 も指定する。そのため、書き込み可能な\fBidmap_tdb\fR(8)や\fBidmap_ldap\fR(8)をidmapバックエンドとして強く推奨する。\fBidmap_rid\fR(8)や\fBidmap_ad\fR(8)は書き込み可能でないため、これらをidmapのバックエンド に指定すると予想できない結果となる。
.sp
ridとadのバックエンドを利用する場合には\m[blue]\fBworkgroup\fR\m[]で指定 されているドメイン名を\m[blue]\fBidmap config\fR\m[]の パラメータで指定する。
.sp
SID/uid/gid のバックエンドの例として tdb (\fBidmap_tdb\fR(8))、 ldap (\fBidmap_ldap\fR(8))、 rid (\fBidmap_rid\fR(8))、 ad (\fBidmap_tdb\fR(8))が提供されている。
.sp
既定値:
\fI\fIidmap backend\fR\fR\fI = \fR\fItdb\fR\fI \fR
.RE

idmap cache time (G)
.\" idmap cache time
.PP
.RS 4
このパラメーターにはWinbindのidmapインターフェースが SID/uid/gidの問い合わせに成功した結果をキャッシュする秒数を設定する。
.sp
既定値:
\fI\fIidmap cache time\fR\fR\fI = \fR\fI604800（1週間）\fR\fI \fR
.RE

idmap config (G)
.\" idmap config
.PP
.RS 4
idmap config のプレフィックスは、それぞれの信頼されたドメインを 管理する方法を提供する。idmap config プレフィックスに続けて、 ドメイン名、コロン、そして選択したバックエンド用の設定を指定 しなければならない。全てのドメインで指定可能な3つのオプションがある。
.PP
backend = backend_name
.RS 4
このドメインでSID/uid/gidのバックエンドとして利用する idmapプラグインの名前を指定する。
.RE
.PP
range = low \- high
.RS 4
バックエンドの管轄下にある、利用可能なuidとgidの範囲を指定する。 一般的に、同じバックエンドにてSID/uid/gidを保存・取得する場合、 範囲は変わらない。
.sp
Winbindは、このパラメータを使って信頼できるバックエンドから unix IDとSIDのマッピング情報を検索する。そのため、各ドメイン ごとに設定される必要があり、\m[blue]\fBidmap uid\fR\m[]
と\m[blue]\fBidmap gid\fR\m[]の設定範囲とは異なっている 必要がある。
.RE
.sp
次の例はCORPドメインが\fBidmap_ad\fR(8)
バックエンド で、他の全てのドメインが\fBidmap_tdb\fR(8)
バックエンドとしてどのように 設定されるかを示している。 この設定では、CORPドメインの管理者がSFUを使って1000000以下をアサイン しており、winbindが次の1000000台を、自分の管轄下のドメインとローカル グループのためのマッピングに使う場合の例である。
.sp
.if n \{\
.RS 4
.\}
.nf
	idmap backend = tdb
	idmap uid = 1000000\-1999999
	idmap gid = 1000000\-1999999

	idmap config CORP : backend  = ad
	idmap config CORP : range = 1000\-999999
	
.fi
.if n \{\
.RE
.\}
.sp
\fI既定値なし\fR
.RE

winbind gid
.\" winbind gid
.PP
.RS 4
このパラメータは右記のパラメータの別名である：idmap gid\&.
.RE

idmap gid (G)
.\" idmap gid
.PP
.RS 4
idmap gid パラメータは UNIX グループを NT グループの SID に マッピングする際に使用するグループ id の範囲を指定する。 予期しない競合が発生しないようにするため、この GID の範囲に ローカルな グループや NIS グループが存在しないようにすること。
.sp
\m[blue]\fBidmap backend\fR\m[]、
\m[blue]\fBidmap config\fR\m[]も参照のこと。
.sp
既定値:
\fI\fIidmap gid\fR\fR\fI = \fR\fI\fR\fI \fR
.sp
例:
\fI\fIidmap gid\fR\fR\fI = \fR\fI10000\-20000\fR\fI \fR
.RE

idmap negative cache time (G)
.\" idmap negative cache time
.PP
.RS 4
このパラメーターは Winbindのidmapインターフェースが SID/uid/gidの問い合わせに失敗した結果をキャッシュしておく秒数を 指定する。
.sp
既定値:
\fI\fIidmap negative cache time\fR\fR\fI = \fR\fI120\fR\fI \fR
.RE

winbind uid
.\" winbind uid
.PP
.RS 4
このパラメータは右記のパラメータの別名である：idmap uid\&.
.RE

idmap uid (G)
.\" idmap uid
.PP
.RS 4
idmap uid パラメータは UNIX ユーザを NT ユーザの SID に マッピングする際に割り当てられるユーザ id の範囲を指定する。 予期しない競合が発生しないようにするため、この GID の範囲に ローカルな ユーザや NIS ユーザが存在しないようにすること。
.sp
\m[blue]\fBidmap backend\fR\m[]、
\m[blue]\fBidmap config\fR\m[]オプションも参照のこと。
.sp
既定値:
\fI\fIidmap uid\fR\fR\fI = \fR\fI\fR\fI \fR
.sp
例:
\fI\fIidmap uid\fR\fR\fI = \fR\fI10000\-20000\fR\fI \fR
.RE

include (G)
.\" include
.PP
.RS 4
このパラメータを使うと、ある設定ファイル中に別の設定ファイルを挿入できる。 挿入されるファイルは、挿入された場所に記述されたかのように、 そのままの形で挿入される。
.sp
このパラメータには、\fI%u\fR、
\fI%P\fR、\fI%S\fRパラメータを除き、標準の変数置換が適用される。
.sp

\fIinclude = registry\fR
というパラメータには特殊な意味が ある。これはカレントディレクトリから
\fIregistry\fR
という 名前のファイルをインクルードする\fIのではなく\fR、 レジストリーからグローバル設定を読み込む。詳細はレジストリーベースの設定 に関する章を参照されたい。注意：このオプションはレジストリー共有を自動的に 有効にする。
.sp
既定値:
\fI\fIinclude\fR\fR\fI = \fR\fI\fR\fI \fR
.sp
例:
\fI\fIinclude\fR\fR\fI = \fR\fI/usr/local/samba/lib/admin_smb\&.conf\fR\fI \fR
.RE

inherit acls (S)
.\" inherit acls
.PP
.RS 4
このパラメータは、 親ディレクトリに既定値のACLが設定されており、サブディレクトリの作成時に、 その ACL の設定を引き継がせたい場合に用いられる。既定値ではディレクトリ作成時に 設定されるモードが用いられる。このオプションを有効にすると、モードが 0777 となり、 ディレクトリの既定値のACLを確実に継承できるようになる。 ネイティブなWindowsデータをメタデータとして格納する、VFSモジュールacl_xattrか acl_tdbは、ロードされるどのような共有に対しても、WindowsのACLを正しく エミュレートするために、このオプションを自動的にオンにする事が要求される ことに注意。
.sp
既定値:
\fI\fIinherit acls\fR\fR\fI = \fR\fIno\fR\fI \fR
.RE

inherit owner (S)
.\" inherit owner
.PP
.RS 4
新規作成したファイルやディレクトリの所有者としては、 通常接続しているユーザの実行 UID の値が用いられる。 このパラメータにより、Samba の管理者は、 新規作成したファイルやディレクトリの所有者を 親ディレクトリの所有者と同一にすることが可能となる。
.sp
この動作が有用な状況としては、 ユーザがファイルの作成や修正はできるが、削除はできないようにした drop box や、 あるユーザの移動プロファイルのディレクトリ内に新規作成されたファイルの所有者が そのユーザとなるようにしたい場合などが挙げられる。
.sp
既定値:
\fI\fIinherit owner\fR\fR\fI = \fR\fIno\fR\fI \fR
.RE

inherit permissions (S)
.\" inherit permissions
.PP
.RS 4
通常、新規作成したファイルやディレクトリのパーミッションは、
\m[blue]\fBcreate mask\fR\m[]
、\m[blue]\fBdirectory mask\fR\m[]
、
\m[blue]\fBforce create mode\fR\m[]
、
\m[blue]\fBforce directory mode\fR\m[]
パラメータによって決定されるが、 真偽値パラメータである inherit permissions は、それらに優先される。
.sp
新しいディレクトリはsetgid のようなビットも含め、 親ディレクトリのパーミッションを引き継ぐようになる。
.sp
新しく作成されたファイルは、read/write ビットの設定を親ディレクトリから引き継ぐようになる。 execute ビットについては、従来どおり
\m[blue]\fBmap archive\fR\m[]
、
\m[blue]\fBmap hidden\fR\m[]
、\m[blue]\fBmap system\fR\m[]
などにより制御される。
.sp
setuid ビットが引き継がれることは、\fI決して \fRない(コード上で明示的に禁止している)。
.sp
このパラメータは、数千人レベルの多くのユーザが存在する大規模なシステムで、 単一の [homes] 共有を各ユーザが柔軟に利用できるようにさせる際に、 特に有用であろう。
.sp
既定値:
\fI\fIinherit permissions\fR\fR\fI = \fR\fIno\fR\fI \fR
.RE

init logon delay (G)
.\" init logon delay
.PP
.RS 4
このパラメータは\m[blue]\fBinit logon delayed hosts\fR\m[]で指定 したホストに対してinitial samlogonの応答を保留する長さをミリ秒で指定する。
.sp
既定値:
\fI\fIinit logon delay\fR\fR\fI = \fR\fI100\fR\fI \fR
.RE

init logon delayed hosts (G)
.\" init logon delayed hosts
.PP
.RS 4
このパラメータには、最初に返される samlogon 応答を遅延させるべき ホスト名や IP アドレス、ネットワーク等のリストを指定する（本ホスト 以外にもドメインコントローラがある場合、この設定により、Windows XP 端末はそれらの DC を参照するようになる）。
.sp
応答を保留する長さは\m[blue]\fBinit logon delay\fR\m[]で指定する。
.sp
既定値:
\fI\fIinit logon delayed hosts\fR\fR\fI = \fR\fI\fR\fI \fR
.sp
例:
\fI\fIinit logon delayed hosts\fR\fR\fI = \fR\fI150\&.203\&.5\&. myhost\&.mynet\&.de\fR\fI \fR
.RE

interfaces (G)
.\" interfaces
.PP
.RS 4
このオプションにより、Sambaがブラウジング、名前の登録その他のNBTの通信に利用するネットワークインタフェースのリストを設定することが可能となる。 デフォルトの場合、Sambaはカーネルに対して有効なインタフェースのリストを問い合わせ、 127\&.0\&.0\&.1以外のブロードキャスト可能なインタフェースをすべて利用する。
.sp
このオプションはインタフェースを示す文字列のリストとなる。 各文字列は以下の形式のいずれで指定してもよい。
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
ネットワークインタフェース名(eth0など)。 シェルのようなワイルドカード指定も可能である。 例えばeth*は「eth」から始まるすべてのインタフェースを指定したことになる。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
IPアドレス。 この場合、ネットマスクの値は、カーネルから取得されたインタフェースのリストにより設定される。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
IP/mask のペア。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
ブロードキャスト/mask のペア。
.sp
.RE
「mask」パラメータはビット長(例えば24はクラスCネットワーク)で指定しても、 ドット区切り10進数表記で指定してもよい。
.sp
上記の「IP」パラメータは、ドット区切り10進法で指定しても、 OSの標準的なホスト名解決機構で解決可能なホスト名で指定してもよい。
.sp
デフォルトで、Samba はループバックインタフェース (IPアドレス 127\&.0\&.0\&.1) を除くブロードキャスト可能なすべての有効なインタフェースを使用する。
.sp
以下の設定では、eth0 デバイスと 192\&.168\&.2\&.10 および 192\&.168\&.3\&.10 の IP アドレスに対応する 3 つのネットワークインタフェースが指定されている。 後者のインタフェース 2 つに対するネットマスクは 255\&.255\&.255\&.0 に設定されている。
.sp
既定値:
\fI\fIinterfaces\fR\fR\fI = \fR\fI\fR\fI \fR
.sp
例:
\fI\fIinterfaces\fR\fR\fI = \fR\fIeth0 192\&.168\&.2\&.10/24 192\&.168\&.3\&.10/255\&.255\&.255\&.0\fR\fI \fR
.RE

invalid users (S)
.\" invalid users
.PP
.RS 4
これは、サービスに対するログインを許可しないユーザのリストを指定する。 このパラメータは、不適切な設定により発生しうるセキュリティ上の問題を完全に抑止する、
\fIパラノイド的\fR設定である。
.sp
「@」ではじまる名前は(システムがNISをサポートしている場合)、 まずNISネットグループとして解釈され、NISネットグループデータベースに名前が存在しない 時は、UNIXのグループとして解釈される。
.sp
「+」で始まる名前は、NSS getgrnam() インタフェース経由でUNIXのグループ名として のみ解釈される。「 & 」で始まる名前は、NISネットグループの名前としてのみ解釈される (この場合システムでNISが稼働している必要がある)。 名前の前に付けられた「+」および「 & 」文字は、検索の順番を示す意味で使うこともできる。 例えば、\fI+&group\fRは、 UNIXグループを検索してから、NISネットグループを検索するという意味になり、
\fI&+group\fRは、 NIS ネットグループを検索してから UNIXグループを検索するという意味になる(これは「@」と同等になる)。
.sp
\fI%S\fRは、 現在のサービス名に置換される。これは [homes] セクションで有効である。
.sp
既定値:
\fI\fIinvalid users\fR\fR\fI = \fR\fI # invalid users は空である\fR\fI \fR
.sp
例:
\fI\fIinvalid users\fR\fR\fI = \fR\fIroot fred admin @wheel\fR\fI \fR
.RE

iprint server (G)
.\" iprint server
.PP
.RS 4
このパラメータは、\m[blue]\fBprinting\fR\m[]
が
\fBiprint\fR
に設定されている場合のみ有効である。
.sp
設定されている場合、CUPS の
client\&.conf
で指定された ServerName オプションの値がこのパラメータによって上書きされる。 複数の仮想 Samba サーバが起動している環境で各々が異なる CUPS デーモンに接続している環境では、このパラメータが必要となる。
.sp
既定値:
\fI\fIiprint server\fR\fR\fI = \fR\fI""\fR\fI \fR
.sp
例:
\fI\fIiprint server\fR\fR\fI = \fR\fIMYCUPSSERVER\fR\fI \fR
.RE

keepalive (G)
.\" keepalive
.PP
.RS 4
このパラメータの値(整数値)により、
\fIkeepalive\fR
パケットが送出される秒単位の間隔が設定される。このパラメータの値が0の場合、 keepalive パケットは送出されない。 keepalive パケットを送出することにより、サーバはクライアントマシンが存在していて応答があることを確認することが可能になる。
.sp
ソケットにデフォルトで SO_KEEPALIVE 属性が設定されている場合(
\m[blue]\fBsocket options\fR\m[]
を参照のこと)、通常 keepalive は不要である。基本的に、このオプションは問題が発生している場合にのみ使用すべきである。
.sp
既定値:
\fI\fIkeepalive\fR\fR\fI = \fR\fI300\fR\fI \fR
.sp
例:
\fI\fIkeepalive\fR\fR\fI = \fR\fI600\fR\fI \fR
.RE

kerberos method (G)
.\" kerberos method
.PP
.RS 4
Kerberos チケットをどのように検査するかを制御する。
.sp
有効な値は以下の通り：
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
secrets only \- チケットの検査に secrets\&.tdb のみを使用する（デフォルト）
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
system keytab \- チケットの検査にシステムの keytab ファイルのみを使用する
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
dedicated keytab \- チケットの検査に Samba 専用の keytab ファイルを使用する
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
secrets and keytab \- 最初に secrets\&.tdb 、その後システムの keytab ファイルを使用する
.sp
.RE
「system keytab」と「dedicated keytab」の主な違いは、 適切な keytab エントリを見つける際に、前者は期待するプリンシパルに 基づくフィルタリングを行うのに対し、後者は Kerberos に依存するところである。
.sp
このパラメータの値が「dedicated keytab」の場合、 keytab ファイルのパスを指定するため
\m[blue]\fBdedicated keytab file\fR\m[]
パラメータを必ず設定しなければならない。
.sp
既定値:
\fI\fIkerberos method\fR\fR\fI = \fR\fIsecrets only\fR\fI \fR
.RE

kernel change notify (S)
.\" kernel change notify
.PP
.RS 4
このパラメータは、Samba がカーネルに対してディレクトリの変更 通知を要求するか指定でき、この機能を使用すれば、サーバ上にある データに変更があった場合に SMB クライアントがその結果を 反映できるようになる。
.sp
このパラメータは使用しているカーネルが inotify インターフェース を使用してユーザプログラムに対しての変更の通知をサポートしている 場合にのみ使用される。
.sp
既定値:
\fI\fIkernel change notify\fR\fR\fI = \fR\fIyes\fR\fI \fR
.RE

kernel oplocks (G)
.\" kernel oplocks
.PP
.RS 4
カーネルベースの
\m[blue]\fBoplocks\fR\m[]
をサポートしているUNIX(現在はIRIXとLinux 2\&.4カーネルのみ)の場合、 このパラメータにより oplock の利用を制御できる。
.sp
カーネル oplocks のサポートにより、
\fBsmbd\fR(8)
が oplock を行ったファイルに対して、 ローカルな UNIX プロセスや NFS 経由でのアクセスがあった際に、 Sambaが
\fIoplocks\fR
を破棄することが可能となる。 これにより、 SMB/CIFS と NFS やローカルファイルアクセスとの間の完全な一貫性が確保される (これは\fI非常に\fR素晴らしいことである :\-)。
.sp
このパラメータの既定値は、
\fBon\fR
であるが、 カーネルがこの機能をサポートしていないシステムでは、自動的に無効にされる。 このパラメータを変更する必要はないであろう。
.sp
既定値:
\fI\fIkernel oplocks\fR\fR\fI = \fR\fIyes\fR\fI \fR
.RE

lanman auth (G)
.\" lanman auth
.PP
.RS 4
このパラメータは、\fBsmbd\fR(8)
が LANMAN パスワードハッシュを使用した 認証を行なうか否かを制御する。無効にした場合、 NT パスワードハッシュを利用する クライアント(Windows NT/2000クライアント、smbclientなど。しかし Windows 95/98や MS\-DOS クライアントは含まない)のみがSambaホストに接続できる。
.sp
LANMAN 暗号化レスポンスは簡単に解読することが可能である。これは大文字と小文字を 区別しないことや、使用しているアルゴリズムなどに起因する。Windows 95/98 や MS\-DOS クライアントが存在しない場合は、このオプションを無効にした方ががよいだろう。
.sp
このパラメータがnoに設定された場合、これは、次のパスワードの 変更時にSambaのpassdb中のsambaLMPasswordを空白にする動作も行う。この結果、 lanmanクライアントは、あとでlanman auth を再度有効に下としても認証出来なくなる。
.sp
encypt passwords
オプションとは異なり、このパラメータはクライアントの挙動を制御するものではなく、 LANMAN レスポンスは以前としてネットワーク上を送信される。 Samba のクライアント (smbclient など) で LANMAN レスポンスを無効にするには
client lanman auth
を参照のこと。
.sp
このパラメータと
ntlm auth
の両方を無効にした場合、 NTLMv2 によるログインのみが可能となる。 クライアントのすべてが NTLMv2 をサポートしているわけではなく、ほとんどのクライアント では NTLMv2 を使用するために明示的な設定を行なう必要がある。
.sp
既定値:
\fI\fIlanman auth\fR\fR\fI = \fR\fIno\fR\fI \fR
.RE

large readwrite (G)
.\" large readwrite
.PP
.RS 4
このパラメータは、Windows 2000で導入された、 さまざまなSMBリクエストにおける新しい64Kのストリーム読みとりおよび書き込みを
\fBsmbd\fR(8)
がサポートするかどうかを制御する。 Windows 2000クライアントのリダイレクタにはバグがあるため、 このパラメータを利用するには、SambaがIRIX、Solaris、Linux 2\&.4カーネルのような64ビットのOSで動作している必要がある。 Windows 2000クライアントにおいては、10% のパフォーマンス向上が見込まれる。 既定値は on であるが、他の Samba コードほどにはテストが充分には行われていない。
.sp
既定値:
\fI\fIlarge readwrite\fR\fR\fI = \fR\fIyes\fR\fI \fR
.RE

ldap admin dn (G)
.\" ldap admin dn
.PP
.RS 4

\m[blue]\fBldap admin dn\fR\m[]
は、 Samba がユーザのアカウント情報を取得するために ldap サーバに接続する際に 用いられる、Distinguished Name (DN) を指定する。
\m[blue]\fBldap admin dn\fR\m[]
は、
private/secrets\&.tdb
ファイルに 格納された admin dn のパスワードとともに用いられる。 これがどのように連携するかについての詳細な情報は、
\fBsmbpasswd\fR(8)
のマニュアルページを参照のこと。
.sp

\m[blue]\fBldap admin dn\fR\m[]
には完全な DN 名を指定する必要がある。
\m[blue]\fBldap suffix\fR\m[]
の値が
\m[blue]\fBldap admin dn\fR\m[]
に付加されることはない。
.sp
\fI既定値なし\fR
.RE

ldap connection timeout (G)
.\" ldap connection timeout
.PP
.RS 4
このパラメータは、LDAPサーバに対して最初のコネクションを確立する間に保持するための LDAPライブラリ呼び出しの秒単位のタイムアウトを指定する。これは実際、フェールオーバ の手順においてとても便利である。もしも、1つまたはそれ以上のLDAPサーバが接続不能に なった時、TCPのタイムアウトが満了になるのを待つ必要が無くなる。この機能は、LDAP ライブラリによってサポートされなければならない。
.sp
このパラメータは、存在するコネクションを使ってのLDAPサーバ上の操作に影響する
\m[blue]\fBldap timeout\fR\m[]とは異なり、最初の接続を確立しない。
.sp
既定値:
\fI\fIldap connection timeout\fR\fR\fI = \fR\fI2\fR\fI \fR
.RE

ldap debug level (G)
.\" ldap debug level
.PP
.RS 4
このパラメータは LDAP ライブラリコールのデバッグレベルをコントロールする。 OpenLDAP の場合、これはサーバで解釈されるビットフィールドと同じものであり、
\fBslapd.conf\fR(5)
のマニュアルにその解説がある。よく使われる有用な値として、
\fI1\fR
がある。これは関数コールをトレースする。
.sp
LDAP ライブラリからのデバッグ出力は、Samba のログ出力の中で頭に [LDAP] がついたものである。LDAP がログ出力をするレベルは
\fIldap debug threshold\fR
パラメータでコントロール できる。
.sp
既定値:
\fI\fIldap debug level\fR\fR\fI = \fR\fI0\fR\fI \fR
.sp
例:
\fI\fIldap debug level\fR\fR\fI = \fR\fI1\fR\fI \fR
.RE

ldap debug threshold (G)
.\" ldap debug threshold
.PP
.RS 4
このパラメータは、Samba のデバッグレベルの中で、LDAP ライブラリの デバッグ出力を Samba のログに出力するためのレベルをコントロールする。 詳細は
\fIldap debug level\fR
を参照のこと。
.sp
既定値:
\fI\fIldap debug threshold\fR\fR\fI = \fR\fI10\fR\fI \fR
.sp
例:
\fI\fIldap debug threshold\fR\fR\fI = \fR\fI5\fR\fI \fR
.RE

ldap delete dn (G)
.\" ldap delete dn
.PP
.RS 4
このパラメータは ldapsam の削除の操作時に、エントリを完全に 削除するか、Samba でしか使用されない属性だけを消すかの制御を行なう。
.sp
既定値:
\fI\fIldap delete dn\fR\fR\fI = \fR\fIno\fR\fI \fR
.RE

ldap deref (G)
.\" ldap deref
.PP
.RS 4
このオプションは、Sambaが、LDAPライブラリに、ある alias dereferencing方法を 使う事を指定するかどうかを制御する。この既定値は\fIauto\fR
であり、これは、ldapクライアントライブラリの既定値の設定がそのまま保持される 事を意味する。これ以外に取り得る値は、
\fInever\fR,
\fIfinding\fR,
\fIsearching\fR
と
\fIalways\fRである。 より詳細な情報は、使用しているLDAPのマニュアルで探してみること。
.sp
既定値:
\fI\fIldap deref\fR\fR\fI = \fR\fIauto\fR\fI \fR
.sp
例:
\fI\fIldap deref\fR\fR\fI = \fR\fIsearching\fR\fI \fR
.RE

ldap follow referral (G)
.\" ldap follow referral
.PP
.RS 4
このオプションは、LDAPデータベース中でエントリを検索する時に、 LDAP referralを利用するかどうかを制御する。取り得る値は、 referral機能の利用を有効にする場合は、\fIon\fR、 これを無効にする場合は、\fIoff\fR、 libldapの既定値の設定を使う場合は\fIauto\fRである。 libldapによるrefarral機能の仕様の有無は、ldap\&.conf(5)中に記述がある、 REFERRALSパラメータによって、/etc/openldap/ldap\&.confにおいて 設定される。
.sp
既定値:
\fI\fIldap follow referral\fR\fR\fI = \fR\fIauto\fR\fI \fR
.sp
例:
\fI\fIldap follow referral\fR\fR\fI = \fR\fIoff\fR\fI \fR
.RE

ldap group suffix (G)
.\" ldap group suffix
.PP
.RS 4
このパラメータは、グループが LDAP ディレクトリに加えられるときの サフィックスを指定する。もしこのパラメータが設定されていない場合、
\m[blue]\fBldap suffix\fR\m[]
の値が代わりに使用される。 サフィックスの文字列には、\m[blue]\fBldap suffix\fR\m[]
の文字列が付加されるため、相対 DN で指定を行なうこと。
.sp
既定値:
\fI\fIldap group suffix\fR\fR\fI = \fR\fI\fR\fI \fR
.sp
例:
\fI\fIldap group suffix\fR\fR\fI = \fR\fIou=Groups\fR\fI \fR
.RE

ldap idmap suffix (G)
.\" ldap idmap suffix
.PP
.RS 4
このパラメータは idmap mapping の情報の保存先のサフィックスを 指定する。このパラメータが設定されていない場合、
\m[blue]\fBldap suffix\fR\m[]
の値が代わりに使用される。 サフィックスの文字列には、\m[blue]\fBldap suffix\fR\m[]
の文字列が付加されるため、相対 DN で指定を行なうこと。
.sp
既定値:
\fI\fIldap idmap suffix\fR\fR\fI = \fR\fI\fR\fI \fR
.sp
例:
\fI\fIldap idmap suffix\fR\fR\fI = \fR\fIou=Idmap\fR\fI \fR
.RE

ldap machine suffix (G)
.\" ldap machine suffix
.PP
.RS 4
このパラメータはマシンアカウントが LDAP ツリーのどこに 追加されるかを指定する。もしこのパラメータが設定されていない場合、
\m[blue]\fBldap suffix\fR\m[]
の値が代わりに使用される。 サフィックスの文字列には、\m[blue]\fBldap suffix\fR\m[]
の文字列が付加されるため、相対 DN で指定を行なうこと。
.sp
既定値:
\fI\fIldap machine suffix\fR\fR\fI = \fR\fI\fR\fI \fR
.sp
例:
\fI\fIldap machine suffix\fR\fR\fI = \fR\fIou=Computers\fR\fI \fR
.RE

ldap page size (G)
.\" ldap page size
.PP
.RS 4
このパラメータは1ページあたりのエントリ数を指定する。
.sp
もしも、LDAPサーバがpaged resultsをサポートする場合、クライアントは すべての一覧の代わりに、検索結果(ページ)のサブセットを要求できる。 このパラメータはそのページの大きさを指定する。
.sp
既定値:
\fI\fIldap page size\fR\fR\fI = \fR\fI1024\fR\fI \fR
.sp
例:
\fI\fIldap page size\fR\fR\fI = \fR\fI512\fR\fI \fR
.RE

ldap passwd sync (G)
.\" ldap passwd sync
.PP
.RS 4
このオプションは、Samba によるパスワード変更時に、Samba が通常のアカウント (ワークステーション、サーバやドメインの信頼関係は含まない) の NT ハッシュや LM ハッシュと、LDAP のパスワード の同期をおこなうかを定義する。
.sp
\m[blue]\fBldap passwd sync\fR\m[]
には、 以下の 3 つのうちの 1 つを設定することができる:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fIYes\fR
= LDAP、NT、LM パスワードの更新を試み、pwdLastSet time を変更する。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fINo\fR
= NT、LM パスワードと pwdLastSet time を更新する。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fIOnly\fR
= LDAP パスワードのみを変更し、あとの処理は LDAP サーバに 委任する。
.sp
.RE
既定値:
\fI\fIldap passwd sync\fR\fR\fI = \fR\fIno\fR\fI \fR
.RE

ldap replication sleep (G)
.\" ldap replication sleep
.PP
.RS 4
Samba が読みとり専用の LDAP レプリカに対して、書き込みの要求を行なった際には、読み書き可能なマスタサーバと通信するようにリダイレクトを行なう。 その後マスタサーバは、変更を最初に通信した「ローカル」サーバに対して複製を行なうが、特に遅い回線越しの場合、これには数秒の時間を要する。 特にドメインへの参加といったクライアント側の処理については、「成功」した処理が LDAP のデータに即座に反映されないことで、 混乱する可能性がある。
.sp
このオプションにより、LDAP サーバに変更が反映されるのを待つために Samba が短い時間待機するようになる。 遅延の大きいネットワークの場合、LDAP の複製に要する時間をネットワークモニタで取得の上、それに応じて値を増減すればよいだろう。 データの複製が完了したかどうかについてのチェックが行なわれるわけではない点に注意すること。
.sp
この値はミリ秒単位で指定する。最大値は 5000 (5秒)である。
.sp
既定値:
\fI\fIldap replication sleep\fR\fR\fI = \fR\fI1000\fR\fI \fR
.RE

ldapsam:editposix (G)
.\" ldapsam:editposix
.PP
.RS 4
Editposix は ldapsam:trusted を利用してドメインコントローラーの管理をより 簡単にするためのオプションである。これを使えば posix ユーザーやグループの 追加や保守のためのカスタムスクリプトを設定しなくてもすむ。その代わりこの オプションでは、LDAP ツリー上のユーザやグループのエントリーを直接生成、 削除、編集できる。なお、このオプションを使うにあたっては、ユーザ／グループ の生成をする際に新しい uid/gid を割り当てるための winbindd が動いている 必要がある。その割り当て範囲はあらかじめ設定されていなければならない。
.sp
このオプションを使うためには、基本的な LDAP ツリーが提供され、また LDAP サフィックスが適切に設定されていなければならない。構築したてのサーバーでは、
net sam provision
コマンドで事前に デフォルトのユーザとグループ (Administrator, Guest, Domain Users, Domain Admins, Domain Guests) を作成できる。このコマンドを動かす際は LDAP サーバーと winbindd が動いており、かつ smb\&.conf の LDAP オプション 群が適切に構成されていなければならない。
\m[blue]\fBldapsam:trusted = yes\fR\m[]
オプションで 使われる典型的な LDAP 構成であれば、通常は
\m[blue]\fBldapsam:editposix = yes\fR\m[]
を使うのに 十分である。
.sp
設定例を以下に示す：
.sp
.if n \{\
.RS 4
.\}
.nf
	encrypt passwords = true
	passdb backend = ldapsam

	ldapsam:trusted=yes
	ldapsam:editposix=yes

	ldap admin dn = cn=admin,dc=samba,dc=org
	ldap delete dn = yes
	ldap group suffix = ou=groups
	ldap idmap suffix = ou=idmap
	ldap machine suffix = ou=computers
	ldap user suffix = ou=users
	ldap suffix = dc=samba,dc=org

	idmap backend = ldap:"ldap://localhost"

	idmap uid = 5000\-50000
	idmap gid = 5000\-50000
	
.fi
.if n \{\
.RE
.\}
.sp
この設定例では、ディレクトリのレイアウトが以下の LDIF で示すように なっていることを想定している：
.sp
.if n \{\
.RS 4
.\}
.nf
	dn: dc=samba,dc=org
	objectClass: top
	objectClass: dcObject
	objectClass: organization
	o: samba\&.org
	dc: samba

	dn: cn=admin,dc=samba,dc=org
	objectClass: simpleSecurityObject
	objectClass: organizationalRole
	cn: admin
	description: LDAP administrator
	userPassword: secret

	dn: ou=users,dc=samba,dc=org
	objectClass: top
	objectClass: organizationalUnit
	ou: users

	dn: ou=groups,dc=samba,dc=org
	objectClass: top
	objectClass: organizationalUnit
	ou: groups

	dn: ou=idmap,dc=samba,dc=org
	objectClass: top
	objectClass: organizationalUnit
	ou: idmap

	dn: ou=computers,dc=samba,dc=org
	objectClass: top
	objectClass: organizationalUnit
	ou: computers
	
.fi
.if n \{\
.RE
.\}
.sp
既定値:
\fI\fIldapsam:editposix\fR\fR\fI = \fR\fIno\fR\fI \fR
.RE

ldapsam:trusted (G)
.\" ldapsam:trusted
.PP
.RS 4
デフォルトで、ドメインコントローラとして動作し、認証に LDAP を用いている Samba は、ユーザやグループの情報を取得するために、UNIX の NSS サブシステムを必要とする。 UNIX がユーザ情報を /etc/passwd や /etc/group に格納する機構からすると、これは明らかに非効率である。 ユーザが把握する必要がある重要な項目の一つに、所属グループの一覧がある。 通常の UNIX のユーザ管理機構であれば、/etc/group ファイルの全体を参照するか、LDAP 環境においては NSS 機構を用いて同様のことを行なう。 UNIX には group のメンバを参照するのに最適化された関数が存在している。 しかし、残念なことに、ユーザやグループを扱うその他の関数については、こうした最適化は行なわれていない。
.sp
o Samba を大規模環境に適用させるため、\m[blue]\fBldapsam:trusted = yes\fR\m[]
オプションにより、Samba に関係するユーザおよびグループのデータベースは LDAP 標準の posixAccount/posixGroup 属性に格納されているとみなす。 さらに、Samba の AUXILIARY(補助) オブジェクトクラスについても、同じ LDAP オブジェクト中に POSIX データとして格納されているものとみなす。 これらの前提条件に適合する場合、
\m[blue]\fBldapsam:trusted = yes\fR\m[]
を設定することが可能となる。 この場合、Samba はユーザ情報の NSS に対する問い合わせを完全にバイパスする。 最適化された LDAP クエリにより、ログオンや管理作業が劇的に高速化される。 LDAP データベースのサイズにもよるが、共通的なクエリについては、100 倍以上の高速化が容易に達成される。
.sp
既定値:
\fI\fIldapsam:trusted\fR\fR\fI = \fR\fIno\fR\fI \fR
.RE

ldap ssl (G)
.\" ldap ssl
.PP
.RS 4
このオプションはSambaがLDAPサーバへの接続にSSLを利用するかを 指定する。以前のSambaのバージョンにおいてconfigureスクリプトの\-\-with\-sslで指定されたSambaの古いSSLサポートとは\fI関係ない。 \fR
.sp
LDAPサーバとの接続は可能な限り暗号化すべきである。これは、
\fIStart_tls\fRパラメータを指定する、 または\m[blue]\fBpassdb backend\fR\m[]におけるURLの指定に
\fIldaps://\fRを指定するか、のいずれか によって設定される。
.sp
\m[blue]\fBldap ssl\fR\m[]オプションは、２つのうちいずれかを 選択する。
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fIOff\fR
= ディレクトリに問い合わせする時SSLを使わない。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fIstart_tls\fR
= ディレクトリに問い合わせする際にLDAPv3 StartTLS拡張オプション (RFC2830)を利用する。
.sp
.RE
このパラメータは\fIrpc\fRメソッドのみ影響する。
\fIads\fRLDAPv3 StartTLS拡張オプション(RFC2830)で運用する場合、
\m[blue]\fBldap ssl = yes\fR\m[]と
\m[blue]\fBldap ssl ads = yes\fR\m[]と設定する。
\m[blue]\fBldap ssl ads\fR\m[]の詳細については
smb\&.conf(5)を参照。
.sp
既定値:
\fI\fIldap ssl\fR\fR\fI = \fR\fIstart tls\fR\fI \fR
.RE

ldap ssl ads (G)
.\" ldap ssl ads
.PP
.RS 4
このオプションはSambaが\fIads\fRメソッドを使用 するLDAPサーバへの接続にSSLを利用するかを指定する。 このパラメータにより、Rpcメソッドへは影響しない。なお、
\m[blue]\fBldap ssl\fR\m[]が\fIno\fRと設定 されているときには効果がないことに留意する。
.sp
詳細についてはsmb\&.conf(5)
の\m[blue]\fBldap ssl\fR\m[]を参照のこと。
.sp
既定値:
\fI\fIldap ssl ads\fR\fR\fI = \fR\fIno\fR\fI \fR
.RE

ldap suffix (G)
.\" ldap suffix
.PP
.RS 4
全体に適用される LDAP サフィックスを指定すると共に、sambaDomain オブジェクトの格納先を指定する。
.sp
ldap suffix は、\m[blue]\fBldap user suffix\fR\m[]、
\m[blue]\fBldap group suffix\fR\m[]、\m[blue]\fBldap machine suffix\fR\m[]、
\m[blue]\fBldap idmap suffix\fR\m[]
で指定された値に付加される。 これらのパラメータでは
\m[blue]\fBldap suffix\fR\m[]
からの相対 DN で指定が行なわれる。
.sp
既定値:
\fI\fIldap suffix\fR\fR\fI = \fR\fI\fR\fI \fR
.sp
例:
\fI\fIldap suffix\fR\fR\fI = \fR\fIdc=samba,dc=org\fR\fI \fR
.RE

ldap timeout (G)
.\" ldap timeout
.PP
.RS 4
このパラメータでは、SambaがLDAP接続においてタイムアウトさせるまでの秒数を指定する。
.sp
既定値:
\fI\fIldap timeout\fR\fR\fI = \fR\fI15\fR\fI \fR
.RE

ldap user suffix (G)
.\" ldap user suffix
.PP
.RS 4
このパラメータは、ユーザが LDAP ディレクトリに加えられるときの サフィックスを指定する。もしこのパラメータが設定されていない場合、
\m[blue]\fBldap suffix\fR\m[]
の値が代わりに使用される。 サフィックスの文字列には、\m[blue]\fBldap suffix\fR\m[]
の文字列が付加されるため、相対 DN で指定を行なうこと。
.sp
既定値:
\fI\fIldap user suffix\fR\fR\fI = \fR\fI\fR\fI \fR
.sp
例:
\fI\fIldap user suffix\fR\fR\fI = \fR\fIou=people\fR\fI \fR
.RE

level2 oplocks (S)
.\" level2 oplocks
.PP
.RS 4
このパラメータにより、 Samba が共有上で level2(読みとり専用) oplock をサポートするかどうかが制御される。
.sp
level2 の読みとり専用 oplock を利用することで、 Windows NT クライアントは、既に oplock が行われているファイルを別のクライアントがオープンしようとした際に (今までの排他的な oplock の場合に行われていた関連するすべての oplock を廃棄する処理の代わりに)、 読み書き可能な oplock から読みとり専用の oplock へのダウングレードを行うような oplock をファイルに対して行うことが可能になる。 これにより、ファイルをオープンしているクライアントのうち、level2 oplock をサポートしているものは、 ファイルの先読みのみを行うキャッシュ(このキャッシュは書き込みキャッシュやロックを行わない)を引続き行うため、 書き込みが行われないようなファイル(例えばアプリケーションのexeファイルなど)に対して多くのアクセスが行われる際のパフォーマンスが改善される。
.sp
read only の oplock を行っていたクライアントのいずれかがファイルに書き込みを行った時点で、 すべてのクライアントに対して、 oplock を「なし(none)」の状態に解除し、先読みキャッシュを破棄するように通知が行なわれる(応答待ちは行なわれない)。
.sp
このパラメータを有効にして、 共有されている実行ファイルのアクセスを高速化することを推奨する。
.sp
level2 oplock に関する詳細な議論については、CIFS の仕様を参照のこと。
.sp
現在、\m[blue]\fBkernel oplocks\fR\m[]
がサポートされていると、 level2 oplock は(このパラメータが\fByes\fRになっていても)、利用されない。 このパラメータを機能させるためには、
\m[blue]\fBoplocks\fR\m[]
パラメータが、共有上で
\fByes\fR
である必要があることに注意。
.sp
既定値:
\fI\fIlevel2 oplocks\fR\fR\fI = \fR\fIyes\fR\fI \fR
.RE

lm announce (G)
.\" lm announce
.PP
.RS 4
このパラメータにより、
\fBnmbd\fR(8)
が、 OS/2 クライアントのブラウズリスト上に Samba サーバを格納するために必要な lanman announce のブロードキャストを送出するかどうかが制御される。 このパラメータは3つの値、\fByes\fR、
\fBno\fR、\fBauto\fRをとる。 デフォルトは
\fBauto\fR
である。
\fBno\fR
の場合、Sambaは決してこのブロードキャストを送出しない。
\fByes\fR
の場合、Sambaは lanman announce のブロードキャストを
\m[blue]\fBlm interval\fR\m[]
によって設定された間隔で定期的に送出する。
\fBauto\fR
の場合、 Sambaはデフォルトでは lanman announce を送出しないが、受信を待機する。 そして、このブロードキャストを受信すると、
\m[blue]\fBlm interval\fR\m[]
によって設定された間隔で定期的なブロードキャストの送出を開始する。
.sp
既定値:
\fI\fIlm announce\fR\fR\fI = \fR\fIauto\fR\fI \fR
.sp
例:
\fI\fIlm announce\fR\fR\fI = \fR\fIyes\fR\fI \fR
.RE

lm interval (G)
.\" lm interval
.PP
.RS 4
Samba が OS/2 クライアントが必要とする lanman announce のブロードキャストを送出するように設定されている場合 (\m[blue]\fBlm announce\fR\m[]
パラメータを参照のこと)、 このパラメータにより送出間隔が秒単位で指定される。 これが 0 の場合、
\m[blue]\fBlm announce\fR\m[]
パラメータの設定に関わらず、 lanman announce は送出されない。
.sp
既定値:
\fI\fIlm interval\fR\fR\fI = \fR\fI60\fR\fI \fR
.sp
例:
\fI\fIlm interval\fR\fR\fI = \fR\fI120\fR\fI \fR
.RE

load printers (G)
.\" load printers
.PP
.RS 4
このパラメータは、printcapファイル中で定義されたすべてのプリンタをデフォルトでブラウジング可能とするかどうかを制御する真偽値パラメータである。 詳細は、
\m[blue]\fBprinters\fR\m[]
セクションを参照のこと。
.sp
既定値:
\fI\fIload printers\fR\fR\fI = \fR\fIyes\fR\fI \fR
.RE

local master (G)
.\" local master
.PP
.RS 4
このオプションにより、
\fBnmbd\fR(8)
がサブネットのローカルマスタブラウザになるかどうかが制御される。
\fBno\fR
の場合、
nmbd
はサブネットのローカルマスタブラウザになろうとせず、 すべてのブラウザ選定において、常に敗退することになる。 デフォルトで、このパラメータは
\fByes\fR
に設定されている。 このパラメータを
\fByes\fR
にすることは、 Samba がサブネットのローカルマスタブラウザと\fIなる\fRことを意味するものではなく、
nmbd
がローカルマスタブラウザの選定に\fI 参加する\fR
ということを意味するものに過ぎない。
.sp
このパラメータの値を
\fBno\fR
にすると、nmbd
は
\fI決して\fR
ローカルマスタブラウザにならなくなる。
.sp
既定値:
\fI\fIlocal master\fR\fR\fI = \fR\fIyes\fR\fI \fR
.RE

lock dir
.\" lock dir
.PP
.RS 4
このパラメータは右記のパラメータの別名である：lock directory\&.
.RE

lock directory (G)
.\" lock directory
.PP
.RS 4
このオプションでは、ロックファイルを置くためのディレクトリを 指定する。ロックファイルは
\m[blue]\fBmax connections\fR\m[]
オプションにより利用される。
.sp
注意：レジストリ設定の中では、このオプションは指定できない。
.sp
既定値:
\fI\fIlock directory\fR\fR\fI = \fR\fI${prefix}/var/locks\fR\fI \fR
.sp
例:
\fI\fIlock directory\fR\fR\fI = \fR\fI/var/run/samba/locks\fR\fI \fR
.RE

locking (S)
.\" locking
.PP
.RS 4
このパラメータは、 クライアントからのロック要求により、 サーバがロック処理を行うかどうかを制御する。
.sp
locking = noの場合、 すべてのロックおよびアンロック要求は成功したものとして扱われ、 すべてのロック状態の問い合わせは、ファイルがロック可能であると応答する。
.sp
locking = yesの場合、 サーバにより実際のロック処理が実行される。
.sp
このオプションを\fBno\fRにすることは、 いかなる場合でも推奨されないが、 ロックを必要としない\fIと思われる\fR
read only のファイルシステム(例えばCDROMドライブ)では、有用
\fIかも知れない\fR。
.sp
ロックが機能しない場合、 データが破壊される可能性もあるため、全体に対しても、 個々の共有に対しても、ロックを無効にする際には注意すること。このパラメータの設定は通常必要ない。
.sp
\fI既定値なし\fR
.RE

lock spin count (G)
.\" lock spin count
.PP
.RS 4
Samba 3\&.0\&.24 において、このパラメータは無効となった。 このパラメータで実現されていた機能は、現在
\m[blue]\fBlock spin time\fR\m[]
パラメータで制御されている。
.sp
既定値:
\fI\fIlock spin count\fR\fR\fI = \fR\fI0\fR\fI \fR
.RE

lock spin time (G)
.\" lock spin time
.PP
.RS 4
smbd が一度失敗したロックを再度獲得しようとする際の待ち時間を、 ミリ秒単位で指定する。 このパラメータの既定値は、 Samba 3\&.0\&.23 において 10 から 200 に変更された。 関連する
\m[blue]\fBlock spin count\fR\m[]
パラメータは Samba 3\&.0\&.24 以降では使用されない。 このパラメータの値を変更する必要はないであろう。
.sp
既定値:
\fI\fIlock spin time\fR\fR\fI = \fR\fI200\fR\fI \fR
.RE

log file (G)
.\" log file
.PP
.RS 4
このオプションにより、 Sambaのログファイル(デバッグファイル)の名称を変更することが可能である。
.sp
このオプションには、標準の変数置換が適用されるため、 個々のユーザやマシン毎にログを分割することが可能である。
.sp
\fI既定値なし\fR
.sp
例:
\fI\fIlog file\fR\fR\fI = \fR\fI/usr/local/samba/var/log\&.%m\fR\fI \fR
.RE

debuglevel
.\" debuglevel
.PP
.RS 4
このパラメータは右記のパラメータの別名である：log level\&.
.RE

log level (G)
.\" log level
.PP
.RS 4
このパラメータの値(整数値)により、
smb\&.conf
ファイル中でデバッグレベル(ログレベル)を設定することが可能になる。 このパラメータは Samba 2\&.2\&.x 系列と比べ強化されており、デバッグクラス毎にデバッグレベルを指定することが可能となっている。 これにより、システムの設定が非常に柔軟に行なえるようになる。以下の デバッグクラスが現在実装されている。
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fIall\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fItdb\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fIprintdrivers\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fIlanman\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fIsmb\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fIrpc_parse\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fIrpc_srv\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fIrpc_cli\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fIpassdb\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fIsam\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fIauth\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fIwinbind\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fIvfs\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fIidmap\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fIquota\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fIacls\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fIlocking\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fImsdfs\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fIdmapi\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fIregistry\fR
.sp
.RE
既定値:
\fI\fIlog level\fR\fR\fI = \fR\fI0\fR\fI \fR
.sp
例:
\fI\fIlog level\fR\fR\fI = \fR\fI3 passdb:5 auth:10 winbind:2\fR\fI \fR
.RE

logon drive (G)
.\" logon drive
.PP
.RS 4
このパラメータは、 ホームディレクトリとして接続されるパスを指定する (\m[blue]\fBlogon home\fR\m[]
も参照のこと)。 このパラメータは NT Workstation によってのみ利用される。
.sp
このパラメータは、Sambaがログオンサーバとして構成された場合のみ、 意味をもつことに注意。
.sp
訳注: Samba 3\&.0 系列で LDAP や TDB を認証データベースとして用いている場合、これらの値はユーザ毎に保持され、本パラメータは指定がなかった際の既定値を設定するものとなる。
.sp
既定値:
\fI\fIlogon drive\fR\fR\fI = \fR\fI\fR\fI \fR
.sp
例:
\fI\fIlogon drive\fR\fR\fI = \fR\fIh:\fR\fI \fR
.RE

logon home (G)
.\" logon home
.PP
.RS 4
このパラメータは、Windows 95/98/NT Workstation がSambaのPDCに対してログオンする際に用いられるホームディレクトリの位置を指定する。 これにより、例えば
.sp
C:\e>\fBNET USE H: /HOME\fR
.sp
のような形式でコマンドプロンプトから接続を行うことが可能となる。
.sp
このオプションには、通常の変数置換が適用されるため、 個々のユーザやマシン毎にログオンスクリプトを分けることが可能になっている。
.sp
このパラメータは、Windows 9x ワークステーションにおいて、 移動プロファイルをユーザのホームディレクトリのサブディレクトリに格納するために利用することが可能である。 この場合、以下のような設定を行う:
.sp
logon home = \e\e%N\e%U\eprofile
.sp
これにより、Samba はクライアントから NetUserGetInfo リクエストなどで情報を要求された場合に上記文字列を返却するが、その際変数置換が行なわれる。 Windows 9x のクライアントは、ユーザが
net use /home
コマンドを発行した際には、この情報の \e\eserver\eshare 部分だけを用いるが、 プロファイルを扱う場合は文字列全体を利用する。
.sp
Sambaの以前のバージョンでは、
\fIlogon home\fRではなく、\m[blue]\fBlogon path\fR\m[]
が用いられていた。 このため、net use /home
がうまく動作しなかったが、 プロファイルをホームディレクトリの外に置くことが可能であった。 現在の実装は正しい実装である。上記のような技を用いることで、 このパラメータをプロファイルの位置の設定にも利用することが可能になっている。
.sp
この機能を無効とするには、\m[blue]\fBlogon home = ""\fR\m[]
のように空の文字列を設定する。
.sp
このパラメータは、Sambaがログオンサーバとして構成された場合のみ、 意味をもつ。
.sp
訳注: Samba 3\&.0 系列で LDAP や TDB を認証データベースとして用いている場合、これらの値はユーザ毎に保持され、本パラメータは指定がなかった際の既定値を設定するものとなる。
.sp
既定値:
\fI\fIlogon home\fR\fR\fI = \fR\fI\e\e%N\e%U\fR\fI \fR
.sp
例:
\fI\fIlogon home\fR\fR\fI = \fR\fI\e\eremote_smb_server\e%U\fR\fI \fR
.RE

logon path (G)
.\" logon path
.PP
.RS 4
このパラメータにより、移動プロファイル(Desktop、NTuser\&.datなど)が格納されるディレクトリが指定される。 以前のマニュアルページとは矛盾するが、このパラメータはWindows 9xの移動プロファイルとは無関係である。 Windows 9x システムで移動プロファイルを利用する方法については、
\m[blue]\fBlogon home\fR\m[]
パラメータを参照のこと。
.sp
このオプションは、標準の変数置換が適用されるため、 個々のユーザやマシン毎にログオンスクリプトを分けることが可能である。 このパラメータにより、Windows NT クライアントによって読み出される「Application Data」(
デスクトップ、スタート メニュー、
ネットワークコンピュータ、
プログラムやその他のフォルダとそのコンテンツ)のディレクトリも設定される。
.sp
設定やディレクトリを Windows NT クライアント上にロードするため、共有やパスはユーザが読み込み可能にしなければならない。 また、Windows NT クライアントが NTuser\&.dat やその他のディレクトリを作成できるように、 ユーザが最初にログインする時には共有を書き込み可能にしなければならない。 必要があれば、ディレクトリと中身は読み出し専用にすることができる。 ただし、NTuser\&.dat ファイルを読み出し専用にすることは推奨できない。 NTuser\&.dat を NTuser\&.man に名前を変更することで期待される動作(\fI固定\fRプロファイル(MANdatory profile))を実現できる。
.sp
Windows クライアントは、ユーザがログインしていなくても [homes] 共有への接続を保持することがある。 そのため、logon path に [homes] 共有への参照を含めないようにしなくてはならない (たとえば、このパラメータを\e\e%N\ehomes\eprofile_path のように設定すると問題が発生することがある)。
.sp
このオプションには、標準の変数置換が適用されるため、 個々のユーザやマシン毎にログオンスクリプトを分けることが可能になる。
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBWarning\fR
.ps -1
.br
この値をクォーテーションで囲まないこと。これを
\(lq\e\e%N\eprofile\e%U\(rq
のようにすると、 プロファイル機構に問題が発生する。 tdbsam もしくは ldapsam が passdb backend として用いられている環境では、 ユーザアカウントが作成された時点で、このパラメータで設定されている内容が passdb backend に書き込まれるが、 その後 smb\&.conf ファイルにあるパラメータの値は、上書きされることがある。 passdb backend への書き込みに際して発生したエラーについては、 適切なツール(コマンドラインツールの pdbedit などのツール)を用いて編集する必要がある。
.sp .5v
.RE
このパラメータは、Sambaがログオンサーバとして構成された場合のみ、 意味をもつことに注意。
.sp
このパラメータの値を空文字列に設定することで、移動プロファイルを無効にすることができる。
\m[blue]\fBlogon path = ""\fR\m[]
のようにすれば良い。 smb\&.conf ファイルのデフォルトの値を空文字列にしても、 passdb backend 中のユーザアカウントの設定で何らかの値を指定した場合は、 空文字列の設定を上書きすることになるので注意すること。 移動プロファイルを完全に無効とするには、各ユーザアカウントの設定が空文字列になっている必要がある。
.sp
設定例:
.sp
.if n \{\
.RS 4
.\}
.nf
logon path = \e\ePROFILESERVER\ePROFILE\e%U
.fi
.if n \{\
.RE
.\}
.sp
既定値:
\fI\fIlogon path\fR\fR\fI = \fR\fI\e\e%N\e%U\eprofile\fR\fI \fR
.RE

logon script (G)
.\" logon script
.PP
.RS 4
このパラメータは、 ユーザのログインが成功した際にダウンロードして実行される、 バッチファイル (\&.bat) や Windows NT のコマンドファイル (\&.cmd) を指定する。 ファイルは DOS 形式の行末(改行コード) CR/LF でなければならない。 ファイルの作成には DOS 形式のエディタを使うことが推奨される。
.sp
スクリプトは
\fI[netlogon]\fR
サービスからの相対パスで記述する必要がある。 [netlogon] サービスの
\m[blue]\fBpath\fR\m[]
が
/usr/local/samba/netlogon
で、\m[blue]\fBlogon script = STARTUP\&.BAT\fR\m[]
の場合、 実際にファイルがダウンロードされるパスは以下のものになる:
.sp
.if n \{\
.RS 4
.\}
.nf
	/usr/local/samba/netlogon/STARTUP\&.BAT
.fi
.if n \{\
.RE
.\}
.sp
バッチファイルの中身は自由に記述することが可能である。 推奨されるコマンドとしては、 各マシンを同じタイムサーバの時刻と同期するようにさせる
NET TIME \e\eSERVER /SET /YES
がある。 ほかには、共通に利用されるユーティリティ用に、例えば
NET USE U: \e\eSERVER\eUTILS
という設定を行なったり、サンプルとして
.sp
.if n \{\
.RS 4
.\}
.nf
\fBNET USE Q: \e\eSERVER\eISO9001_QA\fR
.fi
.if n \{\
.RE
.\}
.sp
といった設定を行ったりすることが挙げられる。
.sp
[netlogon] 共有に対しては、 バッチファイルが改変されてセキュリティが侵害されてしまわないように、 書き込みアクセスを許可しないか、 安全な環境下でのみバッチファイルへの書き込み権限をユーザに与えるようにすること。
.sp
このオプションには、標準の変数置換が適用されるため、 個々のユーザやマシン毎にログオンスクリプトを分けることが可能になる。
.sp
このパラメータは、Sambaがログオンサーバとして構成された場合のみ、 意味をもつ。
.sp
既定値:
\fI\fIlogon script\fR\fR\fI = \fR\fI\fR\fI \fR
.sp
例:
\fI\fIlogon script\fR\fR\fI = \fR\fIscripts\e%U\&.bat\fR\fI \fR
.RE

lppause command (S)
.\" lppause command
.PP
.RS 4
このパラメータには、 指定した印刷ジョブの印刷やスプーリングを停止させるためにサーバホスト上で実行されるコマンドを指定する。
.sp
このコマンドは、プリンタ名と停止させる印刷ジョブの番号を引数にとり、印刷ジョブを一時停止させるプログラムやスクリプトでなければならない。 これを実装する方法の一つは、非常に低い優先権を持つジョブはプリンタに送られないというジョブの優先権の仕様を利用するものである。
.sp
\fI%p\fR
変数は、 プリンタ名に置換される。
\fI%j\fR
はジョブ番号(整数)に置換される。 HPUX の場合(\fIprinting=hpux\fRを参照のこと)、
\fI\-p%p\fR
オプションを lpq コマンドに付加することで、正しいステータスが表示される。 たとえば、ジョブの優先権が設定されたフェンス優先権より低いならジョブは停止状態であるが、 優先権が等しいかより高いならスプール状態または印刷中の状態となる。
.sp
サーバの PATH 環境変数が利用できないかもしれないことを考慮して、 lppause command を絶対パスで記述する癖をつけておくと良い。
.sp
既定値:
\fI\fIlppause command\fR\fR\fI = \fR\fI # 現在のところ既定値は設定されていない。 ただし、\fIprinting\fR パラメータの値が ただし、\m[blue]\fBprinting\fR\m[] パラメータの値が \fBSYSV\fR の場合は lp \-i %p\-%j \-H hold、 \fBSOFTQ\fR の場合は qstat \-s \-j%j \-h が既定値となる。\fR\fI \fR
.sp
例:
\fI\fIlppause command\fR\fR\fI = \fR\fI/usr/bin/lpalt %p\-%j \-p0\fR\fI \fR
.RE

lpq cache time (G)
.\" lpq cache time
.PP
.RS 4
このパラメータは、
lpq
コマンドが頻繁に呼び出されるのを防ぐため、lpr の情報(出力)をキャッシュする期間を制御する。 システムが使用する
lpq
コマンドの種別毎にキャッシュが行なわれる。そのため、ユーザ毎に異なった
lpq
コマンドを使用する場合、 キャッシュ情報は共有されない。
.sp
キャッシュファイルは
/tmp/lpq\&.xxxx
に保存される。 xxxx は使用している
lpq
コマンドのハッシュ値となる。
.sp
デフォルトは 30 秒であるため、キャッシュされたデータが30秒以内の場合は、 前回行なわれた同一のlpqの実行結果のキャッシュが用いられる。
lpq
コマンドのレスポンスが非常に遅い場合は、この値を大きくすることを推奨する。
.sp
値を 0 にした場合、キャッシュは完全に無効となる。
.sp
既定値:
\fI\fIlpq cache time\fR\fR\fI = \fR\fI30\fR\fI \fR
.sp
例:
\fI\fIlpq cache time\fR\fR\fI = \fR\fI10\fR\fI \fR
.RE

lpq command (S)
.\" lpq command
.PP
.RS 4
このパラメータには、
lpq形式のプリンタ状態情報を得るため、 サーバ上で実行するコマンドを指定する。
.sp
このコマンドは、プリンタ名のみを引数としてとり 、 プリンタ状態情報を出力するプログラムやスクリプトでなければならない。
.sp
現在、BSD、AIX、LPRNG、PLP、SYSV、HPUX、QNX、CUPS、SOFTQ という9つの印刷形式がサポートされており、 これにより大部分の UNIX システムがサポートされる。
\fIprinting =\fR
オプションにより、利用する形式を指定することも可能である。
.sp
クライアントによっては(特にWindows for Workgroups)、 状態情報を要求しているプリンタの接続番号(connection number)を正しく送らないことがある。 この場合、サーバはクライアントが接続している最初の印刷サービスの状況を報告する。この動作は、 与えられた接続番号が不正な場合にのみ行なわれる。
.sp
\fI%p\fR
変数は、 プリンタ名に置換される。この変数が指定されなかった場合、プリンタ名はコマンドの最後に付加される。
.sp
サーバの
\fB$PATH\fR
環境変数が利用できないかもしれないことを考慮して、
\fIlpq command\fR
を絶対パスで記述する癖をつけておくと良い。 CUPS ライブラリを付加してコンパイルした場合は、 smbd が印刷キューのリストを取得するためのライブラリコールを行なうため、
\fIlpq command\fR
は必要ない。
.sp
既定値:
\fI\fIlpq command\fR\fR\fI = \fR\fI\fR\fI \fR
.sp
例:
\fI\fIlpq command\fR\fR\fI = \fR\fI/usr/bin/lpq \-P%p\fR\fI \fR
.RE

lpresume command (S)
.\" lpresume command
.PP
.RS 4
このパラメータには、 特定の印刷ジョブの印刷やスプールを再開したり続行するためにサーバ上で実行するコマンドを指定する。
.sp
このコマンドは、 プリンタ名とジョブ番号を受け取るとその印刷ジョブを再開するプログラムやスクリプトでなければならない。
\m[blue]\fBlppause command\fR\m[]
パラメータも参照のこと。
.sp
\fI%p\fR
変数は、 プリンタ名に置換される。
\fI%j\fR
はジョブ番号(整数)に置換される。
.sp
サーバの PATH 環境変数が利用できないかもしれないことを考慮して、
\fIlpresume command\fR
を絶対パスで記述することを推奨する。
.sp
\m[blue]\fBprinting\fR\m[]
パラメータも参照のこと。
.sp
既定値: 現在のところ、この設定の既定値は設定されていない。 ただし、\fIprinting\fR
パラメータの値が
\fBSYSV\fR
の場合、 既定値は以下の通り:
.sp
lp \-i %p\-%j \-H resume
.sp
また、\fIprinting\fR
パラメータの値が
\fBSOFTQ\fR
の場合、デフォルト値は以下の通り:
.sp
qstat \-s \-j%j \-r
.sp
既定値:
\fI\fIlpresume command\fR\fR\fI = \fR\fIlpresume command = /usr/bin/lpalt %p\-%j \-p2\fR\fI \fR
.RE

lprm command (S)
.\" lprm command
.PP
.RS 4
このパラメータには、 印刷ジョブを削除するためにサーバ上で実行するコマンドを指定する。
.sp
このコマンドは、 プリンタ名とジョブ番号を受け取るとその印刷ジョブを削除するプログラムやスクリプトでなければならない。
.sp
\fI%p\fR
変数は、 プリンタ名に置換される。
\fI%j\fR
はジョブ番号(整数)に置換される。
.sp
サーバの PATH 環境変数が利用できないかもしれないことを考慮して、
\fIlprm command\fR
を絶対パスで記述することを推奨する。
.sp
以下に設定例を示す。
.sp
.if n \{\
.RS 4
.\}
.nf
lprm command = /usr/bin/lprm \-P%p %j

あるいは

lprm command = /usr/bin/cancel %p\-%j
.fi
.if n \{\
.RE
.\}
.sp
既定値:
\fI\fIlprm command\fR\fR\fI = \fR\fI printing パラメータの設定に依存する \fR\fI \fR
.RE

machine password timeout (G)
.\" machine password timeout
.PP
.RS 4
Sambaサーバが NT ドメインのメンバである場合 (\m[blue]\fBsecurity = domain\fR\m[]パラメータを参照のこと) 、 実行中の smbd プロセスは、private/secrets\&.tdb
という TDB ファイルに格納されたコンピュータアカウントのパスワードを定期的に変更しようとする。 このパラメータは、パスワードの変更を行なう間隔を秒単位で設定する。デフォルトは、NT ドメインのメンバサーバと同じく 1 週間 (秒単位で表される) である。
.sp

\fBsmbpasswd\fR(8)
および
\m[blue]\fBsecurity = domain\fR\m[]
パラメータも参照のこと。
.sp
既定値:
\fI\fImachine password timeout\fR\fR\fI = \fR\fI604800\fR\fI \fR
.RE

magic output (S)
.\" magic output
.PP
.RS 4
このパラメータは、Magic スクリプト(下記の
\m[blue]\fBmagic script\fR\m[]
パラメータを参照) によって生成される出力結果が書き込まれるファイルの名前を指定する。
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBWarning\fR
.ps -1
.br
複数のクライアントが同じ
\fIMagic スクリプト\fR
を同じディレクトリで利用する場合、 出力ファイルの内容は不定になる。
.sp .5v
.RE
既定値:
\fI\fImagic output\fR\fR\fI = \fR\fI<magic script name>\&.out\fR\fI \fR
.sp
例:
\fI\fImagic output\fR\fR\fI = \fR\fImyfile\&.txt\fR\fI \fR
.RE

magic script (S)
.\" magic script
.PP
.RS 4
このパラメータで指定したファイルは、 ファイルをオープン後クローズした時点でサーバにより実行される。 このパラメータにより、UNIX のスクリプトを Samba ホストに送って、 接続しているユーザの権限で実行する機能が提供される。
.sp
このようにして実行されたスクリプトは、 ユーザに削除する権限があり、ファイルが削除可能であれば、 実行完了と同時に削除される。
.sp
スクリプトが生成した出力は、
\m[blue]\fBmagic output\fR\m[]
パラメータ(前述)で指定されたファイルに書き込まれる。
.sp
シェルによっては、改行コードとして CR ではなく CR/LF を利用しているスクリプトをうまく実行できないことに注意。 Magic スクリプトはホスト上で\fIそのまま\fR実行されるため、ホストやシェルによっては、 DOS の改行コードを修正しておく必要があるかも知れない。
.sp
Magic スクリプトは
\fI 実験用 \fR
のパラメータであり、このパラメータを安全だと考えるべきでは
\fIない\fR。
.sp
既定値:
\fI\fImagic script\fR\fR\fI = \fR\fI\fR\fI \fR
.sp
例:
\fI\fImagic script\fR\fR\fI = \fR\fIuser\&.csh\fR\fI \fR
.RE

mangled names (S)
.\" mangled names
.PP
.RS 4
このパラメータは、 UNIX 上の DOS非互換のファイル名をDOS互換の名前(「短縮名」)に短縮してアクセス可能にするか、 単純に無視するかどうかを制御する。
.sp
短縮処理がどのように行なわれているかについての詳細は、
\m[blue]\fBname mangling\fR\m[]
セクションを参照のこと。
.sp
短縮が行なわれる場合の手法は以下の通りである(訳注:以下は hash アルゴリズムの場合):
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
ファイル名の先頭から一番右にあるドットの前までの英数5文字は、 大文字に変換された上で、 短縮名の先頭5文字となる。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
チルダ「~」が短縮名に付加される。 更に元々のファイル名のベース部分(ファイル名から拡張子部分を除いたもの)から生成された一意な2文字が付加される。 拡張子にあたる部分は、大文字を含んでいるか、 3文字以上の場合のみ、ハッシュの計算に含まれる。
.sp
「~」の利用を避けたい場合は、
\m[blue]\fBmangling char\fR\m[]
オプションにより、別の文字を指定することも可能である。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
UNIX 上のファイル名がドットから始まる場合、 そのファイルは DOS の隠しファイルとして扱われる。 この場合の短縮名は、ファイル名の先頭のドットを取り除き、 実際の拡張子に関わらず、拡張子「___(「_」3文字」を付加したものから、一般のファイル名と同様にして生成する。
.sp
.RE
2桁のハッシュ値は、大文字の英数文字になる。
.sp
このアルゴリズムは、 ディレクトリ内のファイルに先頭の英数 5 文字が同一のファイル名が存在する時のみ名前の衝突が発生するが、 実際に衝突する確率は、1/1300 である。
.sp
名前の短縮処理により、(この処理が有効な限り) Windows や DOS から、UNIX 側の長いファイル名を保持したまま UNIX ディレクトリ間のファイルのコピーができる。 Windows や DOS 側から UNIX 側のファイル名の拡張子を変更しても、ベース名は保持される。 なお、セッションが異なっても短縮名は変化しない。
.sp
既定値:
\fI\fImangled names\fR\fR\fI = \fR\fIyes\fR\fI \fR
.RE

mangle prefix (G)
.\" mangle prefix
.PP
.RS 4
短縮名を生成する際に、元々の名前に付加するプレフィックスの長さを指定する。 大きな値を指定すると、 ハッシュアルゴリズムの効果が低下し、 名前の衝突の可能性が高まる。 最小値は 1 であり、最大は 6 である。
.sp
mangle prefix は mangling method が hash2 の時のみ有効である。
.sp
既定値:
\fI\fImangle prefix\fR\fR\fI = \fR\fI1\fR\fI \fR
.sp
例:
\fI\fImangle prefix\fR\fR\fI = \fR\fI4\fR\fI \fR
.RE

mangling char (S)
.\" mangling char
.PP
.RS 4
このパラメータは
\m[blue]\fBname mangling\fR\m[]
において、
\fImagic\fR
キャラクタとして利用される文字を指定する。デフォルトは「~」であるが、 ソフトウェアによっては問題が発生してしまうかも知れない。 このオプションにより、任意の文字を指定することが可能になる。 このパラメータは mangling method が hash の時のみ有効である。
.sp
既定値:
\fI\fImangling char\fR\fR\fI = \fR\fI~\fR\fI \fR
.sp
例:
\fI\fImangling char\fR\fR\fI = \fR\fI^\fR\fI \fR
.RE

mangling method (G)
.\" mangling method
.PP
.RS 4
短縮名を生成する際に利用するアルゴリズムを指定する。 「hash」と「hash2」という2つの値を指定することが可能である。 「hash」は Samba 2\&.2\&.x での既定値であり、長年 Samba で利用されてきた方式である。 「hash2」は新しい方式であり、現在の既定値である。これは、 (名前の重複の発生が低減される点で)より優れたアルゴリズムといえる。 Win32 アプリケーションの多くが短縮名を記憶しているため、 新しいアルゴリズムへの変更は、 こうしたアプリケーションの再インストールが必要になる可能性があるという点で、安易に行なうべきではない。
.sp
既定値:
\fI\fImangling method\fR\fR\fI = \fR\fIhash2\fR\fI \fR
.sp
例:
\fI\fImangling method\fR\fR\fI = \fR\fIhash\fR\fI \fR
.RE

map acl inherit (S)
.\" map acl inherit
.PP
.RS 4
この真偽値パラメータにより、
\fBsmbd\fR(8)
は Windows の ACL に格納される「inherit」および「protected」の ACE フラグを user\&.SAMBA_PAI (訳注: Samba_Posix_Acl_Inheritance) と呼ばれる拡張属性にマッピングすることが可能となる。 このパラメータは Samba が拡張属性をサポートしているプラットフォーム(Linux および IRIX など)で実行されており、Windows 2000 の ACL エディタから Samba 側の POSIX ACL とのマッピングを実現するコードで継承を適切に設定できる場合のみ、有効となる。
.sp
既定値:
\fI\fImap acl inherit\fR\fR\fI = \fR\fIno\fR\fI \fR
.RE

map archive (S)
.\" map archive
.PP
.RS 4
このパラメータは、DOSのアーカイブ属性を UNIXの所有者(owner)実行権ビットに割り当てるかどうかを決定する。 DOSのアーカイブ属性は、バックアップを行なった後でファイルが修正されると設定される。 このオプションを変更する契機の一つは、Samba マシン上のファイルを修正した際に、UNIX 上で実行可能になってしまわないようにしたい場合であろう。 これは、共有のソースコードやドキュメントなどに関して、非常に悩ましい事象である。
.sp
このパラメータを利用する場合は、 所有者の実行権ビットがマスクされないように(100というアクセス権が含まれるように)、
\m[blue]\fBcreate mask\fR\m[]
パラメータを設定することが必要となることに注意。 詳細は、\m[blue]\fBcreate mask\fR\m[]
パラメータを参照のこと。
.sp
既定値:
\fI\fImap archive\fR\fR\fI = \fR\fIyes\fR\fI \fR
.RE

map hidden (S)
.\" map hidden
.PP
.RS 4
このパラメータは、DOSの隠しファイル属性を UNIXの全員(world)の実行権ビットに割り当てるかどうかを決定する。
.sp
このパラメータを利用する場合は、 全体の実行権ビットがマスクされないように(001というアクセス権を含むように)、
\m[blue]\fBcreate mask\fR\m[]
パラメータを設定することが必要となることに注意。 詳細は、\m[blue]\fBcreate mask\fR\m[]
パラメータを参照のこと。
.sp
\fI既定値なし\fR
.RE

map readonly (S)
.\" map readonly
.PP
.RS 4
このパラメータは、DOS の読み取り専用属性を UNIX のファイルシステムに対応付ける方法を制御する。
.sp
このパラメータには 3通りの値を指定することが可能である。これにより、
\m[blue]\fBstore dos attributes\fR\m[]
が
\fBNo\fR、もしくは拡張属性が存在しない環境において、
\fBsmbd\fR(8)
がファイルの読み取り専用属性を表示する方法を制御することが可能である。
\m[blue]\fBstore dos attributes\fR\m[]
が
\fByes\fR
の場合、このパラメータは\fI無視される\fR。 これは Samba 3\&.0\&.21 で新設されたパラメータである。
.sp
3 通りの値を以下に示す:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBYes\fR
\- 読み取り専用の DOS 属性は、UNIX のパーミッションビットにおけるユーザ、すなわち所有者の書き込み権ビットに反転した形で対応付けられる。 所有者の書き込み権ビットが設定されていない場合、ファイルには読み取り専用属性が付加されているものとみなされる。もしも、読み取り専用のDOS属性が設定されてた場合、 グループとその他の書き込み権ビットはゼロに設定される。ACL中の書き込みビットはSambaによって無視される。もしも、読み取り専用のDOS属性が設定されていなかった場合、Sambaは単にそれの所有者の書き込みビットを設定する。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBPermissions\fR
\- 読み取り専用の DOS 属性は、接続しているユーザに対する有効なパーミッションに対応付けられる。 これは、\fBsmbd\fR(8)
が UNIX のパーミッションおよび (存在していれば) POSIX の ACL を読みとることにより確認される。 接続しているユーザにファイルを編集するパーミッションがない場合、ファイルには読み取り専用属性が付加されているものとみなされる。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\fBNo\fR
\- 読み取り専用 DOS 属性は、パーミッションに対応付けられず、
\m[blue]\fBstore dos attributes\fR\m[]
パラメータによってのみ付与される。 これは、マウント中の CD を共有する場合にも便利かも知れない。
.sp
.RE
既定値:
\fI\fImap readonly\fR\fR\fI = \fR\fIyes\fR\fI \fR
.RE

map system (S)
.\" map system
.PP
.RS 4
このパラメータは、DOSのシステムファイル属性を UNIXのグループ実行権ビットに割り当てるかどうかを決定する。
.sp
このパラメータを利用する場合は、 グループ実行権ビットがマスクされないように(010というアクセス権を含むように)、
\m[blue]\fBcreate mask\fR\m[]
パラメータを設定することが必要となることに注意。 詳細は、\m[blue]\fBcreate mask\fR\m[]
パラメータを参照のこと。
.sp
既定値:
\fI\fImap system\fR\fR\fI = \fR\fIno\fR\fI \fR
.RE

map to guest (G)
.\" map to guest
.PP
.RS 4
このパラメータは、\m[blue]\fBSECURITY = security\fR\m[]
モードが
\fIsecurity = share\fR
以外の時、すなわち
\fBuser\fR、\fBserver\fR、
\fBdomain\fR
のときにのみ有用である。
.sp
このパラメータの値には、
\fBsmbd\fR(8)
が 何らかの方法で有効なUNIXユーザとして認証されなかったユーザのログイン要求をどのように扱うかを指定するための 4 つの値のいずれかを設定することが可能である。
.sp
4 つの値を以下に示す:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBNever\fR
\- 不正なパスワードによるユーザのログイン要求を拒否する。 これがデフォルトである。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBBad User\fR
\- 存在するユーザに対する不正なパスワードによるログイン要求は拒否する。 指定されたユーザが存在しなかった場合はゲストログインとして扱い、
\m[blue]\fBguest account\fR\m[]
で指定されたアカウントにマッピングする。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBBad Password\fR
\- 不正なパスワードによるユーザのログイン要求は、ゲストログインとして扱い、
\m[blue]\fBguest account\fR\m[]
で指定されたアカウントにマッピングする。 この場合、パスワードをタイプミスすると、 なにも言われずに"guest"としてログインしてしまう。 パスワードをタイプミスしたというメッセージがないため、 アクセス可能である筈のファイルにできないが理由がわからないという問題が発生する。
\fImap to guest\fR
パラメータをこの設定にすると、 ヘルプディスクサービスからは
\fI憎まれる\fR
ことになるだろう:\-)。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBBad Uid\fR
\- これは、Sambaがドメインモードのセキュリティ (security = {domain|ads}) で構成されている環境でのみ意味を持つ。 この環境において、認証が成功したにも関わらず UNIX側のユーザアカウントが存在しない (smbdが作成することもできない) 場合に、定義されたゲストアカウントへのマッピングを行う。これは Samba 2\&.2 系列におけるデフォルトの挙動である。 メンバサーバで winbindd が実行されている場合、nss_winbind ライブラリが Windows ドメインのユーザやグループを NSS インタフェース経由で Samba を実行する OS に対して提供するため、このパラメータが必要となる事態は発生し得ない。
.sp
.RE
\fIsecurity\fR
モードが share 以外の場合、"ゲスト"共有サービスを設定する場合は、 このパラメータが必須である。これは、サーバがクライアントの認証に成功しない限り、 要求されるリソースの名前がサーバに送られることは\fI決して\fRなく、 サーバが"ゲスト"共有に対する認証の成否を、 適切な時点(共有への接続時)に行なうことができないためである。
\fIsecurity = server\fRの場合、 ユーザーログオンに失敗したときに、ユーザー名を間違えてもパスワードを 間違えてもサーバーから同じエラーが返されるため、 ユーザー名の間違いなのか、パスワードの間違いなのかの情報が得られないので、 このパラメーターにこのモードを設定する意味が無い。
.sp
以前の Samba のリリースに親しんでいる人のため、 このパラメータは、local\&.h 中の
\fBGUEST_SESSSETUP \fR
というコンパイル設定に対応づけられている。
.sp
既定値:
\fI\fImap to guest\fR\fR\fI = \fR\fINever\fR\fI \fR
.sp
例:
\fI\fImap to guest\fR\fR\fI = \fR\fIBad User\fR\fI \fR
.RE

map untrusted to domain (G)
.\" map untrusted to domain
.PP
.RS 4
クライアントが smbd に接続する際に BOGUS\euser のような信頼されない ドメイン名を使っている場合、smbd は BOGUS ドメインを自身の SAM 名に 置き換えてからそのユーザを認証する。 smbd が PDC として動作している場合、置き換えられた名前は DOMAIN\euser となる。 smbd がドメインのメンバサーバもしくはスタンドアロンサーバとして動作している場合、置き換えられた名前は WORKSTATION\euser となる。
.sp
Samba 3\&.4\&.0 より前のバージョンでは、smbd がドメインのメンバサーバとして 動作している場合、BOGUS の部分は smbd がメンバとして所属 しているプライマリドメイン名に置き換えられていた。この場合、 認証処理は DOMAIN\euser の認証情報を使って DC に委譲される。
.sp
このパラメータが
\fByes\fR
にセットされている場合、 smbd は信頼されないドメイン名をプライマリドメイン名にマッピングするという 従来の動作を行う。smbd がドメインのメンバサーバとして動作していない場合、 このパラメータは意味を持たない。
.sp
既定値:
\fI\fImap untrusted to domain\fR\fR\fI = \fR\fIno\fR\fI \fR
.RE

max connections (S)
.\" max connections
.PP
.RS 4
このオプションにより、サービスへの同時コネクション数が制限される。
\fImax connections\fR
が 0 より大きい場合、すでにオープンされているサービスに対するコネクション数がこの数に達していると、それ以上の接続が拒否される。値が 0 の場合は、コネクション数は無制限であることを意味する。
.sp
レコードロックファイルが、この機能の実装に利用されている。ロッ クファイルは、
\m[blue]\fBlock directory\fR\m[]
オプションで指定されたディレクトリに保存される。
.sp
既定値:
\fI\fImax connections\fR\fR\fI = \fR\fI0\fR\fI \fR
.sp
例:
\fI\fImax connections\fR\fR\fI = \fR\fI10\fR\fI \fR
.RE

max disk size (G)
.\" max disk size
.PP
.RS 4
このオプションにより、見かけ上のディスクの容量の上限を設定することができる。このオプションを 100 に設定すると、すべての共有は 100MB 以上の容量に見えることはない。
.sp
このオプションは、ディスクに置くことができるデータの容量を制限するものではないことに注意。前述した設定を行なった場合でも、 100MB を越える容量をディスクに書き込むことは可能であるが、クライアントがディスクの空き容量や総ディスクサイズを求めると、結果は
\fImax disk size\fR
で指定された量に制限されることになる。
.sp
このオプションは、主として非常に大きいディスク、特に 1GB を越えるサイズをもつディスクを扱えないソフトウェアのバグを回避する際に有用である。
.sp
\fImax disk size\fR
パラメータが 0 の場合は、無制限を意味する。
.sp
既定値:
\fI\fImax disk size\fR\fR\fI = \fR\fI0\fR\fI \fR
.sp
例:
\fI\fImax disk size\fR\fR\fI = \fR\fI1000\fR\fI \fR
.RE

max log size (G)
.\" max log size
.PP
.RS 4
このオプション(キロバイト単位の数値)は、 ログファイルの最大サイズを指定する。 Samba は定期的にログファイルのサイズを調べ、 最大値を超過した場合は、ファイルの拡張子に
\&.old
を付加した名前にファイル名を変更する。
.sp
サイズ 0 は無制限を意味する。
.sp
既定値:
\fI\fImax log size\fR\fR\fI = \fR\fI5000\fR\fI \fR
.sp
例:
\fI\fImax log size\fR\fR\fI = \fR\fI1000\fR\fI \fR
.RE

max mux (G)
.\" max mux
.PP
.RS 4
このオプションは、 Samba がクライアントに通知する同時に実行可能な SMB オペレーションの最大数を制御する。 このパラメータを設定する必要はないであろう。
.sp
既定値:
\fI\fImax mux\fR\fR\fI = \fR\fI50\fR\fI \fR
.RE

max open files (G)
.\" max open files
.PP
.RS 4
このパラメータにより、ある
\fBsmbd\fR(8)
プロセスが1つのクライアントに対して同時に 開くことのできるファイル数の上限値が設定される。 Samba は、オープンされていない ファイルごとにわずか 1 ビットしか消費しないので、この値はとても大きな値 (16404) に設定することができる。16404より小さな値に設定すると、Sambaはその旨を 警告し、Windows 7が、有効である、オープンしているファイルハンドルの数に依存 するので、最低値の16404に戻す。
.sp
オープンするファイルの数の制限は、通常このパラメータではなく UNIX における プロセス毎のファイルディスクリプタの上限値によって制限される。そのため、 この値を変更する必要はないであろう。
.sp
既定値:
\fI\fImax open files\fR\fR\fI = \fR\fI16404\fR\fI \fR
.RE

max print jobs (S)
.\" max print jobs
.PP
.RS 4
このパラメータにより、 ある時点で Samba の印刷キューに蓄積可能なジョブの最大数が設定される。 設定数を超過すると、
\fBsmbd\fR(8)
は、 クライアントに「空き領域がない」というエラーを返却する。
.sp
既定値:
\fI\fImax print jobs\fR\fR\fI = \fR\fI1000\fR\fI \fR
.sp
例:
\fI\fImax print jobs\fR\fR\fI = \fR\fI5000\fR\fI \fR
.RE

protocol
.\" protocol
.PP
.RS 4
このパラメータは右記のパラメータの別名である：max protocol\&.
.RE

max protocol (G)
.\" max protocol
.PP
.RS 4
このパラメータ(文字列)の値は、 サーバがサポートする最上位のプロトコルである。
.sp
設定可能な値は以下の通りである:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBCORE\fR: 最初期のもので、ユーザの概念がない
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBCOREPLUS\fR: ほんの少し CORE に手を加えたものである
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBLANMAN1\fR: 最初の
\fI 近代的な\fR
バージョンであり、 長いファイル名をサポートしている
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBLANMAN2\fR: LANMAN1 プロトコルを改良したものである
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBNT1\fR: 最も新しいプロトコルであり、 Windows NT が利用する。CIFSと呼ばれることもある。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBSMB2\fR: SMBプロトコルの再実装。Windows Vista 以降で使用される。SambaでのSMB2の実装は現在実験的である!
.sp
.RE
通常、SMB プロトコルによりネゴシエーションを経て適切なプロトコルが選択されるため、 このオプションを設定すべきではない。
.sp
既定値:
\fI\fImax protocol\fR\fR\fI = \fR\fINT1\fR\fI \fR
.sp
例:
\fI\fImax protocol\fR\fR\fI = \fR\fILANMAN1\fR\fI \fR
.RE

max reported print jobs (S)
.\" max reported print jobs
.PP
.RS 4
このパラメータにより、ある時点で Samba の印刷キューのポートモニタが表示する印刷ジョブの最大数が設定される。 この数値を超過した場合、超過したジョブは表示されない。 0 が設定された場合は、表示される印刷ジョブの制限はなくなる。
.sp
既定値:
\fI\fImax reported print jobs\fR\fR\fI = \fR\fI0\fR\fI \fR
.sp
例:
\fI\fImax reported print jobs\fR\fR\fI = \fR\fI1000\fR\fI \fR
.RE

max smbd processes (G)
.\" max smbd processes
.PP
.RS 4
このパラメータは、システムで同時に実行可能な
\fBsmbd\fR(8)
プロセス数の最大値を設定することで、コネクションを扱うリソースが不足して、クライアントに対するサービスが低下することを抑止する。通常の環境では、各ユーザ毎に
\fBsmbd\fR(8)
が割り当てられ、そのホストからの共有に対するコネクションのすべてを扱うことに注意。
.sp
既定値:
\fI\fImax smbd processes\fR\fR\fI = \fR\fI0\fR\fI \fR
.sp
例:
\fI\fImax smbd processes\fR\fR\fI = \fR\fI1000\fR\fI \fR
.RE

max stat cache size (G)
.\" max stat cache size
.PP
.RS 4
このパラメータにより、大文字小文字を区別しない名前の対応づけの高速化に用いられる
\fIstat cache\fR
に用いられるメモリの上限値が指定される。 このパラメータには、使用する stat cache のサイズをキロバイト (1024) 単位で指定する。 値 0 は無制限を意味する。このパラメータを変更する必要はないであろう。
.sp
既定値:
\fI\fImax stat cache size\fR\fR\fI = \fR\fI256\fR\fI \fR
.sp
例:
\fI\fImax stat cache size\fR\fR\fI = \fR\fI100\fR\fI \fR
.RE

max ttl (G)
.\" max ttl
.PP
.RS 4
このオプションは、
\fBnmbd\fR(8)
がブロードキャストを利用したりWINSサーバを利用したりして NetBIOS 名を要求する際の NetBIOS 名のデフォルトのTTL(time to live)を(秒単位で)設定する。 このパラメータを変更する必要はないであろう。 デフォルトは3日である。
.sp
既定値:
\fI\fImax ttl\fR\fR\fI = \fR\fI259200\fR\fI \fR
.RE

max wins ttl (G)
.\" max wins ttl
.PP
.RS 4
このオプションは、
\fBsmbd\fR(8)
が WINS サーバとして動作している (\m[blue]\fBwins support = yes\fR\m[])
nmbdに登録される NetBIOS 名の最大のTTL(time to live)を秒単位で指定する。 このパラメータを変更する必要はないであろう。 デフォルトは6日(518400秒)である。
.sp
既定値:
\fI\fImax wins ttl\fR\fR\fI = \fR\fI518400\fR\fI \fR
.RE

max xmit (G)
.\" max xmit
.PP
.RS 4
このオプションにより、 Samba がネゴシエーション時に用いるパケットサイズの最大値が設定される。 デフォルトは 16644 であり、これは Windows 2000 の挙動に合わせた値である。 2048 以下ではおそらく問題が出るだろう。 このパラメータの値をデフォルトから変更する必要はないだろう。
.sp
既定値:
\fI\fImax xmit\fR\fR\fI = \fR\fI16644\fR\fI \fR
.sp
例:
\fI\fImax xmit\fR\fR\fI = \fR\fI8192\fR\fI \fR
.RE

message command (G)
.\" message command
.PP
.RS 4
このパラメータは、サーバが WinPopup 形式のメッセージを受信した際に、どのようなコマンドを実行するかを指定する。
.sp
一般的には、 何らかの形でメッセージを配送するコマンドを指定する。 これをどのようにして行なうかは、発想次第である。
.sp
以下に一例を示す:
.sp
.if n \{\
.RS 4
.\}
.nf
message command = csh \-c \'xedit %s;rm %s\' &
.fi
.if n \{\
.RE
.\}
.sp
これは、
xeditを利用してメッセージを配送し、 その後メッセージを削除する。\fI コマンドは、 すぐに制御を戻すようにすることが必須であることに注意すること\fR。 最後に \'&\' をつけたのは、そのためである。 コマンドを実行後すぐに制御が戻らないと、PC はメッセージ送信後フリーズしてしまう(うまくいけば、30 秒後に回復することになるだろう)。
.sp
全てのメッセージは、グローバルなゲストユーザの権限で配送される。 コマンド中では、標準の変数を利用できるが、
\fI%u\fR
は機能しない(\fI%U\fR
を利用するのが適切であろう)。
.sp
標準の変数以外に、 以下に示す変数を利用することが可能である:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fI%s\fR
= メッセージを含むファイル名
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fI%t\fR
= メッセージの送信先(通常はサーバ名)
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fI%f\fR
= メッセージの送り元のユーザ
.sp
.RE
このコマンドにより、 メールを送るなど、さまざまな動作が考えられる。 おもしろいアイデアを思いついたら教えて欲しい。
.sp
以下はメッセージをrootへのメールとして送信する方法である:
.sp
.if n \{\
.RS 4
.\}
.nf
message command = /bin/mail \-s \'message from %f on %m\' root < %s; rm %s
.fi
.if n \{\
.RE
.\}
.sp
message command が指定されていない場合、 メッセージは配送されず、Sambaは送信者にエラーの発生を通知する。 ただし、WfWg はエラーコードを無視して配送を行ない、 メッセージの配送を報告する。
.sp
メッセージを単に削除したい場合は、以下のように設定すること:
.sp
.if n \{\
.RS 4
.\}
.nf
message command = rm %s
.fi
.if n \{\
.RE
.\}
.sp
既定値:
\fI\fImessage command\fR\fR\fI = \fR\fI\fR\fI \fR
.sp
例:
\fI\fImessage command\fR\fR\fI = \fR\fIcsh \-c \'xedit %s; rm %s\' &\fR\fI \fR
.RE

min print space (S)
.\" min print space
.PP
.RS 4
ユーザの印刷ジョブをスプールする際に利用可能でなければならない空きディスクスペースの最小容量を設定する。この値はキロバイト単位で指定する。デフォルトは 0 で、この場合、ユーザは常に印刷ジョブをスプールできる。
.sp
既定値:
\fI\fImin print space\fR\fR\fI = \fR\fI0\fR\fI \fR
.sp
例:
\fI\fImin print space\fR\fR\fI = \fR\fI2000\fR\fI \fR
.RE

min protocol (G)
.\" min protocol
.PP
.RS 4
このパラメータの値(文字列)は、 Sambaがサポートする最低限のSMBプロトコルの dialect(レベル) を指定する。 有効なプロトコル名の一覧と、その簡単な説明については、
\m[blue]\fBmax protocol\fR\m[]
パラメータを参照のこと。クライアントがサポートするプロトコルの dialect 一覧については、
source/smbd/negprot\&.c
の Cソースを参照するとよいであろう。
.sp
セキュリティ的な観点では、
\m[blue]\fBlanman auth\fR\m[]
パラメータも参照のこと。 それ以外の観点からこのパラメータを変更する必要はないであろう。
.sp
既定値:
\fI\fImin protocol\fR\fR\fI = \fR\fICORE\fR\fI \fR
.sp
例:
\fI\fImin protocol\fR\fR\fI = \fR\fINT1\fR\fI \fR
.RE

min receivefile size (G)
.\" min receivefile size
.PP
.RS 4
このオプションは、\fBsmbd\fR(8)
が、SMBwriteX要求を処理するときの 振る舞いを変更する。 署名無しのSMB/CIFS接続において、この設定値より大きなサイズのあらゆる SMBwriteXの要求は、通常の方法では処理されず、より下層のカーネルの recvfile や splice システムコールに処理をまかせる。 (Sambaがそのような呼び出しをユーザースペースでエミュレートしていなければ) もし可能であれば、これによってネットワークのソケットバッファから ファイルシステムのバッファキャッシュへ直接ゼロコピーによる書き出しを 行うことを可能にする。 これによってパフォーマンスの向上があるかもしれないが、ユーザーはテストを 行うことが推奨される。 もし 0 を設定すると、Sambaは、SMBwriteX要求を通常の方法で処理する。 (SMB/CIFSでは16MBまで書き込むので)POSIXの large write supportを可能に するためには、このオプションは 0 以外でなければならない。 最大値は 128kである。128kより大きな値は、警告無しで128kに設定される。
.sp
このオプションは署名付きSMB接続では効果が無いことに注意すること
.sp
デフォルトは 0 に設定され、このオプションは無効となっている
.sp
既定値:
\fI\fImin receivefile size\fR\fR\fI = \fR\fI0\fR\fI \fR
.RE

min wins ttl (G)
.\" min wins ttl
.PP
.RS 4
このオプションは、
\fBnmbd\fR(8)
がWINSサーバとして動作している時に (\m[blue]\fBwins support = yes\fR\m[])、
nmbd
に登録された NetBIOS 名の最小の TTL (time to live)を秒単位で指定する。 このパラメータを変更する必要はないであろう。 デフォルトは6時間(21600秒)である。
.sp
既定値:
\fI\fImin wins ttl\fR\fR\fI = \fR\fI21600\fR\fI \fR
.RE

msdfs proxy (S)
.\" msdfs proxy
.PP
.RS 4
このパラメータは、この共有がパラメータで指定された別の CIFS 共有をプロキシする共有であることを指定する。 この共有に接続したクライアントは、 SMB の DFS プロトコルにより、別の共有に転送される。
.sp
DFS ルートのみがプロキシする共有として機能できる。 DFS ルートの共有を設定する方法については、
\m[blue]\fBmsdfs root\fR\m[]
および
\m[blue]\fBhost msdfs\fR\m[]
オプションを参照のこと。
.sp
\fI既定値なし\fR
.sp
例:
\fI\fImsdfs proxy\fR\fR\fI = \fR\fI\eotherserver\esomeshare\fR\fI \fR
.RE

msdfs root (S)
.\" msdfs root
.PP
.RS 4
\fByes\fRに設定された場合、 Samba はその共有を DFS ルートとして扱うため、クライアントは、その共有ディレクトリをルートとする DFS (分散ファイルシステム)ツリーを参照することが可能になる。 DFS リンクの作成は、共有ディレクトリ内で
msdfs:serverA\e\eshareA,serverB\e\eshareB
のような形式でシンボリックリンクを作成することにより行なわれる。 DFS ツリーを Samba で構成する際の詳細情報については、 Samba3\-HOWTO の MSDFS の章を参照のこと。
.sp
既定値:
\fI\fImsdfs root\fR\fR\fI = \fR\fIno\fR\fI \fR
.RE

name cache timeout (G)
.\" name cache timeout
.PP
.RS 4
Samba のホスト名キャッシュ内のエントリがタイムアウトするまで時間を秒単位で指定する。タイムアウトが 0 に設定された場合、キャッシュは無効になる。
.sp
既定値:
\fI\fIname cache timeout\fR\fR\fI = \fR\fI660\fR\fI \fR
.sp
例:
\fI\fIname cache timeout\fR\fR\fI = \fR\fI0\fR\fI \fR
.RE

name resolve order (G)
.\" name resolve order
.PP
.RS 4
このオプションは、どの名前サービスを用いて、またどのような順番で、 ホスト名から IP アドレスを解決するかを決定するため、 Samba の各プログラムで利用される。 このオプションの主な目的は、NetBIOS 名前解決をどのように行なうかを指定することである。 オプションは、名前解決オプションをスペースで区切った文字列で指定する。
.sp
オプションは、「lmhosts」、「host」、「wins」、「bcast」である。 これらは以下に示すように名前解決を実行する:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBlmhosts\fR
: Samba の lmhosts ファイルから IP アドレスを検索する。 NetBIOS 名サフィックスの指定されていない行が lmhosts ファイル中にあった場合、 (詳細は、lmhosts ファイルのマニュアルページを参照のこと)、 その行はすべてのサフィックスの検索にマッチする。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBhost\fR
: システム標準の方法で、/etc/hosts、 NIS 、 DNS への問い合わせを行ない、 ホスト名から IP アドレスへの名前解決を行なう。 名前解決の方法は、OSに依存する。 IRIX や Solaris の場合、
/etc/nsswitch\&.conf
ファイルにより制御される。この方法は、問い合わせされた NetBIOS のサフィックスが 0x20(サーバ) か 0x1c(ドメインコントローラ) の時のみ利用され、それ以外は無効であることに注意。 後者は、アクティブディレクトリドメインでのみ有効である。 この場合、_ldap\&._tcp\&.domain に対応する　SRV RR エントリを検索するための DNS クエリが行われる。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBwins\fR
:
\m[blue]\fBWINSSERVER\fR\m[]
パラメータで指定された IP アドレスに対して名前の問い合わせが行なわれる。 WINS サーバが指定されていない場合、この方法は無視される。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBbcast\fR
:
\m[blue]\fBinterfaces\fR\m[]
パラメータで設定された各インタフェースに対してブロードキャストが実行される。 これは解決したいホストがローカルサブネットに接続されていることを前提とするため、 もっとも信頼性の低い名前解決の方法である。
.sp
.RE
以下の例では、最初にローカルの lmhosts ファイルを調査し、 次にブロードキャストを行ない、 最後にシステム標準のホスト名検索を試行する。
.sp
Samba が ADS セキュリティモード (security = ads) で動作する場合、
\fIname resolve order\fR
の設定は次のようにすべきである:
.sp
name resolve order = wins bcast
.sp
この 場合でも、DC は DNS への問い合わせを行なう。 失敗した場合に NetBIOS 名の問い合わせを行なうが、その際無意味な DNS への「DOMAIN<0x1c>」の問い合わせが抑止される。
.sp
既定値:
\fI\fIname resolve order\fR\fR\fI = \fR\fIlmhosts host wins bcast\fR\fI \fR
.sp
例:
\fI\fIname resolve order\fR\fR\fI = \fR\fIlmhosts bcast host\fR\fI \fR
.RE

netbios aliases (G)
.\" netbios aliases
.PP
.RS 4
これは、nmbdが Samba サーバの別名としてアナウンスする NetBIOS 名のリストである。これにより、ブラウズリスト中で単一のマシンを複数の名前で表示させることが可能になる。 マシンがブラウズサーバやログオンサーバとして動作している場合、別名はブラウズサーバやログオンサーバとしてはアナウンスされない。マシン本来の名前だけがそれらの機能をもつ名前としてアナウンスされる。
.sp
既定値:
\fI\fInetbios aliases\fR\fR\fI = \fR\fI # 空文字列 (別名なし)\fR\fI \fR
.sp
例:
\fI\fInetbios aliases\fR\fR\fI = \fR\fITEST TEST1 TEST2\fR\fI \fR
.RE

netbios name (G)
.\" netbios name
.PP
.RS 4
このパラメータにより、 Samba サーバの NetBIOS 名が設定される。デフォルトでは、ホストの DNS 名の最初の部分と同一である。マシンがブラウズサーバや、ログオンサーバの場合、ここで設定された名前 (またはホストのDNS名の最初の部分)がサービスをアナウンスする際に用いられる。
.sp
Samba 3\&.0 には、NetBIOS が
PIPE
に設定されるとブラウジングや共有へのアクセスに問題が発生するというバグがある。 この問題を避けるためには、Samba 3\&.0 マシンの名前を
PIPE
にしないこと。
.sp
既定値:
\fI\fInetbios name\fR\fR\fI = \fR\fI # マシンの DNS 名\fR\fI \fR
.sp
例:
\fI\fInetbios name\fR\fR\fI = \fR\fIMYNAME\fR\fI \fR
.RE

netbios scope (G)
.\" netbios scope
.PP
.RS 4
このパラメータにより、 Samba が使用する NetBIOS スコープを設定される。LAN上のすべてのマシンに同じ値を設定しない限り、このパラメータを設定すべきではない。
.sp
既定値:
\fI\fInetbios scope\fR\fR\fI = \fR\fI\fR\fI \fR
.RE

nis homedir (G)
.\" nis homedir
.PP
.RS 4
NIS マップから、[home] 共有を提供するサーバを取得する。 automounter を使用する UNIX システムでは、 ユーザのホームディレクトリが、必要に応じてリモートサーバから ワークステーションにマウントされるようになっていることが多い。
.sp
Samba のログオンサーバが実際のホームディレクトリを提供するサーバではなく、 NFS経由でホームディレクトリをマウントしている場合、 クライアントに自分自身がホームディレクトリを提供する SMB サーバであるように見せると、 ユーザがホームディレクトリにアクセスするためには、 二段階のネットワークアクセスが必要になる(1つは SMB で、もう 1 つは NFS)。 これはとても遅くなることがある。
.sp
このオプションにより、 Samba は home 共有がログオンサーバとは異なるサーバにあるものとして扱うことが可能になり、 Samba デーモンがホームディレクトリを提供するサーバで動作している限り、 Samba クライアントは、ホームディレクトリを提供しているサーバ上の共有を直接マウントする。 Samba が home 共有の情報をクライアントに返すとき、
\m[blue]\fBhomedir map\fR\m[]
パラメータ で指定された NIS マップに問い合わせて、そこにあるサーバの情報を利用する。
.sp
このオプションが機能するためには、NIS システムが動いていなければならず、 このオプションを指定した Samba サーバは、 ログオンサーバでなければならないことに注意すること。
.sp
既定値:
\fI\fInis homedir\fR\fR\fI = \fR\fIno\fR\fI \fR
.RE

nmbd bind explicit broadcast (G)
.\" nmbd bind explicit broadcast
.PP
.RS 4
このオプションは\fBnmbd\fR(8)に、ローカルサブネットの ブロードキャストアドレスに、明示的にバインドすることを行わせる。これは、
\m[blue]\fBsocket address\fR\m[]オプションと組み合わせた場合に、 nmbdが正しく動くようにするのに必要である。このオプションをnoにする 必要はない。
.sp
既定値:
\fI\fInmbd bind explicit broadcast\fR\fR\fI = \fR\fIyes\fR\fI \fR
.RE

nt acl support (S)
.\" nt acl support
.PP
.RS 4
この真偽値パラメータにより、
\fBsmbd\fR(8)
が UNIX のパーミッションを Windows NT のアクセスコントロールリストにマップするかどうかが決定される。 対象となる UNIX のパーミッションは、 ファイルやディレクトリに設定された伝統的な UNIX の所有者とグループのパーミッションと POSIX ACL である。 このパラメータは、Samba 2\&.2\&.2 より前のリリースでは、グローバルパラメータであった。
.sp
既定値:
\fI\fInt acl support\fR\fR\fI = \fR\fIyes\fR\fI \fR
.RE

ntlm auth (G)
.\" ntlm auth
.PP
.RS 4
このパラメータにより、\fBsmbd\fR(8)
が NTLM レスポンスを用いてユーザ認証を行なうかどうかが設定される。 このパラメータを無効にすると、クライアントは LANMAN パスワードハッシュ か NTLMv2 レスポンスを送信する必要がある。
.sp
このオプションと
lanman auth
の両方を無効にした場合、NTLMv2 ログインのみが可能となる。すべての クライアントが NTLMv2 をサポートしているわけではなく、ほとんどの場合、NTLMv2 を 使用するためには、明示的に設定を行なうことが必要である。
.sp
既定値:
\fI\fIntlm auth\fR\fR\fI = \fR\fIyes\fR\fI \fR
.RE

nt pipe support (G)
.\" nt pipe support
.PP
.RS 4
この真偽値パラメータにより、
\fBsmbd\fR(8)
が Windows NT のクライアントに対して、 Windows NT の SMB 固有の
\fBIPC$\fR
パイプへの接続を許可するかどうかが制御される。 これは開発者のデバッグオプションであり、意識する必要はない。
.sp
既定値:
\fI\fInt pipe support\fR\fR\fI = \fR\fIyes\fR\fI \fR
.RE

nt status support (G)
.\" nt status support
.PP
.RS 4
この真偽値パラメータは、
\fBsmbd\fR(8)
が、 Windows NT/2000/XP クライアントに対して、 NT 固有のステータスのサポートのネゴシエーションを行なうかどうかを制御する。 これは、開発者のデバッグ用オプションであり、設定を変更すべきではない。 このオプションが
\fBno\fR
の場合、 Samba は Samba 2\&.2\&.3 以前と全く同様に、DOS エラーコードを返却する。
.sp
このオプションを無効にしてはならない。
.sp
既定値:
\fI\fInt status support\fR\fR\fI = \fR\fIyes\fR\fI \fR
.RE

null passwords (G)
.\" null passwords
.PP
.RS 4
空(null)パスワードを持つアカウントへのクライアントからのアクセスを許可、あるいは禁止する。
.sp
\fBsmbpasswd\fR(5)
も参照のこと。
.sp
既定値:
\fI\fInull passwords\fR\fR\fI = \fR\fIno\fR\fI \fR
.RE

obey pam restrictions (G)
.\" obey pam restrictions
.PP
.RS 4
PAMサポートを有効にして(\-\-with\-pam) configure された Samba 3\&.0 系列において、このパラメータは、Samba が PAM のアカウントとセッション管理機構を利用するかどうかを制御する。 デフォルトの場合、 PAM は平文テキスト認証にのみ利用され、 アカウントとセッション管理は利用されない。
\m[blue]\fBencrypt passwords = yes\fR\m[]
の場合、Sambaは常に PAM による認証を無視することに気を付けること。 これは、PAMモジュールが、 SMBのパスワード暗号化に必要なチャレンジアンドレスポンス認証機構をサポートしていないためである。
.sp
既定値:
\fI\fIobey pam restrictions\fR\fR\fI = \fR\fIno\fR\fI \fR
.RE

only user (S)
.\" only user
.PP
.RS 4
この真偽値のオプションは、\fIuser\fR
パラメータに設定されていないユーザからの接続を許可するかどうかを制御する。 デフォルトでは、このオプションは無効になっており、 クライアントがサーバで使用するユーザ名を提供することが可能である。 このパラメータを有効にすることで、サーバは
\fIuser\fR
パラメータで設定されたユーザ名のみを利用する。 これは
\m[blue]\fBsecurity = share\fR\m[]
のセキュリティの時のみ有用である。
.sp
このパラメータを有効にすると、 Samba はサービス名からユーザ名を推測することも行なわなくなる。 このため、[homes] セクションを利用していると問題が発生してしまうことがある。
user = %S
とすることで、
\fIuser\fR
リストにサービス名が設定され、 ホームディレクトリをユーザの名前にすることができる。
.sp
このパラメータを有効にすると、 Samba はサービス名からユーザ名を推測することも行なわなくなるので注意すること。 これにより、[homes] セクションを利用していると問題が発生してしまうことがある。
user = %S
とすることで、
\fIuser\fR
リストにサービス名が設定され、 ホームディレクトリをユーザの名前にすることができる。
.sp
既定値:
\fI\fIonly user\fR\fR\fI = \fR\fIno\fR\fI \fR
.RE

oplock break wait time (G)
.\" oplock break wait time
.PP
.RS 4
これは Windows 9x と Windows NT 双方のバグに対応するために追加されたチューニングオプションである。 クライアントが oplock を解除させるような SMB を発行した時に、 Samba のクライアントに対する応答が早過ぎると、 クライアントは誤動作してしまい、解除要求に応答しない。 このチューニングパラメータ(ミリ秒単位で指定する)は、 こうした(異常動作を行なう)クライアントに対して oplock 解除要求を送付する前に、Samba がとる待ち時間になる。
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBWarning\fR
.ps -1
.br
Samba の oplock コードを読んで理解していない限り、このパラメータを変更してはいけない。
.sp .5v
.RE
既定値:
\fI\fIoplock break wait time\fR\fR\fI = \fR\fI0\fR\fI \fR
.RE

oplock contention limit (S)
.\" oplock contention limit
.PP
.RS 4
これは
\fI非常に\fR
高度な
\fBsmbd\fR(8)
のチューニングオプションで、 複数のクライアントから同じファイルへの oplock 要求が行なわれた際の効率を改善するものである。
.sp
このパラメータには数値を指定する。 同じファイルに対して oplock を行なおうとするクライアントの大体の数がこのパラメータで指定した限界を越えると、
\fBsmbd\fR(8)
は、 たとえ要求されても oplock を許可しないようになる。これにより、
smbdは Windows NT と同様の動作を行うようになる。
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBWarning\fR
.ps -1
.br
Samba の oplock コードを読んで理解していない限り、このパラメータを変更してはいけない。
.sp .5v
.RE
既定値:
\fI\fIoplock contention limit\fR\fR\fI = \fR\fI2\fR\fI \fR
.RE

oplocks (S)
.\" oplocks
.PP
.RS 4
この真偽値オプションは、 共有内のファイルオープンが要求された際に oplock (opportunistic lock = 便宜的ロック) を行なうかどうかを
smbd
に指示する。 oplock により、Samba サーバ上のファイルアクセス速度を劇的に改善(およそ 30% 以上)することができる。 oplock により、クライアントは、積極的にファイルをローカルにキャッシュするようになるが、 信頼性の低いネットワーク環境の場合などに、これを無効にしたいと考えることもあるだろう (Windows NT サーバにおける既定値は有効である)。
.sp
oplock は共有内のファイル単位で無効にすることも可能である。
\m[blue]\fBveto oplock files\fR\m[]
パラメータを参照のこと。 システムによっては、oplock が OS 自身によって認識される。 この場合、Samba、NFS、ローカルなUNIXのいずれを経由してアクセスが行なわれた場合でも、 oplock が行なわれたファイルとのデータの同期が実現する。 詳細は、\m[blue]\fBkernel oplocks\fR\m[]
パラメータを参照のこと。
.sp
既定値:
\fI\fIoplocks\fR\fR\fI = \fR\fIyes\fR\fI \fR
.RE

os2 driver map (G)
.\" os2 driver map
.PP
.RS 4
このパラメータでは、 OS/2 のプリンタドライバ名と Windows NT のプリンタドライバ名とのマッピングが記述されたファイルへの絶対パスを指定する。 ファイル形式は以下のようになっている:
.sp
<nt driver name> = <os2 driver name>\&.<device name>
.sp
HP LaserJet 5 のプリンタドライバを例にとった場合、 正しいエントリはHP LaserJet 5L = LASERJET\&.HP LaserJet 5Lのようになる。
.sp
このファイルは、 Samba3\-HOWTO 本の Classical Printing 章で記述されているプリンタドライバの名前空間の問題に対応するために用いられる。 OS/2 クライアントに関する詳細については、Samba3\-HOWTO 本の other clients 章を参照のこと。
.sp
既定値:
\fI\fIos2 driver map\fR\fR\fI = \fR\fI\fR\fI \fR
.RE

os level (G)
.\" os level
.PP
.RS 4
この数値は、 Samba がブラウザ選定時に宣言する優先度を設定する。 このパラメータの値は、
\fBnmbd\fR(8)
が、ブロードキャスト範囲内における
\m[blue]\fBworkgroup\fR\m[]
のローカルマスタブラウザになるかどうかに影響する。
.sp
\fI注意 :\fR
ローカルマスタブラウザの選定に際して、既定値では、 Samba が Windows NT 4\&.0/2000 のドメインコントローラ以外のすべての Microsoft 社のOSに優先する。 このため、Samba ホストの設定が不正の場合、 ブラウジング的にそのサブネットが孤立してしまう可能性がある。 Samba 3\&.0 系列では、このパラメータは通常自動設定されるため、既定値を手動で設定する必要は通常発生しない。(訳注: 実際には自動設定は行なわれない。この説明は誤りだと思われる) このパラメータに関する詳細は、Samba\-3 HOWTO ドキュメントの「Network Browsing」を参照のこと。
\fI注意:\fRこのパラメータの最大値は255である。 それより大きな値を使った場合、もしも、カウントは0から始まる!
.sp
既定値:
\fI\fIos level\fR\fR\fI = \fR\fI20\fR\fI \fR
.sp
例:
\fI\fIos level\fR\fR\fI = \fR\fI65\fR\fI \fR
.RE

pam password change (G)
.\" pam password change
.PP
.RS 4
Samba 2\&.2 における PAM サポート機能の追加にともない、 このパラメータを用いることで、 Samba で PAM を使ったパスワード変更が可能となった。 このパラメータが有効な場合、SMB クライアントからの要求があれば、
\m[blue]\fBpasswd program\fR\m[]\&. に設定されたプログラムに代わって、PAM を使ってパスワードの変更が行なわれる。 ほとんどの場合、
\m[blue]\fBpasswd chat\fR\m[]
パラメータの変更なしにこのパラメータを有効にすることが可能である。
.sp
既定値:
\fI\fIpam password change\fR\fR\fI = \fR\fIno\fR\fI \fR
.RE

panic action (G)
.\" panic action
.PP
.RS 4
これは Samba 開発者のためのオプションで、
\fBsmbd\fR(8)
か
\fBsmbd\fR(8)
がクラッシュした際に呼び出されるシステム上のコマンドを指定する。 これは通常問題が発生した事実を警告するのに使われる。
.sp
既定値:
\fI\fIpanic action\fR\fR\fI = \fR\fI\fR\fI \fR
.sp
例:
\fI\fIpanic action\fR\fR\fI = \fR\fI"/bin/sleep 90000"\fR\fI \fR
.RE

paranoid server security (G)
.\" paranoid server security
.PP
.RS 4
Windows NT 4\&.x のバージョンによっては、問題のあるパスワードの非ゲストアカウントが許容されている。このオプションを有効にした場合、 Samba はこうした Windows NT 4\&.x サーバを password server として使用せず、ログに出力を行ない終了するようになる。
.sp
このオプションを無効にすることで、 Samba がこのチェックを行なわなくなるため、リモートサーバに対する問題のあるログオンの試行が明示的に許可される。
.sp
既定値:
\fI\fIparanoid server security\fR\fR\fI = \fR\fIyes\fR\fI \fR
.RE

passdb backend (G)
.\" passdb backend
.PP
.RS 4
このオプションにより、管理者はユーザとグループ情報の格納に、どのような 機構(backend)を使用するかについて指定できる。これにより、再コンパイルなしで 機構を取り換えることが可能となる。
.sp
このパラメータは、機構の名称と、特定の機構に依存した「位置」を示す文字列 との 2 つの要素から構成されている。 この要素は「:」文字で区切られる。
.sp
指定可能な機構は以下のとおりである:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
smbpasswd
\- 古い平文のパスワード格納 機構である。これを使うとSambaのいくつかの機能が動かない。 オプションの引数として smbpasswd ファイルの位置を指定する。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
tdbsam
\- TDB ベースのパスワード格納機構である。 オプションの引数として、 TDB ファイルへのパス (デフォルトは
\m[blue]\fBprivate dir\fR\m[]
ディレクトリ内の passdb\&.tdb) を指定する。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
ldapsam
\- LDAP ベースのパスワード機構である。 オプションの引数として、 LDAP の URL (デフォルトは
ldap://localhost) を指定する。
.sp
LDAP の接続は、可能な場合は暗号化される。 これは Start\-TLS (\m[blue]\fBldap ssl\fR\m[]
を参照のこと) か
\fIldaps://\fR
を URL 引数中で指定することにより行なわれる。
.sp
ダブルクォーテーションを使って複数のサーバを指定できる。 複数のサーバが使用できるか否かは、使用するLDAP ライブラリ上の文法に 依存する。
.sp
.RE
.sp
以下に設定例を示す。
.sp
.if n \{\
.RS 4
.\}
.nf
passdb backend = tdbsam:/etc/samba/private/passdb\&.tdb 

またはOpenLDAPの複数サーバLDAP URLの場合は、

passdb backend = ldapsam:"ldap://ldap\-1\&.example\&.com ldap://ldap\-2\&.example\&.com"

あるいは、NetscapeベースのLDAP ライブラリでの複数サーバLDAP URLの場合は、

passdb backend = ldapsam:"ldap://ldap\-1\&.example\&.com ldap\-2\&.example\&.com"
.fi
.if n \{\
.RE
.\}
.sp
既定値:
\fI\fIpassdb backend\fR\fR\fI = \fR\fItdbsam\fR\fI \fR
.RE

passdb expand explicit (G)
.\" passdb expand explicit
.PP
.RS 4
このパラメータは、passdb の指定に % マクロが明示的に指定された際に、 それを展開するかどうかを制御する。 ここではマクロを用いることが可能となっているが、 Windows クライアントがユーザのプライマリグループに置換されるべき %G が含まれている %G_osver% といった変数を展開してしまうというバグを引き起こしてしまうことがある。
.sp
既定値:
\fI\fIpassdb expand explicit\fR\fR\fI = \fR\fIno\fR\fI \fR
.RE

passwd chat (G)
.\" passwd chat
.PP
.RS 4
このパラメータで指定される文字列は、
\fBsmbd\fR(8)
とローカルなパスワード変更プログラムとの間でパスワード変更時に発生する
\fI「やりとり(chat)」\fR
を制御する。 文字列には、
\fBsmbd\fR(8)
が
\m[blue]\fBpasswd program\fR\m[]
で指定したプログラムに行なう送信内容と、それに対して期待される応答内容とを定義したやりとりの手順を記述する。 期待される応答がない場合、パスワードは変更されない。
.sp
このやりとりの手順は、 パスワード制御のためにどのような方法(たとえば NIS など)を使うかに依存するため、 通常サイト依存のものとなる。
.sp
このパラメータは、
\m[blue]\fBunix password sync\fR\m[]
パラメータが
\fByes\fR
の時のみ利用される。 このやりとりは、smbpasswd ファイル中の SMBパスワードが変更される際に、 古いパスワードの平文へアクセスすることなしに、
\fIROOT権限で\fR
呼び出される。 これは、root であれば以前のパスワードを知らなくても、ユーザのパスワードの再設定を行なうことができるからである。 NIS/YP を利用している場合、
\m[blue]\fBpasswd program\fR\m[]
は NIS マスタサーバ上で実行する必要がある
.sp
文字列には、新パスワードに置換される、
\fI%n\fR
マクロや、 各々改行、復帰、タブ、空白を意味する標準的なマクロである、\en, \er, \et, \es も記述できる。 さらに、この文字列には、任意の文字列に一致する \'*\' を記述してもよい。 ダブルクオーテーションは、空白を含む複数の文字列を 1 つの文字列と見なすのに使うことができる。
.sp
やりとりの手順中で、送信文字列としてピリオド「\&.」が指定されていた場合、実際にはなんの文字列も送られない。 同様に、受信文字列としてピリオドが指定されていた場合、 実際には何も受信しないことが期待されている。
.sp

\fIpam password change\fR
パラメータが
\fByes\fR
の場合、やりとりの手順は、任意の順番でマッチし、 成功したか否かは出力結果ではなく PAM の戻り値で判断される。 PAM の場合、\en マクロは無視される。
.sp
既定値:
\fI\fIpasswd chat\fR\fR\fI = \fR\fI*new*password* %n\en*new*password* %n\en *changed*\fR\fI \fR
.sp
例:
\fI\fIpasswd chat\fR\fR\fI = \fR\fI"*Enter OLD password*" %o\en "*Enter NEW password*" %n\en "*Reenter NEW password*" %n\en "*Password changed*"\fR\fI \fR
.RE

passwd chat debug (G)
.\" passwd chat debug
.PP
.RS 4
この真偽値パラメータは、passwd chat script パラメータを
\fIdebug\fR
モードで実行するかどうかに影響する。 debug モードの場合、passwd chat 中にやりとりされる文字列は、
\m[blue]\fBdebug level\fR\m[]
を 100 にすることで、
\fBsmbd\fR(8)
のログファイル中に出力されるようになる。
smbd
のログ中に平文のパスワードが見えてしまうため、これは危険なオプションである。 このパラメータは、 Samba の管理者が
\fIpasswd chat\fR
スクリプトが
\fIpasswd program\fR
のデバッグを行なう際に役立つ。デバッグが終了したら、必ず無効にすること。
\m[blue]\fBpam password change\fR\m[]
パラメータが有効になっている場合、このオプションは無効になる。 このパラメータはデフォルトで無効になっている。
.sp
既定値:
\fI\fIpasswd chat debug\fR\fR\fI = \fR\fIno\fR\fI \fR
.RE

passwd chat timeout (G)
.\" passwd chat timeout
.PP
.RS 4
この整数値により、smbd が passwd chat script の実行を待機する時間を秒単位で指定する。 最初の応答が受信されて以降のやりとりは、 この値の 1/10 の時間で応答される必要がある。 デフォルトは 2 秒である。
.sp
既定値:
\fI\fIpasswd chat timeout\fR\fR\fI = \fR\fI2\fR\fI \fR
.RE

passwd program (G)
.\" passwd program
.PP
.RS 4
ユーザの UNIX 上のパスワードを設定するために使用するプログラムの名前を指定する。
\fI%u\fR
はユーザ名に置換される。 パスワード変更プログラムを呼び出す前に、 指定されたユーザ名が存在するかのチェックが行なわれる。
.sp
多くのパスワード変更プログラムは、 パスワードの最小字数や大文字と小文字併用や、数字の混在などの
\fI適切な\fRパスワードを要求することに注意して欲しい。 一部のクライアント(Windows for Workgroups など)は、 パスワードを送信する前に大文字化してしまうため、問題が発生する。
.sp
\fI注意:\fR\fIunix password sync\fR
パラメータを
\fByes\fR
に設定すると、 smbpasswd ファイル中の SMBパスワードが変更される前に、 このプログラムが
\fIROOT権限で\fR
呼び出される。 UNIX 側のパスワード変更が失敗すると、
smbd
は SMBパスワードの変更も失敗させる(これは仕様である)。
.sp

\fIunix password sync\fR
パラメータが
\fByes\fR
に設定されている場合は、 このパラメータで指定する
\fIすべての\fR
プログラムを
\fI必ず絶対パスで設定し\fR、 セキュリティ上の問題が発生しないようにしておくこと。 デフォルトでは
\fIunix password sync\fR
は
\fBno\fR
になっているので注意。
.sp
既定値:
\fI\fIpasswd program\fR\fR\fI = \fR\fI\fR\fI \fR
.sp
例:
\fI\fIpasswd program\fR\fR\fI = \fR\fI/bin/passwd %u\fR\fI \fR
.RE

password level (G)
.\" password level
.PP
.RS 4
クライアントとサーバの組合せによっては、 大文字と小文字が混在したパスワードの扱いに問題が発生することがある。 問題が発生するクライアントとしては、 LANMAN1 プロトコルを使用しているとパスワードを強制的に大文字にするが、 COREPLUS を使用しているときはこの変換を行なわない Windows for Workgroups が挙げられる。 Windows 95/98 系列のオペレーティングシステムにも問題がある。 これらのクライアントは、プロトコルのネゴシエーションの結果 NT LM 0\&.12が使われることになった場合でも、平文のパスワードを大文字化してしまう。
.sp
このパラメータは、 パスワード中に含まれる大文字の最大数を設定する。
.sp
例えば、与えられたパスワードが「FRED」であったとする。
\fIpassword level\fR
が 1 に設定されていると、 「FRED」で失敗したときに以下の組み合わせによる再試行が行なわれる:
.sp
"Fred", "fred", "fRed", "frEd","freD"
.sp
\fIpassword level\fR
が 2 に設定されていると、 以下の組合せによる試行も行なわれる:
.sp
"FRed", "FrEd", "FreD", "fREd", "fReD", "frED", \&...\&...
.sp
以降も同様である。
.sp
このパラメータを大きくするほど、 大文字と小文字の混在したパスワードが大文字あるいは小文字のみのパスワードと一致するようになる。 しかし、このパラメータの利用はセキュリティの低下につながることと、 新規の接続を処理するための時間が増大することを意識しておく必要がある。
.sp
値を 0 にすると、入力された通りのパスワードと、 それらを全て小文字にした場合の 2 回の試行のみを行なう。
.sp
このパラメータは、平文のパスワードを使用する場合にのみ使用される。暗号化パスワードが使用されている場合 (samba\-3\&.0\&.0 以降はそれがデフォルト) にはまったく使用されない。つまり、このパラメータは
\m[blue]\fBencrypt passwords = No\fR\m[]
という設定の場合にのみ使用するということである。
.sp
既定値:
\fI\fIpassword level\fR\fR\fI = \fR\fI0\fR\fI \fR
.sp
例:
\fI\fIpassword level\fR\fR\fI = \fR\fI4\fR\fI \fR
.RE

password server (G)
.\" password server
.PP
.RS 4
このオプションで、別の SMB サーバか、Active Directory ドメインコントローラの 指定を行い、security = [ads|domain|server]を 使うことで、Samba が行なうユーザ名、パスワードの認証のすべてを指定した別のサーバに行なわせることが可能となる。
.sp
このオプションでは、使用するパスワードサーバの名前あるいは IP アドレスを設定する。 また、ADS のレルムに対応するサーバへの接続時に使用するポートの指定にもこのオプ ョンが使用できるようになっており、そのための書式も追加されている。 デフォルトの LDAP ポートである 389 以外のポートを指定する場合には、名前あるいは IP アドレスの後にコロンを付けて指定する（例: 192\&.168\&.1\&.100:389）。 ポートを指定しなかった場合、 Samba は標準の LDAP ポートである tcp/389 を使用する。このポート番号は、Windows NT 4\&.0 ドメインや NetBIOS 接続に対応するパスワードサーバには何の意味も持たないという点に注意。
.sp
このパラメータの値が名前の場合、名前解決は
\m[blue]\fBname resolve order\fR\m[]
パラメータで設定された方法と順番に従って行なわれるため、 このパラメータで指定可能な任意の方式を任意の順番で組み合わせることができる。
.sp
パスワードサーバは、 "LM1\&.2X002"または"LM NT 0\&.12" プロトコルが利用可能であり、ユーザレベルのセキュリティモードで構成されたマシン である必要がある。
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBNote\fR
.ps -1
.br
パスワードサーバを利用するということは、 Samba を実行している UNIX マシンのセキュリティはパスワードサーバに依存するということである。
\fI 完全に信頼することができるサーバ以外をパスワードサーバとして設定してはいけない\fR。
.sp .5v
.RE
Samba サーバ自身をパスワードサーバに設定しないこと。 これはループを発生させ、Samba サーバをフリーズさせてしまう!
.sp
password server の値には、 Samba 変数も通常通り利用できるが、 事実上有用なものは、Samba サーバに接続してきたクライアントをパスワードサーバとして設定することを意味する、
\fI%m\fR
だけであろう。 この設定はクライアントを信頼することになるため、 hosts allow パラメータにより接続を制限することが望ましい。
.sp

\fIsecurity\fR
パラメータを
\fBdomain\fR
もしくは
\fBads\fR
に設定する場合、このオプションでは、 ドメインのプライマリおよびバックアップドメインコントローラを指定するか、 「*」という文字を指定する必要がある。これは、 Samba サーバをドメインのメンバとして機能させるとともに、 ユーザのログオン時に認証を行なうために、暗号化された認証済のRPCコールを利用するためである。
security = domain
を用いる利点は、
\fIpassword server\fR
オプションで幾つかのサーバを指定した場合に、
smbd
が、どれかのサーバから応答があるまでリスト中のサーバに対して順番に問い合わせを行なっていくという点にある。 これは、通常問い合わせを行なうサーバが停止してしまった時に効果を発揮する。
.sp
\fIpassword server\fR
オプションに文字 「*」 を指定すると、Samba は
\fBWORKGROUP<1C>\fR
への問い合わせを行い、名前解決機構から返却された IP アドレスリスト中の各サーバにアクセスを行って認証を実施するため、プライマリあるいはバックアップドメインコントローラの名前解決を自動的に実施する。
.sp
「*」文字とサーバのリストの両方を指定した場合、 リストは問い合わせを行なうサーバの優先順位として機能するが、 それ以外の DC もリストには追加される。 Samba は最も近い DC の位置を検出することによるリストの最適化は行なわない。
.sp
\fIsecurity\fR
パラメータが
\fBserver\fR
の場合、
security = domain
の場合にはなかった制限事項が幾つか発生する:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
複数のパスワードサーバを
\fI password server\fR
パラメータ中に設定できるが、 一旦
smbd
が接続を行なったパスワードサーバが停止してしまうと、 その
smbd
ではそれ以上のユーザ認証が一切行なえなくなる。 これは
security = server
モードにおける SMB/CIFS プロトコルでの制限で、Samba 側では対処できない。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
Windows NT サーバをパスワードサーバとして使っている場合、 ユーザが Samba サーバからログオンできるようにする必要がある。 これは、security = server
モードの場合、 ネットワーク経由のログオンは、ユーザのワークステーションからではなく、 Samba サーバから行われたものとして扱われるためである。
.sp
.RE
既定値:
\fI\fIpassword server\fR\fR\fI = \fR\fI*\fR\fI \fR
.sp
例:
\fI\fIpassword server\fR\fR\fI = \fR\fINT\-PDC, NT\-BDC1, NT\-BDC2, *\fR\fI \fR
.sp
例:
\fI\fIpassword server\fR\fR\fI = \fR\fIwindc\&.mydomain\&.com:389 192\&.168\&.1\&.101 *\fR\fI \fR
.RE

directory
.\" directory
.PP
.RS 4
このパラメータは右記のパラメータの別名である：path\&.
.RE

path (S)
.\" path
.PP
.RS 4
このパラメータは、サービスに接続したユーザがアクセスするディレクトリを指定する。印刷サービスの場合、これは印刷データがホストの印刷機構に送られる前にスプールされる場所になる。
.sp
ゲストアクセスを許可している印刷サービスの場合、サービスは読みとりのみにした上で、パスは全ユーザ書き込み可能として sticky ビットをセットすべきである。これはもちろん必須ではないが、このようにしない限りは、おそらく意図した設定を行なうことができないだろう。
.sp
\fI%u\fR
は、クライアントが接続する際に使用した UNIX のユーザ名に置換される。\fI%m\fR
は、接続してきたマシンの NetBIOS 名に置換される。これらの置換機能は、ユーザに仮想的なホームディレクトリを設定する際非常に有用である。
.sp
\m[blue]\fBroot dir\fR\m[]
が指定されていた場合、このパラメータもその影響を受けることに注意。
.sp
既定値:
\fI\fIpath\fR\fR\fI = \fR\fI\fR\fI \fR
.sp
例:
\fI\fIpath\fR\fR\fI = \fR\fI/home/fred\fR\fI \fR
.RE

perfcount module (G)
.\" perfcount module
.PP
.RS 4
SMB の操作をモニタリングする際に使用する perfcount バックエンドを指定する。 perfcount モジュールはひとつだけ指定できる。そのモジュールは、smb\&.h で定義されている smb_perfcount_handler 構造体にある API をすべて 実装していなければならない。
.sp
\fI既定値なし\fR
.RE

pid directory (G)
.\" pid directory
.PP
.RS 4
このオプションにより、 pid ファイルがおかれるディレクトリが指定される。
.sp
既定値:
\fI\fIpid directory\fR\fR\fI = \fR\fI${prefix}/var/locks\fR\fI \fR
.sp
例:
\fI\fIpid directory\fR\fR\fI = \fR\fIpid directory = /var/run/\fR\fI \fR
.RE

posix locking (S)
.\" posix locking
.PP
.RS 4
\fBsmbd\fR(8)
デーモンでは、 SMB クライアントによって行なわれたファイルロックの情報を記録するデータベースを管理している。 既定値の動作は、この内部データベースをPOSIXロックにもマッピング(反映)する。 SMB以外の方式(たとえばNFSやローカルなファイルアクセス) 経由で、ファイルにアクセスするPOSIX互換のアプリケーション によって認識されたものと、整合性が取れると言うことである。 このパラメータを無効にする必要はまずないであろう。
.sp
既定値:
\fI\fIposix locking\fR\fR\fI = \fR\fIyes\fR\fI \fR
.RE

postexec (S)
.\" postexec
.PP
.RS 4
このオプションは、 サービスから切断した際に常に起動されるコマンドを指定する。 このパラメータでは通常の Samba の変数も利用できる。 システムによってはコマンドが root で実行される場合もあるかも知れない。
.sp
面白い例としては、サーバのリソースを umount するような用途が考えられる:
.sp
postexec = /etc/umount /cdrom
.sp
既定値:
\fI\fIpostexec\fR\fR\fI = \fR\fI\fR\fI \fR
.sp
例:
\fI\fIpostexec\fR\fR\fI = \fR\fIecho \e"%u disconnected from %S from %m (%I)\e" >> /tmp/log\fR\fI \fR
.RE

exec
.\" exec
.PP
.RS 4
このパラメータは右記のパラメータの別名である：preexec\&.
.RE

preexec (S)
.\" preexec
.PP
.RS 4
このオプションは、サービスへ接続した際に必ず実行されるコマンドを指定する。 このパラメータでは通常のSambaの変数も利用できる。
.sp
面白い例としては、接続する度に、 ユーザに歓迎(welcome)メッセージを送るような用途が考えられる。 その日の一言 (message of the day) も面白いかも知れない。以下に例を示す:
.sp

preexec = csh \-c \'echo \e"Welcome to %S!\e" | /usr/local/samba/bin/smbclient \-M %m \-I %I\' &
.sp
無論、しばらく経つとこれはイライラのもとになるだけだろう :\-)。
.sp

\m[blue]\fBpreexec close\fR\m[]
や
\m[blue]\fBpostexec\fR\m[]
も参照のこと。
.sp
既定値:
\fI\fIpreexec\fR\fR\fI = \fR\fI\fR\fI \fR
.sp
例:
\fI\fIpreexec\fR\fR\fI = \fR\fIecho \e"%u connected to %S from %m (%I)\e" >> /tmp/log\fR\fI \fR
.RE

preexec close (S)
.\" preexec close
.PP
.RS 4
この真偽値オプションは、\m[blue]\fBpreexec\fR\m[]
で指定したコマンドから 0 以外の戻り値が返却された際に、 サービスへの接続をクローズするかどうかを制御する。
.sp
既定値:
\fI\fIpreexec close\fR\fR\fI = \fR\fIno\fR\fI \fR
.RE

prefered master
.\" prefered master
.PP
.RS 4
このパラメータは右記のパラメータの別名である：preferred master\&.
.RE

preferred master (G)
.\" preferred master
.PP
.RS 4
この真偽値パラメータは、
\fBnmbd\fR(8)
が ワークグループのマスタブラウザとして優先されるかどうかに影響する。
.sp
これが
\fByes\fR
に設定されていると、
nmbd
は起動時にブラウザの選定を強要する。 また、選定時の優先度でも、わずかではあるが有利になる。 このパラメータは、nmbd
がドメインマスタブラウザになることを保証するために、
\m[blue]\fBdomain master = yes\fR\m[]
の設定と連携して使用することが推奨されている。 (訳注: Samba 3\&.0 系列では、\m[blue]\fBdomain logons = Yes\fR\m[]の場合
\m[blue]\fBpreferred master\fR\m[]
パラメータもデフォルトでは有効となる。\fIdomain logons\fR
が有効でない場合(デフォルト)、\fIdomain master\fR
もデフォルトでは有効にならない。
.sp
同じサブネット上に優先マスタブラウザに指定されたホスト(Samba サーバ、Windows 95/NT のいずれの場合も)が複数台存在すると、 それらのホストは定期的にローカルマスタブラウザになろうとする 試みを永続的に繰り返すことになる。 これは不要なブロードキャストトラフィックを発生させるだけでなく、 ブラウジング機能自体にも支障を発生させてしまうため、このオプションは注意して扱うこと。
.sp
既定値:
\fI\fIpreferred master\fR\fR\fI = \fR\fIauto\fR\fI \fR
.RE

auto services
.\" auto services
.PP
.RS 4
このパラメータは右記のパラメータの別名である：preload\&.
.RE

preload (G)
.\" preload
.PP
.RS 4
このパラメータは、 自動的にブラウズリスト上に追加したいサービスのリストを設定する。 このパラメータを利用しないと不可視になる homes や printers サービスにとって有用である。
.sp
printcap ファイルにあるすべてのプリンタを指定したい場合は、
\m[blue]\fBload printers\fR\m[]
オプションを利用する方が簡単である。
.sp
既定値:
\fI\fIpreload\fR\fR\fI = \fR\fI\fR\fI \fR
.sp
例:
\fI\fIpreload\fR\fR\fI = \fR\fIfred lp colorlp\fR\fI \fR
.RE

preload modules (G)
.\" preload modules
.PP
.RS 4
このパラメータには、クライアントの接続前に smbd にロードされるモジュールのパスのリストを指定する。 これにより smbd が新しい接続を開始する際の時間が短縮される。
.sp
既定値:
\fI\fIpreload modules\fR\fR\fI = \fR\fI\fR\fI \fR
.sp
例:
\fI\fIpreload modules\fR\fR\fI = \fR\fI/usr/lib/samba/passdb/mysql\&.so\fR\fI \fR
.RE

preserve case (S)
.\" preserve case
.PP
.RS 4
クライアントから送信されてきた新しいファイル名中の大文字小文字をそのまま利用するか、
\m[blue]\fBdefault case\fR\m[]
パラメータの設定を強制するかどうかを設定する。
.sp
この設定に関する詳細については、
名前の短縮
セクションを参照のこと。
.sp
既定値:
\fI\fIpreserve case\fR\fR\fI = \fR\fIyes\fR\fI \fR
.RE

print ok
.\" print ok
.PP
.RS 4
このパラメータは右記のパラメータの別名である：printable\&.
.RE

printable (S)
.\" printable
.PP
.RS 4
このパラメータが
\fByes\fR
の場合に、 クライアントから指定されたディレクトリにスプールファイルを書き込むことが可能になる。
.sp
印刷可能(printable)なサービスでは、 (ユーザがUNIX上に権限をもっている限り)印刷データをスプールファイルに書き込むことが常に可能となることに注意。
\m[blue]\fBread only\fR\m[]
パラメータは、 リソースに対する印刷以外のアクセスにのみ影響する。
.sp
既定値:
\fI\fIprintable\fR\fR\fI = \fR\fIno\fR\fI \fR
.RE

printcap cache time (G)
.\" printcap cache time
.PP
.RS 4
このオプションにより、印刷サブシステムがプリンタの一覧情報を再確認するまでの時間を秒単位で制御することが可能となる。 この値が 60 より大きい場合、 初回の再確認時間は 60 秒に設定される。 これは、印刷サブシステムが初回の再確認を早期に実行するためである。
.sp
このパラメータを 0 にすると、 起動後に新しいプリンタや削除されたプリンタを再確認する機能が無効化される。
.sp
既定値:
\fI\fIprintcap cache time\fR\fR\fI = \fR\fI750\fR\fI \fR
.sp
例:
\fI\fIprintcap cache time\fR\fR\fI = \fR\fI600\fR\fI \fR
.RE

printcap
.\" printcap
.PP
.RS 4
このパラメータは右記のパラメータの別名である：printcap name\&.
.RE

printcap name (S)
.\" printcap name
.PP
.RS 4
このパラメータは、 コンパイル時に設定されるデフォルトでサーバが用いる printcap ファイル名 (通常
/etc/printcap) を上書きにするために使われる。 このパラメータを設定すべき状況については、前述した
[printers]
セクションに関する説明を参照のこと。
.sp
CUPS 印刷インタフェースを利用する際は、printcap name = cups
という設定を行なうこと。これにより [global] セクションの
\m[blue]\fBprinting = cups\fR\m[]
パラメータにより補完される。
printcap name = cups
により、 CUPS の設定ファイルによって指定された、 CUPS によって作成される"ダミー"の printcap が用いられるようになる。
.sp

lpstat
を利用することで 利用可能なプリンタの一覧を取得できる System V のシステムでは、
printcap name = lpstat
と設定することで、利用可能なプリンタの一覧を自動的に取得できる。 (ほとんどの System V ベースのシステムが該当する)では、これが既定値である。 これらのシステムで
\fIprintcap name\fR
に
lpstat
が設定されると、 Samba は
lpstat \-v
を実行し、その出力からプリンタ一覧を取得する。
.sp
最低限の printcap ファイルは下記のようなものである:
.sp
.if n \{\
.RS 4
.\}
.nf
print1|My Printer 1
print2|My Printer 2
print3|My Printer 3
print4|My Printer 4
print5|My Printer 5
.fi
.if n \{\
.RE
.\}
.sp
\'|\' によって、プリンタの別名が区切られる。 ただし、2 番目の別名中に空白があると、 Samba はそれをプリンタのコメントであると判断する。
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBNote\fR
.ps -1
.br
AIXにおけるデフォルトの printcap ファイルの名前は、
/etc/qconfigである。printcap ファイルの名前が
qconfig
の場合、Samba はファイルが AIXの
qconfig形式であると仮定する。
.sp .5v
.RE
既定値:
\fI\fIprintcap name\fR\fR\fI = \fR\fI/etc/printcap\fR\fI \fR
.sp
例:
\fI\fIprintcap name\fR\fR\fI = \fR\fI/etc/myprintcap\fR\fI \fR
.RE

print command (S)
.\" print command
.PP
.RS 4
印刷ジョブが、スプールファイルの書き込みを完了した後で、 ここで指定したコマンドが
system()
関数経由でスプールファイルを処理するために、利用される。 通常、指定したコマンドはスプールファイルをホストの印刷サブシステムに送信するが、 そうしなければならないということはない。 サーバはスプールファイルを削除しないので、 指定したコマンドが処理完了後にスプールファイルを削除しなければならない。 さもなければ、古いスプールファイルを手動で削除する必要がある。
.sp
print command は、単純なテキスト文字列である。 これは、以下のマクロが置換される他はそのまま利用される。
.sp
%s, %f \- スプールファイル名へのパス
.sp
%p \- プリンタ名
.sp
%J \- the job クライアントから送信されたジョブ名
.sp
%c \- スプールされたジョブのうち、 すでに印刷されたページ数(検知可能な場合)
.sp
%z \- スプールされた印刷ジョブのサイズ (バイト)
.sp
print command には、\fI最低限\fR
\fI%s\fR
もしくは
\fI%f\fR
の記述が必要である。
\fI%p\fR
については必須ではない。 ジョブの実行時にプリンタ名が指定されていない場合、
\fI%p\fR
は単に print command から無視される。
.sp
[global] セクション中で指定された print command は、 独自の print command が設定されていない各印刷サービスに適用される。
.sp
印刷サービスに print command の定義がなく、 グローバルな print command の定義もない場合、 スプールファイルは作成されるが処理されず、(これが最も重要だが)削除されない。
.sp
UNIX プラットフォームによっては
\fBnobody\fR
アカウントを用いた印刷が失敗する場合があるので注意して欲しい。 この場合、印刷の実行が可能な別のゲストアカウントを作成し、 [global] セクション中の
\m[blue]\fBguest account\fR\m[]
に設定すること。
.sp
シェルで解析できる限りの非常に複雑な print command を記述することが可能である。 以下の例では印刷ジョブを記録し、ファイルを印刷してからそれを削除している。 \';\' はシェルスクリプトにおいて、 通常コマンド間のセパレータとして用いられることに注意。
.sp
print command = echo Printing %s >> /tmp/print\&.log; lpr \-P %p %s; rm %s
.sp
システムでファイルを印刷する一般的な方法によっては、 このコマンドを適宜変更する必要があるかもしれない。 パラメータの既定値は、\m[blue]\fBprinting\fR\m[]
パラメータの設定に応じて変化する。
.sp
デフォルト:
printing = BSD, AIX, QNX, LPRNG, PLPの場合:
.sp
print command = lpr \-r \-P%p %s
.sp
printing = SYSV, HPUXの場合:
.sp
print command = lp \-c \-d%p %s; rm %s
.sp
printing = SOFTQの場合:
.sp
print command = lp \-d%p \-s %s; rm %s
.sp
printing = CUPS の場合: Samba が libcups を利用してコンパイルされた場合、
\m[blue]\fBprintcap = cups\fR\m[]
は、ジョブの送信などに CUPS API を利用する。 それ以外の場合は、lp \-c \-d%p \-oraw; rm %s
のように、 System V 系の印刷用コマンドに \-oraw オプションをつけたものに対応づけられる。 Samba が libcups を利用してコンパイルされ、
printing = cups
の設定が行なわれた場合、 手動で設定された print コマンドは無視される。
.sp
\fI既定値なし\fR
.sp
例:
\fI\fIprint command\fR\fR\fI = \fR\fI/usr/local/samba/bin/myprintscript %p %s\fR\fI \fR
.RE

printer admin (S)
.\" printer admin
.PP
.RS 4
このパラメータには、 MS\-RPC(通常Windows NT Workstationによって使用される)による、 遠隔からのプリンタ管理インタフェース経由でプリンタに対するすべての操作を行なう権限をもつユーザのリストを設定する。 このパラメータは共有単位に指定することも Samba 全体に対して指定することも可能である。 root は常にこの権限をもつことに注意。 このパラメータを Samba 全体に対して設定した場合、思わぬ副作用を招く可能性があるので、注意すること。
.sp
このパラメータは SePrintOperatorPrivilege ユーザ権利とプリンタのア クセス許可により、廃止予定のパラメータとなっている。 将来のリリースでは廃止されるだろう。
.sp
既定値:
\fI\fIprinter admin\fR\fR\fI = \fR\fI\fR\fI \fR
.sp
例:
\fI\fIprinter admin\fR\fR\fI = \fR\fIadmin, @staff\fR\fI \fR
.RE

printer
.\" printer
.PP
.RS 4
このパラメータは右記のパラメータの別名である：printer name\&.
.RE

printer name (S)
.\" printer name
.PP
.RS 4
このパラメータは、印刷サービスに対して印刷ジョブが送られた際に、 それをスプールするプリンタ名を設定する。
.sp
[global] セクションで設定された場合、 そのプリンタ名は、独自のプリンタ名が指定されていないすべての 印刷サービスで利用される。
.sp

\m[blue]\fBprinter name\fR\m[]
の既定値は 、 大半のシステムで
lp
である。
.sp
既定値:
\fI\fIprinter name\fR\fR\fI = \fR\fIなし\fR\fI \fR
.sp
例:
\fI\fIprinter name\fR\fR\fI = \fR\fIlaserwriter\fR\fI \fR
.RE

printing (S)
.\" printing
.PP
.RS 4
このパラメータは、プリンタの状態に関する情報をどのように解釈するかを設定する。 このオプションが[global] セクションで指定された場合、
\fIprint command\fR、
\fIlpq command\fR、
\fIlppause command\fR、
\fIlpresume command\fR、
\fIlprm command\fRの既定値にも影響する。
.sp
現時点で指定できる印刷形式は
\fBBSD\fR
/
\fBAIX\fR
/
\fBLPRNG\fR
/
\fBPLP\fR
/
\fBSYSV\fR
/
\fBHPUX\fR
/
\fBQNX\fR
/
\fBSOFTQ\fR
/
\fBCUPS\fRの9種類である。
.sp
種々のオプションを使うとき、他の print command の既定値が何であるかを確認する ためには、\fBtestparm\fR(1)プログラムを使う。
.sp
このオプションを設定した際に、関連する印刷コマンドの 既定値がどのように設定されるかを確認する際は、
\fBtestparm\fR(1)プログラムを使用すること。
.sp
このオプションはプリンタ毎に設定することが可能である。 各種の印刷に関するコマンド (print command や lpq command など) で 既定値の設定を上書きさせる場合は、
\fIprinting\fR
パラメータの設定後に指定する必要があることに注意。
.sp
[printers]
セクションでの説明も参照のこと。
.sp
既定値:
\fI\fIprinting\fR\fR\fI = \fR\fI OSによって異なるためtestparm \-vで確認する。 \fR\fI \fR
.RE

printjob username (S)
.\" printjob username
.PP
.RS 4
このパラメータはプリンとシステムにどちらのユーザ情報が渡されるかを 指定する。通常、ユーザ名が送られる。しかし、いくつかの場合、たとえば、 ドメインプレフィックスも一緒にした方が便利な場合もある。
.sp
既定値:
\fI\fIprintjob username\fR\fR\fI = \fR\fI%U\fR\fI \fR
.sp
例:
\fI\fIprintjob username\fR\fR\fI = \fR\fI%D\e%U\fR\fI \fR
.RE

private dir (G)
.\" private dir
.PP
.RS 4
このパラメータは、 smbd が
smbpasswd
や
secrets\&.tdb
といったファイルを格納するために使用するディレクトリを指定する。
.sp
既定値:
\fI\fIprivate dir\fR\fR\fI = \fR\fI${prefix}/private\fR\fI \fR
.RE

profile acls (S)
.\" profile acls
.PP
.RS 4
この真偽値パラメータは、Windows 2000 もしくは Windows XP 用のユーザプロファイルを Samba サーバ上の共有に格納する際に発生する問題に対処するため作成された。 Windows 2000 や Windows XP の新しいサービスパック(訳注: 各々 SP4 と SP1) では、セキュリティの ACL チェックが行なわれるようになり、ローカルのワークステーション上に格納されているプロファイルのコピーを Samba 上の共有にコピーする際に、プロファイルのディレクトリの所有者と書き込み権をチェックするようになった。
.sp
winbindd を用いたドメインモードで運用していない場合、ローカルワークステーション上に複製された、ワークステーションにログオン中ユーザのセキュリティ情報 (SID) は無意味なため、結果としてプロファイルの格納に失敗する。 このパラメータをプロファイルの格納に使用する共有で有効にすることにより、クライアントに返却される Windows の ACL について、以下の 2 点が変更となる。 まず、すべてのファイルおよびディレクトリの所有者とグループの所有者が、各々 BUILTIN\eAdministrators および BUILTIN\eUsers となる (SID は各々 S\-1\-5\-32\-544 と S\-1\-5\-32\-545)。 次に、返却されるすべての ACL に対して BUILTIN\eUsers にフルコントロールの ACE が付加される。 これにより、Windows 2000 および Windows XP のワークステーションのユーザがプロファイルにアクセスできるようになる。
.sp
ワークステーションに複数のユーザがログオンする環境の場合、別ユーザのプロファイルへのアクセスを禁止するためには、「捜査チェックのバイパス」権利を削除する必要がある。 プロファイルディレクトリのトップ(ユーザ名を含む名称となっている)がワークステーション上で作成される際、所有するユーザ以外のアクセスを禁止するような ACL が設定されるため、この設定により、別のユーザのプロファイルディレクトリへのアクセスを禁止することができる。
.sp
既定値:
\fI\fIprofile acls\fR\fR\fI = \fR\fIno\fR\fI \fR
.RE

queuepause command (S)
.\" queuepause command
.PP
.RS 4
このパラメータは、印刷キューを一時停止させるために、 サーバ上で実行するコマンドを指定する。
.sp
このコマンドは、引数としてプリンタ名をとり、 印刷キューにある印刷ジョブの送信を停止させるために印刷キューを停止させる機能を持つ プログラムまたはスクリプトである必要がある。
.sp
Windows 95 や Windows NTでは、 「プリンタ」ウインドウからこのコマンドを発行することができるが、 Windows for Workgroups ではこのコマンドがサポートされていない。
.sp
コマンド中に
\fI%p\fR
が指定された場合は、プリンタ名がそこに引数として置かれる。 それ以外の場合、プリンタ名はコマンド文字列の最後におかれる。
.sp
サーバ上で PATH 環境変数が設定されていない場合を想定して、 コマンドをフルパスで記述することが推奨される。
.sp
\fI既定値なし\fR
.sp
例:
\fI\fIqueuepause command\fR\fR\fI = \fR\fIdisable %p\fR\fI \fR
.RE

queueresume command (S)
.\" queueresume command
.PP
.RS 4
このパラメータは、印刷キューを再開させるために、 サーバ上で実行するコマンドを指定する。 これは、前述したパラメータ (\m[blue]\fBqueuepause command\fR\m[]) によって一時停止された動作を再開させるコマンドになる。
.sp
このコマンドは、引数としてプリンタ名をとり、 印刷キューにある印刷ジョブを再度プリンタへ送信させるために印刷キューを再開する機能を持つ プログラムまたはスクリプトである必要がある。
.sp
Windows 95 や Windows NTでは、 「プリンタ」ウインドウからこのコマンドを発行することができるが、 Windows for Workgroups ではこのコマンドがサポートされていない。
.sp
コマンド中に
\fI%p\fR
が指定された場合は、プリンタ名がそこに引数として置かれる。 それ以外の場合、プリンタ名はコマンド文字列の最後におかれる。
.sp
サーバ上で PATH 環境変数が設定されていない場合を想定して、 コマンドをフルパスで記述することが推奨される。
.sp
既定値:
\fI\fIqueueresume command\fR\fR\fI = \fR\fI\fR\fI \fR
.sp
例:
\fI\fIqueueresume command\fR\fR\fI = \fR\fIenable %p\fR\fI \fR
.RE

read list (S)
.\" read list
.PP
.RS 4
これは、サービスに対して読み取りアクセス許可のみを与えられたユーザのリストである。 接続したユーザがこのリスト中に存在する場合、
\m[blue]\fBread only\fR\m[]
パラメータの値がどのように設定されていても、 書き込みアクセス許可は与えられない。 リストには
\m[blue]\fBinvalid users\fR\m[]
パラメータの説明で記述した形式を使って、グループ名を含めることも可能である。
.sp
Samba 3\&.0 系列において、このパラメータは
\m[blue]\fBsecurity = share\fR\m[]
の環境で動作しない。これは仕様である。
.sp
既定値:
\fI\fIread list\fR\fR\fI = \fR\fI\fR\fI \fR
.sp
例:
\fI\fIread list\fR\fR\fI = \fR\fImary, @students\fR\fI \fR
.RE

read only (S)
.\" read only
.PP
.RS 4
\m[blue]\fBwriteable\fR\m[]
の反意語である。
.sp
このパラメータが
\fByes\fR
の場合、 ユーザは、サービスのディレクトリ内におけるファイルの作成も修正もできない。
.sp
印刷サービス(printable = yes)の場合、 ユーザは\fI常に\fR(アクセス権を持っている) ディレクトリに対して書き込むことが可能であるが、書き込みはスプール操作経由に限られる。
.sp
既定値:
\fI\fIread only\fR\fR\fI = \fR\fIyes\fR\fI \fR
.RE

read raw (G)
.\" read raw
.PP
.RS 4
このパラメータは、データをクライアントに転送する際に、 サーバ側で raw read SMB リクエストをサポートするかどうかを設定する。
.sp
有効な場合、 raw read SMB により、1パケットあたり 65535 バイトの読み込みが可能となる。 これは性能の向上に大きく貢献する。
.sp
ただし、クライアントによっては、ブロックサイズを誤認識したり、 大きなブロックサイズを利用できなかったりするので、その場合は、 raw read を無効にする必要があるだろう。
.sp
このパラメータは、システムのチューニングパラメータであり、 通常は設定を変更すべきものではない。
.sp
既定値:
\fI\fIread raw\fR\fR\fI = \fR\fIyes\fR\fI \fR
.RE

realm (G)
.\" realm
.PP
.RS 4
このオプションは、使用する Kerberos レルムを指定する。 レルムは Windows NT 4\&.0 におけるドメインに相当する Active Directory の概念である。 レルムには、通常 Kerberos サーバの DNS 名が設定される。
.sp
既定値:
\fI\fIrealm\fR\fR\fI = \fR\fI\fR\fI \fR
.sp
例:
\fI\fIrealm\fR\fR\fI = \fR\fImysambabox\&.mycompany\&.com\fR\fI \fR
.RE

registry shares (G)
.\" registry shares
.PP
.RS 4
レジストリから参照される共有定義のサポートのオンオフを切り替える。
\fIsmb\&.conf\fR
で定義された共有は、レジストリ内に同じ名前で 定義されたものより優先する。詳細はレジストリベースの設定の章を参照してほしい。
.sp
注意：このパラメータはデフォルトでは
\fIno\fR
であるが、
\fIconfig backend\fR
が
\fIregistry\fR
にセットされている場合は\fIyes\fR
となる。
.sp
既定値:
\fI\fIregistry shares\fR\fR\fI = \fR\fIno\fR\fI \fR
.sp
例:
\fI\fIregistry shares\fR\fR\fI = \fR\fIyes\fR\fI \fR
.RE

remote announce (G)
.\" remote announce
.PP
.RS 4
このオプションにより、
\fBnmbd\fR(8)
は、指定したIPアドレスに対して設定したワークグループ情報を定期的にアナウンスするようになる。
.sp
これは、Samba サーバを通常のブラウズリストの交換ができない別のワークグループ上に表示させたい場合に有用である。 別のワークグループは、IP パケットを送信できるところであればどこにあってもよい。
.sp
以下に例を示す:
.sp
.if n \{\
.RS 4
.\}
.nf
remote announce = 192\&.168\&.2\&.255/SERVERS 192\&.168\&.4\&.255/STAFF
.fi
.if n \{\
.RE
.\}
.sp
上記の設定は、nmbd
が指定された2つのアドレスに対して、 指定されたワークグループ名を使って自身のアナウンスを行なう設定である。 ワークグループ名を指定しなかった場合、
\m[blue]\fBworkgroup\fR\m[]
パラメータで指定された値が代わりに利用される。
.sp
設定するIPアドレスとしては、 通常リモートネットワークのブロードキャストが用いられるが、 ネットワークが安定していれば、マスタブラウザのIPアドレスを指定することもできる。
.sp
Samba HOWTO の Network Browsing 章を参照のこと。
.sp
既定値:
\fI\fIremote announce\fR\fR\fI = \fR\fI\fR\fI \fR
.RE

remote browse sync (G)
.\" remote browse sync
.PP
.RS 4
このオプションにより、
\fBnmbd\fR(8)
が、 別セグメントにある Samba サーバのマスタブラウザと定期的にブラウズリストの同期要求を行なうように構成される。 このオプションにより、 ルーティングされたネットワーク上に存在する複数ワークグループからなるブラウズリストを構築することが可能になる。 これは Samba 固有の方式で動作するため、 Samba 以外のサーバでは機能しない。
.sp
これは、Samba サーバおよび同じセグメント上のクライアントマシンを、 通常のブラウズリストの交換ができない別のワークグループ上に表示させたい場合に有用である。 別のワークグループは、IP パケットを送信できるところであればどこにあってもよい。
.sp
以下に例を示す:
.sp
.if n \{\
.RS 4
.\}
.nf
\fIremote browse sync = 192\&.168\&.2\&.255 192\&.168\&.4\&.255\fR
.fi
.if n \{\
.RE
.\}
.sp
上記の設定は、nmbdが指定されたサブネットのマスタブラウザに対して、 ローカルサーバとのブラウズリストの同期を要求する設定である。
.sp
設定するIPアドレスとしては、 通常リモートネットワークのブロードキャストが用いられるが、 ネットワークが安定していればマスタブラウザのIPアドレスを指定することもできる。 IPアドレスが設定された場合、Sambaはそのマシンが起動していて、 要求を待っているかについても、そのセグメントのマスタブラウザであるかどうかについても確認しない。
.sp

\m[blue]\fBremote browse sync\fR\m[]
は、 WINS サーバが存在しない場合も、 ネットワーク毎に異なる WINS サーバを指定している場合にも用いることができる。
.sp
既定値:
\fI\fIremote browse sync\fR\fR\fI = \fR\fI\fR\fI \fR
.RE

rename user script (G)
.\" rename user script
.PP
.RS 4
このパラメータは、以下に記述する特別な条件下において、
\fBsmbd\fR(8)
によって
\fIROOT 権限で\fR
実行されるスクリプトのフルパス名である。
.sp
管理者権限もしくは SeAddUserPrivilege ユーザ権利を保持しているユーザは、（NT4 のドメイン ユーザー マネージャなどから）このスクリプトを実行して、POSIX ユーザの名前を変更することが可能となる。
%uold
および
%unew
という 2 つの変数が利用可能で、各々古いユーザ名と新しいユーザ名とに置換される。 このスクリプトは成功時に 0 を返却し、それ以外の特に 0 以外の値を返却する必要がある。
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBNote\fR
.ps -1
.br
このスクリプトは POSIX 機構でアクセスが行なわれるすべての情報について名前を変更する必要があるが、パスワード機構により必要とされる変更箇所が異なる。 tdbsam と smbpasswd の場合、各ファイル中の情報についての変更は自動的に行なわれるため、スクリプト側では POSIX のユーザ名とホームディレクトリなどの環境依存で必要とされるデータの変更だけを行なえば良い。 ホームディレクトリの名前自体を変更する必要があるかも検討すべきだろう。 ldapsam の場合、LDAP のネーミング属性（LDAP naming attribute）を変更することには潜在的な問題があるため、LDAP 中の情報については全く変更が行なわれない。 この場合、スクリプト側で責任を持って Samba がユーザの識別に用いる属性（UID）および同じディレクトリを利用する他のアプリケーションが参照する情報の変更を行なう必要がある。
.sp .5v
.RE
既定値:
\fI\fIrename user script\fR\fR\fI = \fR\fIno\fR\fI \fR
.RE

reset on zero vc (G)
.\" reset on zero vc
.PP
.RS 4
この真偽値オプションは、到着したセッションセットアップが、 同一の IP アドレスからの別のセッションを切断するかを制御する。 これは Windows Server 2003 のデフォルトの挙動である。 ネットワークが不安定で、 Windows が、古い接続がファイルを共有モードでオープンしているにも関わらず、再接続を試行してしまうような環境では、このパラメータを yes にする必要があるだろう。 これらのファイルは、新しい接続経由ではアクセスできなくなるが、 クライアントが新しい接続中で 0 VC を送信すると、Windows Server 2003 は同一の IP が送信元のすべての他の接続を切断する。 これにより、ロックされたファイルが再度アクセスできるようになる。 このオプションを有効にすると、ルータで同一 IP アドレスに隠蔽されている接続も切断されてしまうことに注意。
.sp
既定値:
\fI\fIreset on zero vc\fR\fR\fI = \fR\fIno\fR\fI \fR
.RE

restrict anonymous (G)
.\" restrict anonymous
.PP
.RS 4
このパラメータは、ユーザやグループの一覧情報を匿名接続に対して返却するかどうかを制御するものである。 このパラメータは Windows NT や Windows 2000 の
.sp
.if n \{\
.RS 4
.\}
.nf
HKEY_LOCAL_MACHINE\eSYSTEM\eCurrentControlSet\eControl\eLSA\eRestrictAnonymous
.fi
.if n \{\
.RE
.\}
.sp
レジストリキーに相当するものである。 0 に設定された場合、ユーザやグループの一覧情報は誰に対しても返却される。 1 に設定された場合、認証済のユーザのみがユーザやグループの一覧情報を取得できる。 2 に設定された場合、匿名接続は一切拒否される。なおこの値は Windows 2000/XP や Samba でのみサポートされる。 これは匿名接続での操作が実行される前提のサードパーティおよび Microsoft のアプリケーションで問題を引き起こすことがある。
.sp
restrict anonymous = 1 を用いることによるセキュリティ上の利点があるかどうかは疑わしい。これはユーザやグループの一覧情報を別の方法を用いて取得することが可能であるためである。
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBNote\fR
.ps -1
.br
restrict anonymous = 2 を用いることによるセキュリティ上の利点は、いずれかの共有において
\m[blue]\fBguest ok = yes\fR\m[]
の設定を行なうことで損なわれてしまうことに注意。
.sp .5v
.RE
既定値:
\fI\fIrestrict anonymous\fR\fR\fI = \fR\fI0\fR\fI \fR
.RE

root
.\" root
.PP
.RS 4
このパラメータは右記のパラメータの別名である：root directory\&.
.RE

root dir
.\" root dir
.PP
.RS 4
このパラメータは右記のパラメータの別名である：root directory\&.
.RE

root directory (G)
.\" root directory
.PP
.RS 4
サーバの起動時に、このディレクトリへ
chroot()
(ルートディレクトリの変更)が行なわれる。 これは、安全のため絶対に必要というものではない。 この設定がなくても、サービスの提供するディレクトリ配下にないファイルへのアクセスは許可されない。 また、ファイルシステムへの他の部分へのシンボリックリンクや、 ファイル名に「\&.\&.」をつけて他のディレクトリにアクセスするような行為をチェックして、 アクセスを拒否することもできる (\m[blue]\fBwide links\fR\m[]
パラメータの設定に依存する)。
.sp
\fIroot directory\fR
として「/」以外を指定した場合は、 代償もあるが、非常に強固なセキュリティが実現される。
\fIroot directory\fR
オプションで指定されたディレクトリのサブディレクトリ以外にあるファイルへは、 サーバの動作に必要なファイルも\fI含め\fR、 一切アクセスできない。サーバを動作させるには、
\fIroot directory\fR
内に必要なシステムファイルをコピーしておく必要がある。 例えば
/etc/passwd
(またはその一部)や、 印刷に必要となる設定ファイルやバイナリなどを（場合によっては）コピーする必要がある。 コピーしなければならないファイルは、オペレーティングシステムに依存する。
.sp
既定値:
\fI\fIroot directory\fR\fR\fI = \fR\fI/\fR\fI \fR
.sp
例:
\fI\fIroot directory\fR\fR\fI = \fR\fI/homes/smb\fR\fI \fR
.RE

root postexec (S)
.\" root postexec
.PP
.RS 4
このパラメータは、 コマンドが root で実行されることを除き、
\fIpostexec\fR
パラメータと同一である。 このコマンドは、コネクションの切断後に(CD\-ROMなどの)ファイルシステムをアンマウントするのに便利である。
.sp
既定値:
\fI\fIroot postexec\fR\fR\fI = \fR\fI\fR\fI \fR
.RE

root preexec (S)
.\" root preexec
.PP
.RS 4
このパラメータは、 コマンドが root で実行されることを除き、
\fIpreexec \fR
パラメータと同一である。 このコマンドは、コネクションの開始時に(CD\-ROMなどの)ファイルシステムをマウントするのに便利である。
.sp
既定値:
\fI\fIroot preexec\fR\fR\fI = \fR\fI\fR\fI \fR
.RE

root preexec close (S)
.\" root preexec close
.PP
.RS 4
このパラメータは、 コマンドが root で実行されることを除き、
\fIpreexec close \fR
パラメータと同一である。
.sp
既定値:
\fI\fIroot preexec close\fR\fR\fI = \fR\fIno\fR\fI \fR
.RE

security (G)
.\" security
.PP
.RS 4
このオプションは、 クライアントがどのように Samba に応答するかを決めるものであり、
smb\&.conf
中でもっとも重要な設定の 1 つである。
.sp
このオプションは、
\fBsmbd\fR(8)
とのプロトコルネゴシエーション時の応答に含まれる、 "security mode bit"を設定し、共有レベルのセキュリティを使用するか否かを 制御する。クライアントは、このbitを元にして、ユーザとパスワードの情報をサーバに転送 するかどうか、また転送する際の方法を決定する。
.sp
デフォルトは、security = user
であり、 これは Windows 98 と Windows NT との間で通信を行なうときに必要とされるもっとも一般的な設定(訳注: ユーザレベルのセキュリティ)である。
.sp
その他に
security = share、
security = server、
security = domain
が設定可能な値である。 (訳注:
security = adsも設定可能)
.sp
2\&.0\&.0 以前のバージョンの Samba では、 主に過去との互換性を保つ目的で、
security = share
がデフォルトであった。
.sp
Windows for Workgroups(WfWg) には、 このオプションの設定時に注意すべきバグがある。 このパラメータが user もしくは server の場合、WfWg クライアントは、 "connect drive"ダイアログボックスで入力したパスワードを完全に無視してしまう。 そのため、WfWg にログオンしたユーザ以外のユーザで、Samba の サービスに 接続することが(不可能でない場合でも)非常に難しくなっている。
.sp
PC上で UNIX マシン上と同じユーザ名を使う場合は、
security = user
を用いるとよいだろう。 UNIX マシン上にないユーザ名を使っている場合は、
security = share
を使う必要がある。
.sp
パスワードなしの共有(ゲスト共有)の作成が主目的である場合も、
security = share
を使った方がよいであろう。 この設定は、通常共有プリンタサーバで使われることが多い。
security = user
の設定で、 ゲスト共有を作成するのは、多少複雑になる。 詳細については、\m[blue]\fBmap to guest\fR\m[]
パラメータを参照のこと。
.sp

\m[blue]\fBNetBIOS aliases\fR\m[]
を用いることで、 ユーザレベルと共有レベルのセキュリティの両方を提供する
\fI混在モード(hybrid mode)\fR
で
smbdを運用することも可能である。
.sp
以下、それ以外の設定について説明する。
.sp
\fISECURITY = SHARE\fR
.sp
共有レベルのセキュリティに構成されたサーバに接続するクライアントは、 共有リソースに接続しようとする際に、 適切なユーザ名とパスワードでサーバにログオンしておく必要がない (最近の Windows 95/98 や Windows NT は、
security=share
のサーバと通信をする際にユーザ名を設定してログオン要求を送るが、パスワードは送らない)。 そのかわり、クライアントは、共有への接続時に共有毎に認証情報(パスワード)を送信する。
.sp
security=share
レベルのセキュリティで構成されていた場合であっても、
smbd
がクライアントからの要求を処理する際には\fI常に\fR
UNIX 上のいずれかのユーザの権限で処理が行なわれる点に注意。
.sp
共有レベルのセキュリティでは、 クライアントがユーザ名をサーバに送るように要求されないため、
smbd
は、いくつかの方法を用いて、 クライアントの要求を処理する際に利用する UNIX 上のユーザを決定する。
.sp
クライアントから送られてきたパスワードの確認対象となる UNIX 側のユーザのリストは、以下のようにして生成される:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\m[blue]\fBguest only\fR\m[]
パラメータが設定されている場合、以下の手順は省略され、
\m[blue]\fBguest account\fR\m[]
に設定されたユーザ名のみが確認対象となる。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
共有への接続時にユーザ名も送られてきた場合、 そのユーザ名(変換後のもの \-
\m[blue]\fBusername map\fR\m[]
を参照のこと) が確認対象のユーザ名に追加される。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
クライアントが以前に
\fIログオン \fR
要求 (SessionSetup SMB 呼び出し) を行なっていた場合、 その SMB 呼び出し中で送られたユーザ名が確認対象のユーザ名に追加される。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
クライアントが接続しようとしているサービスの名前が、 確認対象のユーザ名に追加される。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
クライアントの NetBIOS 名が、 確認対象のユーザ名に追加される。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}

\m[blue]\fBuser\fR\m[]
リスト中のユーザ名が確認対象のユーザ名に追加される。
.sp
.RE
\fIguest only\fR
パラメータが設定されていないと、 このリスト中のユーザ名を用いて、送信されたパスワードの確認が行なわれる。 送信されたパスワードが最初に一致したユーザが、 以降の処理に用いられる UNIX 上のユーザとして利用される。
.sp

\fIguest only\fR
パラメータが設定されているか、 利用するユーザを決定できなかった場合、 共有で
\fI guest account \fR
が利用可能であれば、 ゲストアクセスが行なわれ、それ以外の場合はアクセスが拒否されることになる。
.sp
共有レベルのセキュリティでは、 どの UNIX 上のユーザを用いてアクセス権のチェックが行なわれるかの判断が、
\fI非常に\fR
複雑になる事態が想定されることに注意。
.sp
ユーザ名とパスワード認証についての注意
のセクションも参照のこと。
.sp
\fISECURITY = USER\fR
.sp
これは、Samba 3\&.0 におけるデフォルトのセキュリティ設定である。 ユーザレベルのセキュリティにおいては、クライアントは最初に正しいユーザ名とパスワード (\m[blue]\fBusername map\fR\m[]
パラメータを使ってマッピングしたものでもよい)で"ログオン"を行なう必要がある。 このセキュリティレベルでは、暗号化パスワード(
\m[blue]\fBencrypted passwords\fR\m[]
パラメータを参照のこと) も使うことができる。
\m[blue]\fBuser\fR\m[]
や
\m[blue]\fBguest only\fR\m[]
のようなパラメータを利用して、この接続で利用するUNIX上のユーザを変更することもできるが、 これはユーザ認証に成功した後で、行なわれる。
.sp
\fI注意\fR
: 要求されたリソース名は、 サーバがクライアントの認証に成功するまでサーバに\fI送られない\fR。 そのため、ユーザレベルのセキュリティでは、サーバ上で不明なユーザを自動的に
\m[blue]\fBguest account\fR\m[]
として処理するようにしない限り、ゲスト共有がうまく動作しない。 上記処理の詳細については、
\m[blue]\fBmap to guest\fR\m[]
パラメータを参照のこと。
.sp
ユーザ名とパスワード認証についての注意
のセクションも参照のこと。
.sp
\fISECURITY = DOMAIN\fR
.sp
このモードは、
\fBnet\fR(8)
コマンドで、 マシンを Windows NT ドメインに参加させている時のみ正しく動作する。 このモードでは、\m[blue]\fBencrypted passwords\fR\m[]
パラメータを
\fByes\fR
にすることが求められる。このモードでは、Samba は認証要求を Windows NT のプライマリ、 もしくはバックアップドメインコントローラに対して、 Windows NT Server と全く同様の方法で依頼する。
.sp
\fI注意\fR: ファイルアクセスを行なう際に、 Samba は UNIX 上のアカウントを用いる必要があるため、 ドメインコントローラ上のアカウントだけでなく、 UNIX 上のアカウントも依然として 存在する必要がある。
.sp
\fI注意\fR: クライアントからは、
security=domain
と
security=user
とは同一である。 このパラメータは、サーバがどのように認証を行なうかにのみ影響し、 クライアントとのやりとりには何ら影響しない。
.sp
\fI注意\fR
: 要求されたリソース名は、 サーバがクライアントの認証に成功するまでサーバに\fI送られない\fR。 サーバ上で不明なユーザを自動的に
\m[blue]\fBguest account\fR\m[]
として処理するようにしない限り、ゲスト共有がうまく動作しない。 上記処理の詳細については、\m[blue]\fBmap to guest\fR\m[]
パラメータを参照のこと。
.sp
ユーザ名とパスワード認証についての注意
のセクションも参照のこと。
.sp
\m[blue]\fBpassword server\fR\m[]パラメータおよび
\m[blue]\fBencrypted passwords\fR\m[]パラメータも参照のこと。
.sp
\fISECURITY = SERVER\fR
.sp
このモードの場合、 Samba はまず NT マシンのような別の SMB サーバにユーザ名とパスワードの認証を依頼する。 これに失敗すると、security = user
と同様に処理を行なう。このモードを用いる場合は、リモートサーバが対応していない場合を 除き、\m[blue]\fBencrypted passwords\fR\m[]パラメータを
\fByes\fR
にする必要がある。なお、暗号化パスワードで認証処理が行なわれると、 Samba 上で UNIX パスワードファイルでの認証(平文認証)に戻れなくなるため、ユーザの認証 は
smbpasswd
ファイルで行なう必要がある。 設定方法の詳細は、 Samba HOWTO collection 中の User Database の章を参照のこと。
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBNote\fR
.ps -1
.br
このモードの処理には、中間介入攻撃(man\-in\-the\-middle attack)やサーバの偽装に脆弱で あるという重大な落し穴がある。また、ユーザのセッションが継続している間、アクティブな コネクションを維持しておく必要があるため、 PDC のリソースを非常に多く消費する恐れある。 さらに、このコネクションがいったん失われると、回復させることができず、それ以降(個々の クライアントがコネクションを一度切断するまでの間) Samba サーバに対する認証は失敗して しまう。
.sp .5v
.RE
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBNote\fR
.ps -1
.br
クライアントからは、
security=server
と
security=user
とは同一である。 このパラメータは、サーバがどのように認証を行なうかにのみ影響し、 クライアントとのやりとりには何ら影響しない。
.sp .5v
.RE
\fI注意\fR
: 要求されたリソース名は、 サーバがクライアントの認証に成功するまでサーバに\fI送られない\fR。 そのため、ユーザレベルのセキュリティでは、サーバ上で不明なユーザを自動的に
\m[blue]\fBguest account\fR\m[]\&. として処理するようにしない限り、ゲスト共有がうまく動作しない。 上記処理の詳細については、\m[blue]\fBmap to guest\fR\m[]
パラメータを参照のこと。
.sp
ユーザ名とパスワード認証についての注意
のセクションも参照のこと。
.sp

\m[blue]\fBpassword server\fR\m[]
パラメータおよび
\m[blue]\fBencrypted passwords\fR\m[]
パラメータも参照のこと。
.sp
\fISECURITY = ADS\fR
.sp
このモードの場合、Samba は ADS レルムのドメインメンバーとして振舞う。 このモードで動作させるためには、Samba が実行されているマシンに Kerberos が インストールされて構成されていることが必要であり、Samba は net ユーティリティを 使用して ADS レルムに参加する必要がある。
.sp
このモードは Samba を Active Ditectory のドメインコントローラとして動作さ せるものではないことに注意。
.sp
詳細については、HOWTO の Domain Membership の章を熟読のこと。
.sp
既定値:
\fI\fIsecurity\fR\fR\fI = \fR\fIUSER\fR\fI \fR
.sp
例:
\fI\fIsecurity\fR\fR\fI = \fR\fIDOMAIN\fR\fI \fR
.RE

security mask (S)
.\" security mask
.PP
.RS 4
このパラメータは、 Windows NT クライアント上から、 NT 上のセキュリティダイアログボックスを使って UNIX ファイルのパーミッションを操作するときに、 どのパーミッションビットを変更可能にするかを制御する。
.sp
このパラメータは、変更されるパーミッションのビットに対する論理積(AND)操作 を行なうマスクとして機能するため、マスク中に含まれないビットに対する変更操作が 制限される。このパラメータを、論理積(AND)操作ではなく論理和(OR)操作を行なう類似 パラメータである
\m[blue]\fBforce security mode\fR\m[]
パラメータと混同しないこと。
.sp
基本的に、このマスク中ですべてのビットを0に設定することは、ファイル上の、 このビットの以前のステータスにかかわらず、ファイルのパーミッション上の 対応するビットを0に設定する結果となる。
.sp
明示的に設定されていない場合、このパラメータの値は 0777 になる。これは、 ファイルの user/group/world パーミッションのすべてについて、 ユーザからの変更を許可する。
.sp
Samba を経由せずサーバにアクセスできるユーザは、 簡単にこの制限を回避できるため、 このパラメータが有用なのは、単体の"アプライアンス"システムに対してである。 ほとんどの一般的なシステムの管理者は、 おそらく
\fB0777\fR
に設定することであろう。
.sp
既定値:
\fI\fIsecurity mask\fR\fR\fI = \fR\fI0777\fR\fI \fR
.sp
例:
\fI\fIsecurity mask\fR\fR\fI = \fR\fI0770\fR\fI \fR
.RE

server schannel (G)
.\" server schannel
.PP
.RS 4
このパラメータは、サーバが netlogon のセキュアチャネルを提供するかどうかを制御する。
\m[blue]\fBserver schannel = no\fR\m[]
の場合、セキュアチャネルは提供されない。
\m[blue]\fBserver schannel = auto\fR\m[]
の場合セキュアチャネルが提供されるが強制はされない。
\m[blue]\fBserver schannel = yes\fR\m[]
の場合、クライアントが netlogon のセキュアチャネルを認識できない場合は接続が拒否される。 これに該当するのは Windows NT 4\&.0 SP4 以前のみである。
.sp
このパラメータを
no
に設定した場合、 Windows XP マシンには Samba アーカイブの docs/Registry サブディレクトリ中にある
WinXP_SignOrSeal\&.reg
ファイルを適用してレジストリを修正する必要があることに注意。
.sp
既定値:
\fI\fIserver schannel\fR\fR\fI = \fR\fIauto\fR\fI \fR
.sp
例:
\fI\fIserver schannel\fR\fR\fI = \fR\fIyes\fR\fI \fR
.RE

server signing (G)
.\" server signing
.PP
.RS 4
このパラメータは、SMB署名を使うために、通信先のクライアントに対して、使用を有効にするか、もしくは要求するかを設定する。 設定可能な値は、\fIauto\fR、\fImandatory\fR、\fIdisabled\fR
である。
.sp
auto に設定した場合、SMB 署名が有効になるが、強制はしない。 mandatory に設定すると、SMB 署名が必須となる。disable に設定すると、SMB 署名は有効にならない。
.sp
既定値:
\fI\fIserver signing\fR\fR\fI = \fR\fIDisabled\fR\fI \fR
.RE

server string (G)
.\" server string
.PP
.RS 4
このパラメータにより、プリンタマネージャにおける各プリンタのコメント欄および
net view
において IPC 接続の横に表示されるテキストが設定される。ユーザに表示させたい任意のテキストを設定することができる。
.sp
このパラメータにより、ブラウズリストでコンピュータ名の横に表示されるテキストも設定される。
.sp
\fI%v\fR
は、 Samba のバージョン番号に置換される。
.sp
\fI%h\fR
は、ホスト名に置換される。
.sp
既定値:
\fI\fIserver string\fR\fR\fI = \fR\fISamba %v\fR\fI \fR
.sp
例:
\fI\fIserver string\fR\fR\fI = \fR\fIUniversity of GNUs Samba Server\fR\fI \fR
.RE

set directory (S)
.\" set directory
.PP
.RS 4
set directory = no
の場合、 サービスの利用者が、 ディレクトリ変更のための setdir コマンドを使えなくなる。
.sp

setdir
コマンドは Digital Pathworks クライアントにおいてのみ実装されている。 詳細については、Pathworks の説明書を参照のこと。
.sp
既定値:
\fI\fIset directory\fR\fR\fI = \fR\fIno\fR\fI \fR
.RE

set primary group script (G)
.\" set primary group script
.PP
.RS 4
NT の POSIX サブシステムのおかげで、 Windows ユーザには、 auxiliary (補助)グループに加えて、 プライマリグループを設定することができる。 このスクリプトにより、管理者が Windows のユーザマネージャからプライマリグループを設定したり、
net rpc vampire
により SAM を取得したりした際に、 UNIX のユーザデータベースのプライマリグループが設定される。
\fI%u\fR
は、プライマリグループを設定するユーザに置き換えられる。
\fI%g\fR
は設定されるグループ名に置き換えられる。
.sp
既定値:
\fI\fIset primary group script\fR\fR\fI = \fR\fI\fR\fI \fR
.sp
例:
\fI\fIset primary group script\fR\fR\fI = \fR\fI/usr/sbin/usermod \-g \'%g\' \'%u\'\fR\fI \fR
.RE

set quota command (G)
.\" set quota command
.PP
.RS 4
set quota command
は Samba が実行されている OS 上で、API が提供されていない場合に限り使用すべきである。
.sp
このオプションは、必ず
\&./configure \-\-with\-sys\-quotas
が指定されているときのみ有効である。 もしくは Linux において
\&./configure \-\-with\-quotas
が指定され、システムにクオータの API が存在し、機能する場合にのみ使用できる。 ほとんどのパッケージでは、これらのオプションを指定して構成されている。
.sp
このパラメータは、引数を指定することで、クオータの設定を行なうスクリプトへのパスを指定する。
.sp
このスクリプトは以下の引数をとる:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
1 \- クオータのタイプ
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
1 \- ユーザのクオータ
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
2 \- ユーザのデフォルトのクオータ (uid = \-1)
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
3 \- グループのクオータ
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
4 \- グループのデフォルトのクオータ (gid = \-1)
.sp
.RE
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
2 \- id (ユーザの uid もしくはグループの gid 。 \-1 を指定した場合はどちらともみなされない)
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
3 \- クオータの状態 (0 = 無効, 1 = 有効, 2 = 有効かつ強制)
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
4 \- ブロック数のソフトウェア的な上限
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
5 \- ブロック数のハードウェア的な上限
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
6 \- inode 数のソフトウェア的な上限
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
7 \- inode 数のハードウェア的な上限
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
8(オプション) \- ブロックサイズ、デフォルトは 1024
.sp
.RE
このスクリプトは少なくとも1行のデータ行を出力する必要がある。ただし処理が成功しなかった場合は何も出力されない。
.sp
既定値:
\fI\fIset quota command\fR\fR\fI = \fR\fI\fR\fI \fR
.sp
例:
\fI\fIset quota command\fR\fR\fI = \fR\fI/usr/local/sbin/set_quota\fR\fI \fR
.RE

share:fake_fscaps (G)
.\" share:fake_fscaps
.PP
.RS 4
これはある種の、SPARSE_FILESビット(0x40)を設定しているかどうかを調べるために QFSINFOコールを行う、特別なアプリケーションをサポートするために必要である。 もしもこのビットが設定されていない場合、特定のアプリケーションはSambaに 対して動作できなくなる。
\m[blue]\fBshare:fake_fscaps = 64\fR\m[]を使うと SPARSE_FILESファイルシステムケーパビリティフラグがセットされる。 ビットマスクを指定する他の10進値はごまかす(fake)ために必要である。
.sp
既定値:
\fI\fIshare:fake_fscaps\fR\fR\fI = \fR\fI0\fR\fI \fR
.RE

share modes (S)
.\" share modes
.PP
.RS 4
このパラメータは、ファイルオープン中の
\fIshare modes\fR
の制御を有効にするかどうかを設定する。 このモードは、ファイルへの排他的な読み出し又は書き込みアクセスを得るために、クライアントによって利用されるものである。
.sp
以前のSambaとの互換性のために存在するが、次のメジャー アップグレードで廃止される予定である。
.sp
これらのモードは、UNIX では提供されていないため、 共有メモリで疑似的に実現されている。
.sp
このパラメータによって、Windowsの標準的な共有モードが 実現される。
.sp
このオプションは共有機能の互換性を保つため、 デフォルトで有効になっている。
.sp
このパラメータは、
\fI絶対に\fR
off にしてはならない。 off にした場合、多くの Windows アプリケーションが誤動作するであろう。
.sp
既定値:
\fI\fIshare modes\fR\fR\fI = \fR\fIyes\fR\fI \fR
.RE

short preserve case (S)
.\" short preserve case
.PP
.RS 4
この真偽値パラメータは、 すべて大文字で適切な長さという 8\&.3 形式の条件を満たすファイル名を大文字のファイル名にして作成するか、
\m[blue]\fBdefault case\fR\m[]
パラメータに従って作成するかを指定する(訳注: 実際は、8+3 形式の名前において大文字小文字の混在を容認するか、規定値の文字指定に統一するかを制御する)。 このオプションは、
\m[blue]\fBpreserve case = yes\fR\m[]
を用いて長いファイル名の大文字小文字の情報を保持している際に、 短いファイル名における大文字小文字の情報を保持するために利用する。
.sp
名前の短縮セクションも参照のこと。
.sp
既定値:
\fI\fIshort preserve case\fR\fR\fI = \fR\fIyes\fR\fI \fR
.RE

show add printer wizard (G)
.\" show add printer wizard
.PP
.RS 4
Samba 2\&.2 での Windows NT/2000 クライアントに対する MS\-RPC ベースのプリンタサポート機能のサポートによって、 Samba ホスト上の共有一覧で「プリンタ」フォルダが表示されようになっている。 通常、このフォルダにはプリンタの追加ウィザード (MS Add Printer Wizard (APW))のアイコンが存在している。 しかし、接続したユーザの権限に関わらず、 この機能を無効にすることも可能である。
.sp
通常の場合、Windows NT/2000 クライアントは Administrator 権限を持っているかどうかを確認するために、 OpenPrinterEx() 関数により、プリンタサーバ上のハンドルをオープンしようとする。 ユーザにプリンタサーバ上での管理者権限がない場合 (root でなく、\fIprinter admin\fR
グループのメンバでもない)、 OpenPrinterEx() の呼出は失敗して、 client は低い権限でも可能な別の関数呼出を行なう。 これに成功しても、APW のアイコンは表示されない。
.sp
\fIshow add printer wizard\fR
パラメータを無効にすることにより、サーバ上での OpenPrinterEx() 呼出が常に失敗するようになる。 そのため、APW のアイコンは決して表示されなくなる。
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBNote\fR
.ps -1
.br
このパラメータは、ユーザが個々のプリンタの管理権限を持つことを制限するものではない。
.sp .5v
.RE
既定値:
\fI\fIshow add printer wizard\fR\fR\fI = \fR\fIyes\fR\fI \fR
.RE

shutdown script (G)
.\" shutdown script
.PP
.RS 4
このパラメータは、
\fBsmbd\fR(8)
が呼び出すことで、 シャットダウン処理を実行するスクリプトのフルパス名である。
.sp
サーバに接続しているユーザが
\fBSeRemoteShutdownPrivilege\fR
権利を有している場合、 このコマンドはroot権限で実行される。
.sp
%m %t %r %f パラメータは以下のように展開される:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fI%m\fR
はサーバに送信されるシャットダウンメッセージに置換される。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fI%t\fR
は実際にシャットダウン処理が開始されるまでに待機する時間(秒単位)に置換される。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fI%r\fR
は
\fI\-r\fR
スイッチに置換される。これは NT の「シャットダウン後再起動」を意味する。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fI%f\fR
は
\fI\-f\fR
スイッチに置換される。これは NT の「アプリケーションが応答しない場合でも強制的にシャットダウンする」を意味する。
.sp
.RE
シャットダウンスクリプト例を以下に示す:
.sp
.if n \{\
.RS 4
.\}
.nf
#!/bin/bash
		
time=$2
let time="${time} / 60"
let time="${time} + 1"

/sbin/shutdown $3 $4 +$time $1 &

.fi
.if n \{\
.RE
.\}
.sp
シャットダウン処理から復帰することはないので、この処理はバックグラウンドで実行する必要がある。
.sp
既定値:
\fI\fIshutdown script\fR\fR\fI = \fR\fI\fR\fI \fR
.sp
例:
\fI\fIshutdown script\fR\fR\fI = \fR\fI/usr/local/samba/sbin/shutdown %m %t %r %f\fR\fI \fR
.RE

smb encrypt (S)
.\" smb encrypt
.PP
.RS 4
これは、Samba3\&.2以降で導入された新機能である。この機能は、SMB/CIFS プロトコルを拡張し、UNIX拡張機能の一部としてネゴシエートされる。 SMB暗号化は、SMBプロトコルストリーム中のすべてのリクエスト/レスポンス に対し、暗号化と署名を行うためにGSSAPI(Windows上のSSPI)を使う。 SMB暗号化を有効にすると、SMB/CIFSの通信がセキュアな方式で実行される。 これは、sshの保護されたセッションと似ているが、 暗号化のネゴシエートとキーの署名のためにはSMB/CIFS認証が用いられる。 現在、これは、Samba 3\&.2のsmbclientのみでサポートされているが、 そのうちLinuxのCIFSFSとMacOS/Xクライアントで使えるようになるだろう。 Windowsクライアントはこの機能をサポートしない。
.sp
この機能はサーバーが通信相手のクライアントに対してSMB暗号化を 提供、あるいは要求するかどうかを制御する。 利用できる値は、\fIauto\fR,
\fImandatory\fR
と\fIdisabled\fRである。これは、共有毎に設定できるが、 クライアントはすべてのセッション全体を暗号化するかもしれないし、 特定の共有へのトラフィックだけ暗号化を利用しないかもしれない。 もしもこれが mandatory に設定された場合、その共有へ接続が行われると、 その共有へのすべてのトラフィックは暗号化されなければ
\fIならない\fR。 そのような共有に対して、暗号化されていないアクセスがあると、 サーバーは「アクセス拒否」を返却する。 トラフィックが暗号化されると、 すべてのデータについて署名と暗号化のオーバヘッドが発生するだけでなく、 小さいパケットサイズを用いる必要がある（UNIX形式の巨大なサイズでの読み取り/書き込みを用いることができない）ため、スループットが減少する。
.sp
SMB暗号化が用いられると、Windows形式のSMB署名(\m[blue]\fBserver signing\fR\m[]
を参照)はもはや必要でなくなり、GSSAPIフラグがデータの暗号化と署名と暗号化の両方で使われる。
.sp
パラメータの値をautoに設定すると、SMB暗号化が提供されるが、強制はされない。 mandatoryに設定すると、SMB暗号化が要求される。disableに設定すると、 SMB暗号化は利用できない。
.sp
既定値:
\fI\fIsmb encrypt\fR\fR\fI = \fR\fIauto\fR\fI \fR
.RE

smb passwd file (G)
.\" smb passwd file
.PP
.RS 4
このオプションにより、暗号化された smbpasswd ファイルへのパスが設定される。 デフォルトの smbpasswd ファイルへのパスは、 Samba のコンパイル時に設定される。
.sp
以下に設定例を示す:
.sp
.if n \{\
.RS 4
.\}
.nf
smb passwd file = /etc/samba/smbpasswd
.fi
.if n \{\
.RE
.\}
.sp
既定値:
\fI\fIsmb passwd file\fR\fR\fI = \fR\fI${prefix}/private/smbpasswd\fR\fI \fR
.RE

smb ports (G)
.\" smb ports
.PP
.RS 4
サーバが SMB トラヒックを町受けるポートを設定する。
.sp
既定値:
\fI\fIsmb ports\fR\fR\fI = \fR\fI445 139\fR\fI \fR
.RE

socket address (G)
.\" socket address
.PP
.RS 4
このオプションは、 Samba がどのアドレスで接続を listen するかを設定する。 これは、サーバ上で複数の仮想インタフェースを用いる必要があり、 各々のインタフェース上で 異なる構成の Samba を動作させる際に利用できる。
.sp
通常はnmbdは1つしか起動しないため、このオプションを指定する必要はない。
.sp
既定値では、Sambaは全てのアドレスへの接続を受け付ける。
.sp
既定値:
\fI\fIsocket address\fR\fR\fI = \fR\fI\fR\fI \fR
.sp
例:
\fI\fIsocket address\fR\fR\fI = \fR\fI192\&.168\&.2\&.20\fR\fI \fR
.RE

socket options (G)
.\" socket options
.PP
.RS 4
このオプションは、クライアントとの通信に利用されるソケットオプションを設定する。
.sp
ソケットオプションは、 OS のネットワーク層の接続に影響し、通信の最適化に利用されるものである。
.sp
このオプションは、各ネットワークにおける Samba サーバの性能の最適化に用いられることが多い。 Samba 自身がネットワークにおける最適のパラメータを知るすべはないので、このオプションは、自分自身で実験して設定しなければならない。設定を行なう前に、使用している OS の適切なドキュメント (恐らく
man setsockopt
が役立つだろう) を読むことを強く推奨する。
.sp
システムによっては、このオプションを設定すると、 Samba が「Unknown socket option」というメッセージを返却するようになるかもしれない。この原因は、ミスタイプか、 includes\&.h に使用している OS の include ファイルを追加する必要があるかのいずれかであろう。後者の場合は、samba\-technical@samba\&.org
までパッチを送ってほしい。
.sp
サポートされているソケットオプションについては、 OS の制約がない限り、どれでもどのような組合せでも用いることができる。
.sp
以下に現在このオプションで設定可能なソケットオプションの一覧を示す:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
SO_KEEPALIVE
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
SO_REUSEADDR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
SO_BROADCAST
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
TCP_NODELAY
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
IPTOS_LOWDELAY
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
IPTOS_THROUGHPUT
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
SO_SNDBUF *
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
SO_RCVBUF *
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
SO_SNDLOWAT *
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
SO_RCVLOWAT *
.sp
.RE
\fI\'*\'\fR
印のあるオプションは、整数の引数を必要とする。それ以外のものは、 1 または 0 の引数で有効、無効を指定することもできるが、 1 または 0 を指定しない場合は、有効に設定される。
.sp
引数を指定する場合は、SO_SNDBUF = 8192
のように、 SOME_OPTION = VALUE という形式で指定する。 = 記号の前後に空白を入れてはいけない。
.sp
ローカルネットワーク以外を考慮しなくても良い場合、
.sp
socket options = IPTOS_LOWDELAY
.sp
と設定するのがよいであろう。
.sp
ローカルネットワークが存在する場合は以下の設定を試してみるとよいであろう:
.sp
socket options = IPTOS_LOWDELAY TCP_NODELAY
.sp
WAN の場合は、 IPTOS_THROUGHPUT を設定してみるとよいかも知れない。
.sp
これらのオプションの中には、 Samba サーバを完全に停止させるものもあるかもしれない。オプションを設定する際には気をつけること。
.sp
既定値:
\fI\fIsocket options\fR\fR\fI = \fR\fITCP_NODELAY\fR\fI \fR
.sp
例:
\fI\fIsocket options\fR\fR\fI = \fR\fIIPTOS_LOWDELAY\fR\fI \fR
.RE

stat cache (G)
.\" stat cache
.PP
.RS 4
このパラメータにより、
\fBsmbd\fR(8)
が、 大文字小文字を区別しない名前のマップ操作を高速化するためにキャッシュを利用するかどうかが設定される。 このパラメータを変更する必要はないであろう。
.sp
既定値:
\fI\fIstat cache\fR\fR\fI = \fR\fIyes\fR\fI \fR
.RE

state directory (G)
.\" state directory
.PP
.RS 4
通常TDBファイルは\fIlock directory\fR
に格納される。Samba 3\&.4\&.0から、
\fIstate directory\fRと
\fIcache directory\fRオプションを使うことで、 持続的データを持つTDBファイルと持続的データを持たないTDBファイルとを 区別することが出来る。
.sp
このオプションは、持続的なデータを含むTDBファイルを格納する ディレクトリを指定する。
.sp
既定値:
\fI\fIstate directory\fR\fR\fI = \fR\fI${prefix}/var/locks\fR\fI \fR
.sp
例:
\fI\fIstate directory\fR\fR\fI = \fR\fI/var/run/samba/locks/state\fR\fI \fR
.RE

store dos attributes (S)
.\" store dos attributes
.PP
.RS 4
このパラメータが設定されると、Samba は DOS のファイル属性(システム、隠し、アーカイブ、読み取り専用)を、 (\m[blue]\fBmap hidden\fR\m[]
や
\m[blue]\fBmap readonly\fR\m[]
パラメータにより制御される) UNIX のパーミッションビットからのマッピングを行なう前に、 ファイルシステムの拡張属性から読み取ろうとする。 このパラメータが設定されると、DOS のファイル属性は、UNIX ファイルシステム上で、各ファイルやディレクトリ毎に割り当てられた拡張属性の領域に格納される。 これ以外のマッピング機構が動作しないようにするため、
\m[blue]\fBmap hidden\fR\m[]、
\m[blue]\fBmap system\fR\m[]、\m[blue]\fBmap archive\fR\m[]、\m[blue]\fBmap readonly\fR\m[]
といったパラメータは無効にする必要がある。 このパラメータは DOS のファイル属性を「user\&.DOSATTRIB」という名前の拡張属性に、 文字列として書き込む。この拡張属性は、クライアントの拡張属性に関するリクエスト からは明示的に隠蔽されている。Linux において拡張属性を有効にするには、Linux カーネルで拡張属性がコンパイルされており、ファイルシステムが user_xattr オプションをつけてマウントされている必要がある。 Samba 3\&.5\&.0以降では、「user\&.DOSATTRIB」という名前の拡張属性はDOSの属性と 同じように、ファイルの作成時刻を格納するように拡張された。これは後方互換であり、 Samba 3\&.5\&.0とそれ以降のもので作成されたファイルは、それ以前のバージョンのSamba により、引き続きこの拡張属性からDOSのファイル属性を読めるようにしている。しかし、 ここに格納されたファイル作成時刻は読む事が出来ない。通常のファイルシステム メタデータから分離して作成時刻を格納することは、POSIXファイルシステムのトップ レベルにおいて、NTFSセマンティクスを正確に再現することが、Sambaに出来るようになる。
.sp
既定値:
\fI\fIstore dos attributes\fR\fR\fI = \fR\fIno\fR\fI \fR
.RE

strict allocate (S)
.\" strict allocate
.PP
.RS 4
この真偽値パラメータは、サーバ上のディスク領域の割当を制御するものである。 このパラメータが
\fByes\fR
の場合、 サーバは、ファイルが拡張されただけでは実際のディスク領域を割り当てない UNIX 流の動作をやめ、 ファイルがあるサイズで作成されたり、拡張されたりした際に、 実際にディスク領域を割り当てる Windows 流の動作を行なうようになる。 これは、Samba がスパースファイルを作成しなくなることを意味する。 これにより、システムによっては処理が遅くなる。100MB超のような大きな ファイルを扱っている場合、クライアントがタイムアウトになってしまうような 問題に遭遇するかもしれない。
.sp
エクステントベースのファイルシステムを使っている場合、 大量の空間を迅速に割り当てることがSambaで出来る、未書き込みのエクステントを 使う事が出来、strict allocateによって引き起こされた何らかのタイムアウト 問題が発生しなくなるだろう。strict allocateを使っているとき、 quotaを使っている場合は、quotaからのより的確なメッセージが得られるだろう。 この設定を有効にすることによる、その他の利点は、ファイルの断片化を 減少する助けになるということである。
.sp
ファイルシステム上での注目する点を提供するために、この設定は、 現時点でよいオプションであるかもしれない:Linux上でのXFS、ext4、btrfs、 ocfs2と、AIX上でのjfsは、未書き込みのエクステントをサポートする。 それらをサポートしないファイルシステム上では、事前割当は、おそらく、 パフォーマンスが低下する負荷のかかる操作であり、巨大なファイルを作成 するときにクライアントがタイムアウトになる危険性がある。例は、 Ext3、ZFS、HFS+とその他のものであり、それらのファイルシステム上で この設定を有効にするときには気をつけること。
.sp
既定値:
\fI\fIstrict allocate\fR\fR\fI = \fR\fIno\fR\fI \fR
.RE

strict locking (S)
.\" strict locking
.PP
.RS 4
これは、 サーバ上でのロックの扱いを制御する列挙型の値のパラメータである。
\fByes\fR
に設定された場合、 サーバはすべての読み書きのアクセスについてファイルのロック状態を検査し、 ロックされている場合はアクセスを拒否する。 システムによっては、アクセス速度の低下につながるだろう。
.sp
strict locking が Auto (既定値)の場合、サーバは oplock が行なわれていないファイルについてのみ、ロック状態の検査を行なう。 Windows のリダイレクタの多くは、oplock が行なわれているファイルについてはファイルロックのチェックをローカルで実施しているため、 この設定は、パフォーマンス低下とのうまいトレードオフを実現している。
.sp
strict locking が無効の場合、 サーバは、クライアントが明示的に要求したときに限って、 ファイルのロック状態の確認を行なう。
.sp
行儀のよいクライアントは、 重要な操作を行ない際には必ずロックの状態を問い合わせる。 従って、大抵の場合は
strict locking = Auto
か
strict locking = no
がよい。
.sp
既定値:
\fI\fIstrict locking\fR\fR\fI = \fR\fIAuto\fR\fI \fR
.RE

strict sync (S)
.\" strict sync
.PP
.RS 4
(Windows 98 の Explorer を含む)多くの Windows アプリケーションは、 バッファのデータをフラッシュする処理を、ディスクに対し、同期を行う処理と取り違えているようである。 UNIX における同期処理は、カーネル内のディスクバッファに残っているデータが無事に記憶装置へ保存されたことをカーネルが確認するまで、プロセスを停止させる。 この処理は非常に遅く、頻繁に行うべきではない。 このパラメータを
\fBno\fR(デフォルト)に設定すると、
\fBsmbd\fR(8)
は Windows アプリケーションからの同期処理要求を無視する。 この場合でも、データが失われる可能性があるのは、 Samba が動作しているオペレーティングシステム自身がクラッシュしたときだけであるので、この設定による危険度は少ない。 また、 Windows 98 の Explorer を使ったファイルコピーのパフォーマンス問題が報告されているが、こちらも改善される。
.sp
既定値:
\fI\fIstrict sync\fR\fR\fI = \fR\fIno\fR\fI \fR
.RE

svcctl list (G)
.\" svcctl list
.PP
.RS 4
このパラメータにより、smbd が Win32 の ServiceControl API 経由で UNIX 側のサービスを起動、停止させる際に用いられる起動スクリプトの一覧を定義する。 これにより、Windows の管理者が Microsoft Management Console プラグインを用いて Samba サーバ上が動作する UNIX サービスを制御することが可能となる。
.sp
管理者は、Samba の $(libdir) 以下に
svcctl
というディレクトリを作成して、
/etc/init\&.d/
に存在する起動スクリプトのシンボリックリンクを作成しておく必要がある。 シンボリックリンク名は、
\fIsvcctl list\fR
パラメータに記載した名称と同一にしておくこと。
.sp
既定値:
\fI\fIsvcctl list\fR\fR\fI = \fR\fI\fR\fI \fR
.sp
例:
\fI\fIsvcctl list\fR\fR\fI = \fR\fIcups postfix portmap httpd\fR\fI \fR
.RE

sync always (S)
.\" sync always
.PP
.RS 4
この真偽値パラメータは、書き込み時に不摘発性のストレージへの書き込みとの同期を常に行なうかどうかを制御する。
\fBno\fR
の場合、 サーバは個々のクライアントからの書き込み要求に基づいて、同期を行なうかどうかを制御する (クライアントは個々の書き込みについて、同期要求ビットを設定することが可能である)。
\fByes\fR
の場合、 個々の書き込みに毎に、データを確実にディスクに書き込むため
fsync()
が呼び出される。 このパラメータが機能するには、
\fIstrict sync\fRパラメータが\fB yes\fRに設定されている必要がある。
.sp
既定値:
\fI\fIsync always\fR\fR\fI = \fR\fIno\fR\fI \fR
.RE

syslog (G)
.\" syslog
.PP
.RS 4
このパラメータは、 Samba のデバッグメッセージと syslog のプライオリティとの対応づけを行なう。 Samba のデバッグレベル 0 は、 syslog の
\fBLOG_ERR\fRに割り当てられ、以下、 デバッグレベル 1 は
\fBLOG_WARNING\fR、 デバッグレベル 2 は
\fBLOG_NOTICE\fR、 デバッグレベル 3 は
\fBLOG_INFO\fR、 それ以上のデバッグレベルは
\fBLOG_DEBUG\fR
にそれぞれ割り当てられている。
.sp
このパラメータは どのデバッグレベルまでのメッセージを syslog に送るかのしきい値を設定する。 この値未満の Samba のデバッグメッセージのみが syslog に送られる。
.sp
既定値:
\fI\fIsyslog\fR\fR\fI = \fR\fI1\fR\fI \fR
.RE

syslog only (G)
.\" syslog only
.PP
.RS 4
このパラメータが設定されると、 Samba のデバッグメッセージが システムの syslog にのみ記録されるようになり、 デバッグログファイルに出力されなくなる。 もしも、\fIsyslog only\fRが有効になっていたとしても、 log\&.[sn]mbdへのロギングは引き続き行われる。
.sp
既定値:
\fI\fIsyslog only\fR\fR\fI = \fR\fIno\fR\fI \fR
.RE

template homedir (G)
.\" template homedir
.PP
.RS 4
NT ドメインのユーザに対応するユーザ情報を作成する際、
\fBwinbindd\fR(8)
デーモンは、 このパラメータによってユーザのホームディレクトリの位置を設定する。 文字列中に
\fI%D\fR
があれば、 ユーザの所属する NT ドメイン名に置き換えられる。文字列中に
\fI%U\fR
があれば、 ユーザの NT ドメインにおけるユーザ名に置き換えられる。
.sp
既定値:
\fI\fItemplate homedir\fR\fR\fI = \fR\fI/home/%D/%U\fR\fI \fR
.RE

template shell (G)
.\" template shell
.PP
.RS 4
NT ドメインのユーザに対応するユーザ情報を作成する際、
\fBwinbindd\fR(8)デーモンは、 このパラメータによってユーザのログインシェルを設定する。
.sp
\fI既定値なし\fR
.RE

time offset (G)
.\" time offset
.PP
.RS 4
このパラメータは、GMT からローカル時間への変換時に追加する時間(分単位)を設定する。 夏時間処理に問題があるPCを多数管理している際に有効である。
.sp
既定値:
\fI\fItime offset\fR\fR\fI = \fR\fI0\fR\fI \fR
.sp
例:
\fI\fItime offset\fR\fR\fI = \fR\fI60\fR\fI \fR
.RE

time server (G)
.\" time server
.PP
.RS 4
このパラメータにより、
\fBnmbd\fR(8)
が、 Windows クライアントに対して、自身をタイムサーバとしてアナウンスするかどうかが制御される。
.sp
既定値:
\fI\fItime server\fR\fR\fI = \fR\fIno\fR\fI \fR
.RE

unix charset (G)
.\" unix charset
.PP
.RS 4
Samba が動作する UNIX マシンで使われている文字コードを指定する。 この情報は、Samba が SMB クライアントの使用している文字コードと文字列の変換を行なうために必要である。
.sp
ここで設定した文字コードは、Samba から実行するスクリプトの引数にも用いられる。
.sp
既定値:
\fI\fIunix charset\fR\fR\fI = \fR\fIUTF8\fR\fI \fR
.sp
例:
\fI\fIunix charset\fR\fR\fI = \fR\fIASCII\fR\fI \fR
.RE

unix extensions (G)
.\" unix extensions
.PP
.RS 4
この真偽値パラメータは、Samba が HP 社によって定義された CIFS の UNIX拡張を利用するかどうかを制御する。 これらの拡張は、UNIX クライアントから UNIX サーバに対して接続する際に有用な CIFS を有効にし、 シンボリックリンクやハードリンクなどを利用可能にする。 これらの拡張により、Samba は UNIX の CIFS クライアントに対して、 シンボリックリンクやハードリンクといった機能を提供することが可能となる。
.sp
既定値:
\fI\fIunix extensions\fR\fR\fI = \fR\fIyes\fR\fI \fR
.RE

unix password sync (G)
.\" unix password sync
.PP
.RS 4
この真偽値パラメータにより、 smbpasswd ファイルの暗号化された SMBパスワードの更新時に、 Samba が UNIX のパスワードを SMB パスワードと同期させるようになる。 これを
\fByes\fR
に設定した場合、 (SMB パスワードの変更コードは古い平文パスワードを参照できず、新しいパスワードだけが渡されるため、) 新しい UNIX パスワードを古いパスワードの情報なしで設定するため、
\fIpasswd program\fR
パラメータで指定されたコマンドが
\fIROOT権限で\fR呼び出される。
.sp
既定値:
\fI\fIunix password sync\fR\fR\fI = \fR\fIno\fR\fI \fR
.RE

update encrypted ()
.\" update encrypted
.PP
.RS 4
この真偽値パラメータにより、 平文パスワードでログインしたユーザのログオン時に、 そのユーザの暗号化(ハッシュ化)パスワードが自動的に smbpasswd ファイル中に格納されるようになる。 このオプションにより、暗号化パスワード認証を有効にする際、 ユーザに smbpasswd へのパスワード再入力を強制することなく、 平文パスワード認証 (平文パスワードによるユーザ認証情報がネットワーク上を流れて UNIX 側のアカウントデータベースで照会される)から暗号化パスワード認証 (SMB のチャレンジアンドレスポンス認証) への移行を行うことが可能になる。 これは便利なオプションで、 ある程度の時間をかけて徐々に暗号化パスワードへと移行することを可能にする。 すべてのユーザが smbpasswd ファイルに暗号化パスワードを格納したら、 このパラメータを
\fBno\fR
に設定すべきだろう。
.sp

このパラメータは \m[blue]\fBencrypt passwords\fR\m[] が \fBno\fR に設定されている時のみ動作する。
\m[blue]\fBencrypt passwords = Yes\fR\m[]
がデフォルトであるため、
\m[blue]\fBupdate encrypted\fR\m[]
を動作させるには このパラメータを
\fBno\fR
に設定する必要があることに注意。
.sp
このパラメータが有効になっている場合であっても、
smbd
に接続するユーザは正しいパスワードを入力して、 (smbpasswdファイル中の)暗号化されたパスワードを更新する必要がある。
.sp
既定値:
\fI\fIupdate encrypted\fR\fR\fI = \fR\fIno\fR\fI \fR
.RE

use client driver (S)
.\" use client driver
.PP
.RS 4
このパラメータは、Windows NT/2000 クライアントに対してのみ影響し、 Windows 95/98/Me クライアントに対しては影響しない。 Windows NT/2000 クライアントに対して、 Samba ホスト上に適切なプリンタドライバをインストールせずに、プリンタ共有を提供する場合、 クライアント側ローカルにプリンタドライバをインストールする必要がある。 このため、クライアントは、そのプリンタをローカルプリンタとして扱い、 ネットワークプリンタとしては扱わなくなる。 これは、disable spoolss = yesにしたときとほぼ同様の動作になる。
.sp
違いが発生するのは、通常の環境下において、 NT/2000 クライアントは MS\-RPC を用いてネットワークプリンタをオープンしようとする点にある。 クライアントはプリンタがローカルにあると判断しているため、 ログオンしているユーザに割り当てられたアクセス権を要求して OpenPrinterEx() 呼出を発行してしまう点が問題となる。 ユーザがローカルで管理者権限を持っているが、Samba ホスト上では root 権限を持っていない場合(これはよくあるケースになる)、 OpenPrinterEx() 呼出は失敗する。 その結果、(印刷ジョブが正常に印刷されているにも関わらず、) クライアント側のプリンタキューのウインドウには、 「Access Denied; Unable to connect」というメッセージが表示される。
.sp
このパラメータが有効になっているプリンタに対しては、 PRINTER_ACCESS_ADMINISTER 権限によるプリンタのオープンの試みはすべて、 PRINTER_ACCESS_USE の権限で行なわれ、 これにより、OpenPrinterEx() が成功することになる。
\fI適切なプリンタドライバがインストールされている Samba サーバ上のプリンタ共有に対して、このパラメータを有効にしてはならない。\fR
.sp
既定値:
\fI\fIuse client driver\fR\fR\fI = \fR\fIno\fR\fI \fR
.RE

use mmap (G)
.\" use mmap
.PP
.RS 4
このグローバルパラメータは、 Samba が内部的に利用する tdb の動作を、システムの mmap が正しく動作するかどうかに依存させるかどうかを制御する。 Samba は一貫性の保たれた mmap (read\-write system memory cache) を必要とする。 現在、HPUX については、こうした一貫性のあるキャッシュが実装されていないため、 HPUX におけるこのパラメータのデフォルトは、\fBno\fR
になっている。 それ以外のシステムにおいては、このパラメータの値を変更すべきではない。 このパラメータは、Samba 開発者の tdb の内部コードの問題解析を支援するために提供されている。
.sp
既定値:
\fI\fIuse mmap\fR\fR\fI = \fR\fIyes\fR\fI \fR
.RE

user
.\" user
.PP
.RS 4
このパラメータは右記のパラメータの別名である：username\&.
.RE

users
.\" users
.PP
.RS 4
このパラメータは右記のパラメータの別名である：username\&.
.RE

username (S)
.\" username
.PP
.RS 4
このパラメータに複数のユーザをコンマで区切ったリストで指定することにより、 各ユーザ名に対して(左から右に)順番に入力したパスワードを用いた認証が行われる。
.sp

\fIusername\fR
パラメータは、 PC 側からユーザ名が提供されない時にのみ必要である。 これに該当するのは、COREPLUS プロトコルを用いているか、 Windows for Workgroup において、ユーザ名が UNIX 側のユーザ名と異なっている場合である。 どちらの場合も、このパラメータの代わりに \e\eserver\eshare%user の記法を用いるのが好ましい。
.sp
Sambaは
\fIusername\fR
パラメータで指定された各ユーザに対して、 提供されたパスワードを用いて順番に認証を行っていくことになるため、
\fIusername\fRは最適の解決策とはいえない。 これは遅い上、パスワードが重複しているユーザが多数存在しているような場合には困ったことになる。 このパラメータを不用意に使うと、 タイムアウトやセキュリティ上の問題などが発生するかも知れない。
.sp
Samba は、プラットフォームである UNIX のセキュリティ機構に依存している。 このパラメータは、ログインできるユーザを制限するものではなく、 提供されたパスワードを適用するユーザについての情報を Samba サーバに与えるものである。 ユーザは自分が好むユーザとしてログインすることが可能であるが、 telnet セッションよりは、被害を与えないだろう。 デーモンはログインしたユーザの権限で動作するため、 ユーザの権限で行えないことは何も行えない。
.sp
サービスへのアクセスを特定のユーザに制限したい場合は、
\m[blue]\fBvalid users\fR\m[]
パラメータを利用すること。
.sp
ユーザ名が \'@\' ではじまっている場合は、 (Samba がネットグループをサポートするようにコンパイルされている場合) まず NIS のネットグループ、更に UNIX のグループデータベースにおいて、 該当する名前のグループがないかが検索され、 その名前のグループに所属する全てのユーザ名に展開される。
.sp
ユーザ名が \'+\' から始まっている場合は、 UNIX のグループデータベースのみが検索され、 その名前のグループに所属する全てのユーザ名に展開される。
.sp
ユーザ名が \'&\' から始まっている場合は、 (Samba がネットグループをサポートするようにコンパイルされている場合) NIS のネットグループのみが検索され、 その名前のグループに所属する全てのユーザ名に展開される。
.sp
グループ名の検索には時間が掛かるため、 クライアントによっては検索がタイムアウトしてしまう場合があることに注意。
.sp
このパラメータにより、サービスへのアクセスがどのように行われるかの詳細については
NOTE ABOUT ユーザ名とパスワード認証についての注意
のセクションを参照のこと。
.sp
既定値:
\fI\fIusername\fR\fR\fI = \fR\fI # ゲストサービスの時は、 guest account で設定されたアカウント、それ以外の時は <空文字列>\fR\fI \fR
.sp
例:
\fI\fIusername\fR\fR\fI = \fR\fIfred, mary, jack, jane, @users, @pcgroup\fR\fI \fR
.RE

username level (G)
.\" username level
.PP
.RS 4
このオプションは、 DOS クライアントの多くが送信する大文字化されたユーザ名から、 Samba が本当の UNIX のユーザ名を「推測」する際の手助けを行う。 デフォルトの場合、 Samba は全て小文字のユーザ名、 先頭の文字のみを大文字にしたユーザ名を順に試しても、 UNIX マシン上に該当するユーザ名がない場合は処理を失敗させる。
.sp
このパラメータに 0 以外の値を指定することで、この処理を変更できる。 このパラメータは、UNIX 側のユーザ名を確認する際に大文字が幾つ入ったユーザ名の組合せまで確認を行なうかを決定するものである。 大きい数字を指定する程、多くの組合せが確認されるため、 ユーザ名の確認作業は遅くなる。 このパラメータは、UNIX マシン上に
\fBAstrangeUser \fRといった名前が存在する際に使用すること。
.sp
このパラメータは、ユーザ名の大文字、小文字が区別される UNIX システムでのみ必要である。
.sp
既定値:
\fI\fIusername level\fR\fR\fI = \fR\fI0\fR\fI \fR
.sp
例:
\fI\fIusername level\fR\fR\fI = \fR\fI5\fR\fI \fR
.RE

username map (G)
.\" username map
.PP
.RS 4
このオプションにより、クライアント上とサーバ上でのユーザ名のマッピング 情報を格納したファイルが指定される。これは幾つかの目的で利用される。 通常は DOS や Windows マシンでユーザが利用しているユーザ名を UNIX マシン上でのユーザ名にマッピングする為に用いられるが、 複数のユーザを特定のユーザ名にマッピングすることで、 ユーザ間でのファイル共有を簡単に行なえるようにするために用いることも可能である。
.sp
security パラメータが user もしくは share の場合、username map パラメータは ユーザの資格情報が検証されるたびに適用されることに注意。 ドメインのメンバサーバ(domain もしくは ads)の場合、ドメインコントローラから認証を受けた後で username map パラメータが適用され、マッピングの際には、完全ユーザ名(例えば biddle = DOMAIN\efoo) で記述する必要がある。
.sp
ファイルは各行ごとに評価される。各々の行は、左端に UNIX ユーザ名が あり、\'=\' を挟んでその右側にユーザ名のリストが続く形式をとる。 右側のユーザ名のリストには、グループ内のすべての UNIX ユーザ名に一致させる @group という形式を含めることもできる。 \'*\' はワイルドカードであり、任意の名前と一致する。 ファイルの各行は最大 1023 文字まで記述可能である。
.sp
ファイルの評価は、 提供されたユーザ名と \'=\' の右側の各ユーザ名とを各行毎に比較することにより行なわれる。 提供されたユーザ名が右側のどれかに一致すると、 提供されたユーザ名が一致したユーザ名に置き換わり、 引続き以降の行の処理が行なわれていくことになる。
.sp
\'#\' や \';\' で始まる行は無視される。
.sp
\'!\' ではじまる行があると、 以降の行でユーザ名が一致した時点で比較処理は中止される。 それ以外の場合、この比較処理はすべての行に対して継続される。 ファイルの最後でワイルドカードによるマッピングを行なっている場合には、 \'!\' を使うとかなり便利である。
.sp
たとえば、\fBadmin\fR
や
\fBadministrator\fR
といった名前から UNIX の
\fBroot\fR
へのマッピングを行ないたい場合は、以下のように記述する:
.sp
.if n \{\
.RS 4
.\}
.nf
root = admin administrator
.fi
.if n \{\
.RE
.\}
.sp
また、UNIX の
\fBsystem\fR
グループに所属するユーザを
\fBsys\fR
という UNIX ユーザに置き換えるには、以下のように記述する:
.sp
.if n \{\
.RS 4
.\}
.nf
sys = @system
.fi
.if n \{\
.RE
.\}
.sp
username map のファイル中には幾つのマッピングの設定を行なっても構わない。
.sp
システムが NIS の NETGROUP オプションをサポートしている場合、 グループ名の一致処理を行なう際には、
/etc/group
データベースより先にネットグループのデータベースが調べられる。
.sp
空白を含む Windows のユーザ名は、 ダブルクォートで両側を括って記述する。たとえば、
.sp
.if n \{\
.RS 4
.\}
.nf
tridge = "Andrew Tridgell"
.fi
.if n \{\
.RE
.\}
.sp
は、Windows のユーザ名 "Andrew Tridgell" を UNIX のユーザ名 "tridge" に置き換える。
.sp
以下の例は、 mary と fred を UNIX ユーザ sys に置き換え、 そのほかのユーザを guest に置き換える。 \'!\'を利用することで、一致した行以降の処理を抑止していることに注意。
.sp
.if n \{\
.RS 4
.\}
.nf
!sys = mary fred
guest = *
.fi
.if n \{\
.RE
.\}
.sp
ユーザ名が現われる箇所全てに置き換えの結果が適用されることに注意。 例えば、\e\eserver\efred に接続する場合、\fB fred\fR
が
\fBmary\fR
に置き換えられる場合は、 実際に接続する先は \e\eserver\emary であり、パスワードも
\fBfred\fR
ではなく、\fBmary\fR
のものを入力することが必要になる。この唯一の例外は、(設定している場合に)
\m[blue]\fBpassword server\fR\m[]
に対してユーザ名を送出するときである。 password server は、 クライアントが提供したユーザ名を置換なしでそのまま受け取る。
.sp
逆のマッピングは行われないことにも注意。この影響が現われるのは印刷時である。 Windows for Workgroup におけるプリントマネージャは、 置き換えが行われたユーザが印刷ジョブを所有していないと判断するため、 印刷ジョブ削除時にトラブルが発生する。
.sp
Samba 3\&.0\&.8 より前のバージョンでは、Kerberos ログインが行なわれる場合にのみ、 完全ユーザ名(たとえば:
DOMAIN\euser)がサポートされていた。 しかし、NTLM[SSP] によるユーザ認証の際には、ユーザ名部分のみがマッチングの対象と なっていた。このため、同一のサーバに対するアクセスで、結果が一致しないという事態 が発生していた。
.sp
以下の機能は、Samba 3\&.0\&.8 以降のものである。
.sp
ローカル認証の場合、username map パラメータは、コネクションに対する認証が行なわれる際のユーザ名に対して適用される。
.sp
認証を外部のドメインコントローラに依存している場合、 smbd は username map パラメータを、ユーザ認証が成功した場合にのみ、認証された完全ユーザ名(例: DOMAIN\euser) に対して適用する。
.sp
以下に設定例を示す:
.sp
.if n \{\
.RS 4
.\}
.nf
username map = /usr/local/samba/lib/users\&.map
.fi
.if n \{\
.RE
.\}
.sp
既定値:
\fI\fIusername map\fR\fR\fI = \fR\fI # no username map\fR\fI \fR
.RE

username map script (G)
.\" username map script
.PP
.RS 4
このパラメータは
\m[blue]\fBusername map\fR\m[]
パラメータと排他的な関係にある。 このパラメータは、（認証要求で渡されたユーザ名を示す）コマンドライン引数を1つだけとり、 標準出力に（マッピングされたアカウント名を示す）文字列を1行返却する 外部プログラム、もしくはスクリプトを指定する。 これにより、ユーザ名のマッピング表を LDAP や NIS などのディレクトリサービス上に格納することが可能となる。
.sp
既定値:
\fI\fIusername map script\fR\fR\fI = \fR\fI\fR\fI \fR
.sp
例:
\fI\fIusername map script\fR\fR\fI = \fR\fI/etc/samba/scripts/mapusers\&.sh\fR\fI \fR
.RE

usershare allow guests (G)
.\" usershare allow guests
.PP
.RS 4
このパラメータは、ユーザ定義共有に認証されていないユーザのアクセスを許可するかどうかを制御する。 これは、ユーザが共有の定義において
\fIguest ok = yes\fR
オプションを付与した共有を作成することの許可と同義である。 セキュリティ上注意を要するため、既定値は無効となっている。
.sp
既定値:
\fI\fIusershare allow guests\fR\fR\fI = \fR\fIno\fR\fI \fR
.RE

usershare max shares (G)
.\" usershare max shares
.PP
.RS 4
このパラメータは(訳注: usershare path パラメータで定義された) ユーザ定義共有ディレクトリの所有グループに所属するユーザによって作成可能なユーザ定義共有の最大数を設定する。 0 (デフォルト) の場合、ユーザ定義共有は作成できない。
.sp
既定値:
\fI\fIusershare max shares\fR\fR\fI = \fR\fI0\fR\fI \fR
.RE

usershare owner only (G)
.\" usershare owner only
.PP
.RS 4
このパラメータは、ユーザ定義共有として公開されるパスが、 ユーザ定義共有を作成しようとしているユーザの所有であることを必須とするかどうかを制御する。 必須とした場合 (既定値) 、smbd は公開しようとしているディレクトリが、ユーザ定義共有の設定ファイルの所有者と同一であることを確認し、もし異なっていた倍は作成を拒否する。 必須としなかった場合、こうした確認は行なわれず、誰が所有しているかに関わらず、ディレクトリの公開が可能となる。
.sp
既定値:
\fI\fIusershare owner only\fR\fR\fI = \fR\fITrue\fR\fI \fR
.RE

usershare path (G)
.\" usershare path
.PP
.RS 4
このパラメータにより、ユーザ定義共有の設定ファイルが格納されるファイルシステム上のディレクトリの絶対パスが指定される。 このディレクトリは root の所有でなければならず、その他(other)がアクセス可能であってはならず、グループの所有者のみが書き込み可能となっている必要がある。 加えて、ファイルの所有者による名前の変更と削除を制限するため、「sticky」ビットが設定されている必要がある (これは /tmp ディレクトリに対して通常行なわれる設定と同義である)。 このディレクトリのグループ所有者が、ユーザ定義共有を作成可能なユーザとなる。 このパラメータが設定されていない場合、誰もユーザ定義共有を作成できない。
.sp
一例として、ユーザ定義共有のディレクトリを /use/local/samba/lib/usershares に設定する場合、以下のようにする。
.sp
.if n \{\
.RS 4
.\}
.nf
	ls \-ld /usr/local/samba/lib/usershares/
	drwxrwx\-\-T  2 root power_users 4096 2006\-05\-05 12:27 /usr/local/samba/lib/usershares/
	
.fi
.if n \{\
.RE
.\}
.sp
この場合、「power_users」グループのメンバのみがユーザ定義共有を作成できる。
.sp
既定値:
\fI\fIusershare path\fR\fR\fI = \fR\fINULL\fR\fI \fR
.RE

usershare prefix allow list (G)
.\" usershare prefix allow list
.PP
.RS 4
このパラメータには、ユーザ定義共有による共有を許可する絶対パス名のリストを指定する。 共有しようとしているパス名の先頭がこのリストに指定されたパス名のいずれかと合致していない場合、公開は許可されない。 これにより、Samba の管理者がユーザ定義共有による公開を可能とするディレクトリを制限することが可能となる。
.sp
「usershare prefix deny list」と「usershare prefix allow list」の両方が定義されている場合は、 拒否リスト側が先に処理され、後から許可リストが処理される。 これにより、拒否リストによる制限を優先している。
.sp
既定値:
\fI\fIusershare prefix allow list\fR\fR\fI = \fR\fINULL\fR\fI \fR
.sp
例:
\fI\fIusershare prefix allow list\fR\fR\fI = \fR\fI/home /data /space\fR\fI \fR
.RE

usershare prefix deny list (G)
.\" usershare prefix deny list
.PP
.RS 4
このパラメータには、ユーザ定義共有による公開を拒否する絶対パス名のリストを指定する。 公開しようとしているパス名の先頭がこのリストに指定されたパス名のいずれかと合致している場合、公開は許可されない。 このリストに指定されたパス名のいずれとも合致していないパス名から始まるパス名は、ユーザ定義共有として公開を許可することができる。 これにより、Samba の管理者がユーザ定義共有による公開を可能とするディレクトリを制限することが可能となる。
.sp
「usershare prefix deny list」と「usershare prefix allow list」の両方が定義されている場合は、 拒否リスト側が先に処理され、後から許可リストが処理される。 これにより、拒否リストによる制限を優先している。
.sp
既定値:
\fI\fIusershare prefix deny list\fR\fR\fI = \fR\fINULL\fR\fI \fR
.sp
例:
\fI\fIusershare prefix deny list\fR\fR\fI = \fR\fI/etc /dev /private\fR\fI \fR
.RE

usershare template share (G)
.\" usershare template share
.PP
.RS 4
ユーザ定義共有では、path 、 guest ok といった幾つかのパラメータしか設定できないが、 このパラメータにより、ユーザ定義共有を既存の共有から「複製」することが可能となる。 「usershare template share」に既存の共有名が設定されていた場合、作成されるすべてのユーザ定義共有では、既定値としてこの共有に設定されたパラメータが用いられる。
.sp
対象となる共有には、「\-valid = False」の設定をテンプレートの設定として行なっておくことで、実際のファイル共有として機能しないようにしておくことができる。 これにより、ユーザ定義共有のテンプレートとして用いつつ、その共有が実際に公開されないようにできる。
.sp
既定値:
\fI\fIusershare template share\fR\fR\fI = \fR\fINULL\fR\fI \fR
.sp
例:
\fI\fIusershare template share\fR\fR\fI = \fR\fItemplate_share\fR\fI \fR
.RE

use sendfile (S)
.\" use sendfile
.PP
.RS 4
このパラメータが
\fByes\fR
であり、 かつ Samba の動作する OS で
\fBsendfile() \fR
システムコールがサポートされている場合、いくつかの SMB read コール (主に ReadAndX と ReadRaw) において排他的 oplock が行なわれているファイルに対して効率的な sendfile システムコールが使用される。これにより、システムの CPU の効率的な使用が行なわれ、 Samba の動作も高速化するだろう。 Samba は NT LM 0\&.12 未満のプロトコルを用いるクライアントや Windows 9x ( Linux から sendfile を用いると、これらのクライアントの処理が失敗する) に対しては、自動的にこのオプションを無効にする。
.sp
既定値:
\fI\fIuse sendfile\fR\fR\fI = \fR\fIfalse\fR\fI \fR
.RE

use spnego (G)
.\" use spnego
.PP
.RS 4
このパラメータの値により、 Samba が Windows 2000 や Windows XP クライアントの間で行なわれる認証の際に Simple and Protected NEGOciation (RFC2478 で規定) の使用を試みるかどうかが制御される。
.sp
SPNEGO の実装に問題点が発見されない限り、 これを無効にする必要性はない。
.sp
既定値:
\fI\fIuse spnego\fR\fR\fI = \fR\fIyes\fR\fI \fR
.RE

utmp (G)
.\" utmp
.PP
.RS 4
この真偽値パラメータは、 Sambaが
\-\-with\-utmp
オプションで configure され、コンパイルされた時にのみに有効である。 このパラメータを
\fByes\fR
に設定することで、 Sambaは utmp または utmpx レコード(UNIXシステムに依存)に、 Sambaサーバへの接続時の情報を追加するようになる。 このパラメータにより、 Sambaの共有への接続を記録することが可能になる。
.sp
utmp レコードの仕様のため、接続する個々のユーザ毎に一意な識別子が生成されている必要がある。 この、オプションを有効にすることで、 n^2 アルゴリズムを使ってその番号を検索する処理が発生する。 大規模システムの場合、この処理がパフォーマンスに影響を与える場合も考えられる。
.sp
既定値:
\fI\fIutmp\fR\fR\fI = \fR\fIno\fR\fI \fR
.RE

utmp directory (G)
.\" utmp directory
.PP
.RS 4
このパラメータは、 Sambaが
\-\-with\-utmp
オプションで configure され、コンパイルされた時にのみに有効である。 このパラメータは、 Sambaサーバへの接続を記録する utmp または utmpx ファイル (UNIXシステムに依存)が存在するディレクトリを指定する。 デフォルトではこの値は設定されない。 この場合、システムが利用している utmp ファイルが使われる (Linux の場合、通常
/var/run/utmp
にある)。
.sp
既定値:
\fI\fIutmp directory\fR\fR\fI = \fR\fI # Determined automatically\fR\fI \fR
.sp
例:
\fI\fIutmp directory\fR\fR\fI = \fR\fI/var/run/utmp\fR\fI \fR
.RE

\-valid (S)
.\" -valid
.PP
.RS 4
このパラメータは、共有が有効であり、使用可能かどうかを制御する。 このパラメータを false に設定した場合、いかなる方法を用いても、共有を表示したり、共有に対してアクセスしたりすることができなくなる。
.sp
このオプションは一般ユーザが利用すべきものではなく、開発者の利便性のために設けられている。 Samba はこのオプションを内部的に用いて、共有が削除されたことを記録している。
.sp
既定値:
\fI\fI\-valid\fR\fR\fI = \fR\fIyes\fR\fI \fR
.RE

valid users (S)
.\" valid users
.PP
.RS 4
サービスにアクセスできるユーザのリストを指定する。 \'@\'、\'+\'、\'&\' からはじまる名前は、
\fIinvalid users\fR
パラメータで説明した規則にしたがって解釈される。
.sp
このパラメータが設定されていない場合(既定値)、どのようなユーザでもログインできる。このリストと
\fIinvalid users\fR
の両方に含まれるユーザのアクセスは拒否される。
.sp
\fI%S\fR
は、現在のサービス名に置き換えられる。 これは [homes] セクションで用いると便利である。
.sp
既定値:
\fI\fIvalid users\fR\fR\fI = \fR\fI # No valid users list (anyone can login) \fR\fI \fR
.sp
例:
\fI\fIvalid users\fR\fR\fI = \fR\fIgreg, @pcusers\fR\fI \fR
.RE

veto files (S)
.\" veto files
.PP
.RS 4
このパラメータは、 一覧することもアクセスすることもできないファイルとディレクトリのリストを指定する。 リストの各エントリは \'/\' で区切ること。これにより、 エントリ中に空白文字を用いることが可能になっている。 \'*\'と \'?\'は DOS のワイルドカードと同様、 複数のファイルやディレクトリを指定するために利用できる。
.sp
各エントリはDOSの形式ではなく、 UNIXでのパス形式である必要があり、 UNIX のディレクトリ区切りである \'/\'を\fI含めてはならない\fR。
.sp

\m[blue]\fBcase sensitive\fR\m[]
オプションが、この処理に影響することに注意。
.sp
veto files パラメータの利用に際して注意すべき重要な点が、 ディレクトリ削除時の動作である。 削除されるディレクトリに veto files パラメータに一致するファイルが存在する場合、
\m[blue]\fBdelete veto files\fR\m[]
パラメータが
\fIyes\fR
でない限り、削除は\fI失敗\fRする。
.sp
このパラメータを設定した場合は、 ファイルやディレクトリの一覧を取得する際、 すべてのファイルとディレクトリについて、 このパラメータのマッチング処理が行なわれるようになるため、 Samba の性能に影響が発生する。
.sp
以下に設定例を記載する:
.sp
.if n \{\
.RS 4
.\}
.nf
; Veto any files containing the word Security,
; any ending in \&.tmp, and any directory containing the
; word root\&.
veto files = /*Security*/*\&.tmp/*root*/

; Veto the Apple specific files that a NetAtalk server
; creates\&.
veto files = /\&.AppleDouble/\&.bin/\&.AppleDesktop/Network Trash Folder/
.fi
.if n \{\
.RE
.\}
.sp
既定値:
\fI\fIveto files\fR\fR\fI = \fR\fIアクセスできないファイルやディレクトリはない\fR\fI \fR
.RE

veto oplock files (S)
.\" veto oplock files
.PP
.RS 4
このパラメータは、
\m[blue]\fBoplocks\fR\m[]
パラメータが有効になっている共有でのみ意味がある。 Samba の管理者は、このパラメータを使って リストにマッチしたファイルに対する oplock を禁止することができる。 リストは
\m[blue]\fBveto files\fR\m[]
パラメータで利用されているものと同様の形式である。
.sp
クライアントによるロック競合が激しいファイルに対して、 このオプションを適用したいということがあるだろう。 例としては NetBench SMB ベンチマーク・プログラムがある。 このプログラムは
「\&.SEM」
で終わる名前のファイルに対して激しい競合を発生させる。 これらのファイルに対する oplock を禁止するためには、 以下の設定例のように指定する ([global] セクションか、 Net Bench 用の共有のいずれかにおいて)。
.sp
以下に設定例を示す。
.sp
.if n \{\
.RS 4
.\}
.nf
veto oplock files = /\&.*SEM/
.fi
.if n \{\
.RE
.\}
.sp
既定値:
\fI\fIveto oplock files\fR\fR\fI = \fR\fI # oplock 取得を禁止されるファイルやディレクトリはない\fR\fI \fR
.RE

vfs object
.\" vfs object
.PP
.RS 4
このパラメータは右記のパラメータの別名である：vfs objects\&.
.RE

vfs objects (S)
.\" vfs objects
.PP
.RS 4
このパラメータは、 Samba の VFS I/O 操作において用いられるバックエンド名を指定する。デフォルトでは通常のディスク I/O 操作が行なわれるが、 VFS オブジェクトによりこの操作を変更することが可能である。
.sp
既定値:
\fI\fIvfs objects\fR\fR\fI = \fR\fI\fR\fI \fR
.sp
例:
\fI\fIvfs objects\fR\fR\fI = \fR\fIextd_audit recycle\fR\fI \fR
.RE

volume (S)
.\" volume
.PP
.RS 4
このパラメータにより、共有のボリュームラベルの設定が可能になる。 これは、特定のボリューム名が必要なインストールプログラムを格納した CD\-ROM を共有する際に便利である。
.sp
既定値:
\fI\fIvolume\fR\fR\fI = \fR\fI # the name of the share\fR\fI \fR
.RE

wide links (S)
.\" wide links
.PP
.RS 4
このパラメータは、 UNIXファイルシステム上のリンクをサーバが追跡するかどうかを制御する。 サーバが公開するディレクトリツリー内部へのリンクは、 常に許可されている。このパラメータは、 公開されているディレクトリツリー外部へのアクセスを制御する。
.sp
このパラメータを no に設定すると、 リンク先のチェックを行なうための余分なシステムコールを実行する必要があるため、 サーバのパフォーマンスに悪影響を及ぼすことに注意。
.sp
既定値:
\fI\fIwide links\fR\fR\fI = \fR\fIyes\fR\fI \fR
.RE

winbind cache time (G)
.\" winbind cache time
.PP
.RS 4
このパラメータにより、
\fBwinbindd\fR(8)
デーモンが Windows NT Server に問い合わせを行なう代わりに、キャッシュしたユーザとグループの情報を 使用する時間を秒単位で指定する。
.sp
この設定は認証要求には適用されない。認証要求は
\m[blue]\fBwinbind offline logon\fR\m[]オプションが有効に されない限り、常にその度ごとに処理される。
.sp
既定値:
\fI\fIwinbind cache time\fR\fR\fI = \fR\fI300\fR\fI \fR
.RE

winbind enum groups (G)
.\" winbind enum groups
.PP
.RS 4
非常に大規模な環境において、
\fBwinbindd\fR(8)
を使用する際には、
setgrent()、
getgrent()、
endgrent()
といった システムコール群の呼び出しによるグループの一覧取得を抑止する 必要があるかも知れない。
\fIwinbind enum groups\fR
パラメータが
\fBno\fR
の場合、
getgrent()
システムコールの呼び出しは、全くデータを返却しない。
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBWarning\fR
.ps -1
.br
グループ一覧(enumeration)を無効にするとプログラムによっては異常動作を引き起こす恐れがある。
.sp .5v
.RE
既定値:
\fI\fIwinbind enum groups\fR\fR\fI = \fR\fIno\fR\fI \fR
.RE

winbind enum users (G)
.\" winbind enum users
.PP
.RS 4
非常に大規模な環境において、
\fBwinbindd\fR(8)を使用する際には、
setpwent()、
getpwent()
や
endpwent()
といったシステムコール群の呼び出しによるユーザの一覧取得を抑止する必要があるかも知れない。
\fIwinbind enum users\fRパラメータが
\fBno\fR
の場合、
getpwent
システムコールの呼び出しは、全くデータを返却しない。
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBWarning\fR
.ps -1
.br
ユーザ一覧(enumeration)を無効にするとプログラムによっては 異常動作を引き起こす恐れがある。 例えば、finger プログラムは、全てのユーザの一覧にアクセスできる前提で、 ユーザ名のマッチングを行なっている。
.sp .5v
.RE
既定値:
\fI\fIwinbind enum users\fR\fR\fI = \fR\fIno\fR\fI \fR
.RE

winbind expand groups (G)
.\" winbind expand groups
.PP
.RS 4
このオプションは Windows ドメイングループのネストされた グループメンバーを展開する際に winbindd が探索を繰り返す 最大の階層を制御する。 これは ローカルグループのネスト化を Windows NT4 形式で実装している
\m[blue]\fBwinbind nested groups\fR\m[]
オプションとは 異なる。 "winbind expand groups" パラメーターはドメイングループの メンバーシップを明確に適用する。
.sp
このパラメーターに高い値を設定することは、最上位の winbindd デーモンがグループの展開を処理しなければならず、その間、 NSSや認証要求に対する応答が不可能となるために、システムの 性能低下をもたらすことに注意しなさい。
.sp
既定値:
\fI\fIwinbind expand groups\fR\fR\fI = \fR\fI1\fR\fI \fR
.RE

winbind nested groups (G)
.\" winbind nested groups
.PP
.RS 4
このパラメータを yes にすると、グループの入れ子が可能になる。 入れ子になるグループは、ローカルグループやエイリアスと呼ばれる。 これは、Windows のローカルグループに対応するものである。 入れ子になるグループは、各マシンローカルで定義され (ただしドメインコントローラ間では SAM を共有するため共有され)、 信頼される任意の SAM で定義されたユーザやグローバルグループを 含めることができる。 入れ子になるグループを用いるには、nss_winbind を有効にしておく 必要がある。
.sp
既定値:
\fI\fIwinbind nested groups\fR\fR\fI = \fR\fIyes\fR\fI \fR
.RE

winbind normalize names (G)
.\" winbind normalize names
.PP
.RS 4
このパラメーターは、winbindd がユーザー名やグループ名に含まれる 空白をアンダースコア「_」に置き換えるかどうかを制御する。 例えば、"Space Kadet" という名前が、"space_kadet" という文字列に置き換えられるべきかどうかということを意味する。 シェルの既定値のフィールドセパレーターが空白であるため、 Unixのシェルスクリプトは空白を含むユーザー名を扱うことが難しい。 もしあなたのドメインでアカウント名にアンダースコアを含む場合、 このオプションを有効にしてはならない(nss_infoプラグインで名前の エイリアス機能がサポートされている場合を除く)。
.sp
この機能は、認証されていないドメインユーザとグループの名前の エイリアスを作成するAPIも提供する。特定の設定に関するidmapやnss プラグインの仕様についてはマニュアルページを参照のこと。エイリアス の設定は、前述の「空白文字の制御」と排他的な関係である。
.sp
既定値:
\fI\fIwinbind normalize names\fR\fR\fI = \fR\fIno\fR\fI \fR
.sp
例:
\fI\fIwinbind normalize names\fR\fR\fI = \fR\fIyes\fR\fI \fR
.RE

winbind nss info (G)
.\" winbind nss info
.PP
.RS 4
このパラメータは、Winbind が Name Service Information からユーザの ホームディレクトリやログインシェルの情報を取得する方法を指定する。 現在のところ、以下の値が利用できる:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fItemplate\fR
\- 既定値であり、\fItemplate shell\fR
および
\fItemplate homedir\fRパラメータの値を用いる。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fI<sfu | rfc2307 >\fR
\- Samba が security = ads で実行されており、 Active Directory の DC が Microsoft Services for Unix (SFU) の LDAP スキーマをサポートしている場合、Winbind 機構は ログインシェルおよびホームディレクトリ属性を DC から 直接取得する。 UID や GID 情報を DC から取得したい場合は、
\fIidmap config DOMAIN:backend\fR
= ad も設定すること。
.sp
.RE
.sp
既定値:
\fI\fIwinbind nss info\fR\fR\fI = \fR\fItemplate\fR\fI \fR
.sp
例:
\fI\fIwinbind nss info\fR\fR\fI = \fR\fIsfu\fR\fI \fR
.RE

winbind offline logon (G)
.\" winbind offline logon
.PP
.RS 4
このパラメータは、Winbind 機構で
\fIpam_winbind\fR
モジュールにキャッシュされた資格情報を用いたログインを可能に するかどうかを指定する。 有効にした場合、winbindd は、ログインに 成功したユーザの資格情報を、暗号化してローカルのキャッシュに 格納する。
.sp
既定値:
\fI\fIwinbind offline logon\fR\fR\fI = \fR\fIfalse\fR\fI \fR
.sp
例:
\fI\fIwinbind offline logon\fR\fR\fI = \fR\fItrue\fR\fI \fR
.RE

winbind reconnect delay (G)
.\" winbind reconnect delay
.PP
.RS 4
このパラメータは\fBwinbindd\fR(8)デーモンがドメインコントローラ に接続できない場合に再接続要求を行う間隔を秒単位で指定する。
.sp
既定値:
\fI\fIwinbind reconnect delay\fR\fR\fI = \fR\fI30\fR\fI \fR
.RE

winbind refresh tickets (G)
.\" winbind refresh tickets
.PP
.RS 4
このパラメータは Winbind 機構が
\fIpam_winbind\fR
モジュールから取得した Kerberos チケットをリフレッシュするかどうかを制御する。
.sp
既定値:
\fI\fIwinbind refresh tickets\fR\fR\fI = \fR\fIfalse\fR\fI \fR
.sp
例:
\fI\fIwinbind refresh tickets\fR\fR\fI = \fR\fItrue\fR\fI \fR
.RE

winbind rpc only (G)
.\" winbind rpc only
.PP
.RS 4
このパラメーターをyesに 設定すると、winbindd がドメインコントローラーから情報を取得する際に、 LDAPの代わりにRPCを利用する。
.sp
既定値:
\fI\fIwinbind rpc only\fR\fR\fI = \fR\fIno\fR\fI \fR
.RE

winbind separator (G)
.\" winbind separator
.PP
.RS 4
このパラメータは、
\fIDOMAIN\fR\e\fIuser\fR
の形式でユーザ名を表示する際に使用される区切り文字を指定する。 このパラメータは UNIX のサービスが
pam_winbind\&.so
および
nss_winbind\&.soモジュールを 使用する時のみ適用される。
.sp
+ 文字は NIS において /etc/group 中で特別な意味を持っているため、このパラメータを + に設定した場合、少なくとも glibc システムにおいては問題が発生する。
.sp
既定値:
\fI\fIwinbind separator\fR\fR\fI = \fR\fI\'\e\'\fR\fI \fR
.sp
例:
\fI\fIwinbind separator\fR\fR\fI = \fR\fI+\fR\fI \fR
.RE

winbind trusted domains only (G)
.\" winbind trusted domains only
.PP
.RS 4
このパラメータは、Samba が管理するドメインの、他の Samba メンバーサーバに対して、NIS、rsync や LDAP で配布されている UNIX アカウントの uid を、プライマリドメインの winbindd ユーザの uid として使用するのを目的として設計された。 これにより、DOMAIN\euser1
というユーザは、 新しい uid が割り当てられる代わりに /etc/passwd の user1 というアカウントに割り当てられる。
.sp
このパラメーターは現在では idmap_nss バックエンドによって不要となっている。 詳細は、\fBidmap_nss\fR(8)
のマニュアルページを参照のこと。
.sp
既定値:
\fI\fIwinbind trusted domains only\fR\fR\fI = \fR\fIno\fR\fI \fR
.RE

winbind use default domain (G)
.\" winbind use default domain
.PP
.RS 4
このパラメータにより、
\fBwinbindd\fR(8)
デーモンが、ドメイン名が 付加されていないユーザ名を扱う方式が指定される。 ドメイン名が付加されていないユーザは、winbindd サーバのドメイン のものとして扱われる。 Windows ユーザにとっては、どちらでもよい話であるが、 SSH, FTP や e\-mail を利用する際に、 UNIX システム本来のやり方に近い方法で 指定することが可能となる。
.sp
既定値:
\fI\fIwinbind use default domain\fR\fR\fI = \fR\fIno\fR\fI \fR
.sp
例:
\fI\fIwinbind use default domain\fR\fR\fI = \fR\fIyes\fR\fI \fR
.RE

wins hook (G)
.\" wins hook
.PP
.RS 4
Samba が WINS サーバとして動いている場合、このオプションによって、 WINS データベースに対して変更が行なわれる度に外部のプログラムが起動されるようになる。このオプションの主な目的は、ダイナミック DNS のような外部の名前解決データベースの動的な更新を実現することである。
.sp
wins hook パラメータは、以下の形式で呼びだされるスクリプト又は実行形式のプログラムを指定する。
.sp
wins_hook operation name nametype ttl IP_list
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
最初の引数は操作の指定であり、 "add", "delete", "refresh" のいずれかを取る。 ほとんどの場合、残りのパラメータで提供される情報が不足している場合、操作は無視される(訳注: sufficient は insufficient の typo と思われる)。 "refresh" は名前がまだ追加されていない時点で呼び出されることがあるので注意。この場合操作は add として扱われる。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
3番目の引数は NetBIOS名のタイプで、2桁の16進数である。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
4番目の引数は 名前の TTL(生存時間) で秒数単位である。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
5番目以降の引数は、その名前で現在登録されているIPアドレスである。リストが空の場合、名前は削除される。
.sp
.RE
BIND の動的なDNS更新プログラムである
nsupdate
を呼び出すスクリプトのサンプルが、 Samba ソースコードの examples ディレクトリに格納されている。
.sp
\fI既定値なし\fR
.RE

wins proxy (G)
.\" wins proxy
.PP
.RS 4
この真偽値パラメータにより、
\fBnmbd\fR(8)
が別のホストの代理としてブロードキャストによる名前問い合わせに応答するかどうかが設定される。古いクライアントの為に、このパラメータを
\fByes\fR
にする必要があるかも知れない。
.sp
既定値:
\fI\fIwins proxy\fR\fR\fI = \fR\fIno\fR\fI \fR
.RE

wins server (G)
.\" wins server
.PP
.RS 4
このパラメータは、
\fBnmbd\fR(8)
が名前を登録する WINS サーバの IP アドレス(もしくはDNS名: IPアドレスが望ましい)を指定する。ネットワークに WINS サーバが存在している場合は、このパラメータを WINS サーバの IP アドレスに設定すること。
.sp
複数サブネットからなるネットワークの場合は、このパラメータで WINS サーバを指定すべきである。
.sp
複数の名前空間が存在している場合、各々の WINS サーバに「タグ」をつけることが可能である。同じタグのついたサーバ内では 1 台の(動作中の)サーバに対してのみ、名前の問い合わせが行なわれる。タグはコロンによって IP アドレスと区切られる。
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBNote\fR
.ps -1
.br
複数のサブネットからなるネットワークで、サブネット越しのブラウジングを正しく機能させたい場合は、 Samba で WINS サーバの設定を行なう必要がある。
.sp .5v
.RE
Samba3\-HOWTO の Network Browsing 章を参照のこと。
.sp
既定値:
\fI\fIwins server\fR\fR\fI = \fR\fI\fR\fI \fR
.sp
例:
\fI\fIwins server\fR\fR\fI = \fR\fImary:192\&.9\&.200\&.1 fred:192\&.168\&.3\&.199 mary:192\&.168\&.2\&.61 # この例では、名前の問い合わせを行なう際に、 192\&.9\&.200\&.1 に最初に問い合わせが行なわれる。応答がなかった場合は、 192\&.168\&.2\&.61 に問い合わせが行なわれる。いずれのサーバからにも名前が存在しなかった場合、 192\&.168\&.3\&.199 に対して問い合わせが行なわれる。\fR\fI \fR
.sp
例:
\fI\fIwins server\fR\fR\fI = \fR\fI192\&.9\&.200\&.1 192\&.168\&.2\&.61\fR\fI \fR
.RE

wins support (G)
.\" wins support
.PP
.RS 4
この真偽値パラメータにより、 Samba の
\fBnmbd\fR(8)
プロセスを WINS サーバして機能させるかどうかが設定される。複数サブネットに及ぶネットワークを構築しており、いずれかの
nmbd
を WINS サーバとして機能させようとしない限り、このパラメータを
\fByes\fR
にしないこと。
.sp
ネットワーク上の複数のマシンで、このパラメータを
\fByes\fR
に設定することが\fI絶対に\fRないように注意すること。
.sp
既定値:
\fI\fIwins support\fR\fR\fI = \fR\fIno\fR\fI \fR
.RE

workgroup ()
.\" workgroup
.PP
.RS 4
これは、クライアントが問い合わせを行なった際に、 サーバが表示されるワークグループを設定する。 このパラメータにより、
\m[blue]\fBsecurity = domain\fR\m[]
の設定におけるドメイン名も設定されることに注意。
.sp
既定値:
\fI\fIworkgroup\fR\fR\fI = \fR\fIWORKGROUP\fR\fI \fR
.sp
例:
\fI\fIworkgroup\fR\fR\fI = \fR\fIMYGROUP\fR\fI \fR
.RE

writable
.\" writable
.PP
.RS 4
このパラメータは右記のパラメータの別名である：writeable\&.
.RE

writeable (S)
.\" writeable
.PP
.RS 4
\m[blue]\fBread only\fR\m[]
の反意語である。
.sp
\fI既定値なし\fR
.RE

write cache size (S)
.\" write cache size
.PP
.RS 4
この数値パラメータを 0 以外に設定すると、 Sambaは oplock された各ファイルに対してメモリキャッシュを作成するようになる (oplock されないファイルに対しては
\fI 行なわれない \fR。 クライアントがディスクへの書き出しを直接要求していない書き込みは全て、 可能な限りこのキャッシュに蓄積される。 キャッシュはキャッシュに適さない位置からの書き込みが行なわれた時か、 ファイルがクライアントによってクローズされた時に書き出される。 データがキャッシュ中に存在していれば、 ファイルからの読み出しにキャッシュが使用される。
.sp
Sambaは、このキャッシュにより、 RAID ディスクに対して適切な書き込みサイズでクライアントからの書き込みを処理できるようになり (例えば、書き込みサイズをRAIDのストライプサイズに合わせる)、 ディスクサブシステムがボトルネックとなっているが、 ユーザ空間のプログラム向けの空きメモリがあるシステムのパフォーマンスを向上させることができる。
.sp
この数値パラメータにより、(oplock を行なったファイル単位での) キャッシュサイズがバイト単位で指定される。
.sp
既定値:
\fI\fIwrite cache size\fR\fR\fI = \fR\fI0\fR\fI \fR
.sp
例:
\fI\fIwrite cache size\fR\fR\fI = \fR\fI262144 # 1 ファイルあたり 256k のキャッシュサイズ\fR\fI \fR
.RE

write list (S)
.\" write list
.PP
.RS 4
これは、サービスに対して読みとりおよび書き込み権が与えられるユーザのリストである。 接続したユーザがこのリストに存在している場合は、 例え
\m[blue]\fBread only\fR\m[]
オプションが no であっても書き込み権が与えられる。このリストには、 @group という形式を用いることでグループ名を含めることもできる。
.sp
Samba 3\&.0 において、このパラメータは
\m[blue]\fBsecurity = share\fR\m[]
では動作しない。これは仕様である。
.sp
既定値:
\fI\fIwrite list\fR\fR\fI = \fR\fI\fR\fI \fR
.sp
例:
\fI\fIwrite list\fR\fR\fI = \fR\fIadmin, root, @staff\fR\fI \fR
.RE

write raw (G)
.\" write raw
.PP
.RS 4
このパラメータは、クライアントからのデータ転送時に、 サーバ側で raw write SMB のサポートを行なうかどうかを制御する。 このパラメータを変更する必要はないだろう。
.sp
既定値:
\fI\fIwrite raw\fR\fR\fI = \fR\fIyes\fR\fI \fR
.RE

wtmp directory (G)
.\" wtmp directory
.PP
.RS 4
このパラメータは、 Sambaが
\-\-with\-utmp
オプションで configure され、コンパイルされた時にのみに有効である。 このパラメータは、Sambaサーバへの接続を記録する wtmp または wtmpx ファイル (UNIXシステムに依存)が存在するディレクトリを指定する。 utmp directory との違いは、ユーザ情報がユーザのログオフ後も記録され続ける点である。
.sp
既定値ではこの値は設定されない。 この場合、システムが利用している utmp ファイルが使われる (Linux の場合、通常
/var/run/wtmp
にある)。
.sp
既定値:
\fI\fIwtmp directory\fR\fR\fI = \fR\fI\fR\fI \fR
.sp
例:
\fI\fIwtmp directory\fR\fR\fI = \fR\fI/var/log/wtmp\fR\fI \fR
.RE
.SH "注意"
.PP
設定ファイルでは、スペースを含むサービス名も利用できるが、 クライアント側のソフトウェアで禁止されているかもしれない。 文字列比較を行なう際にスペースは常に無視されるため、 問題は発生しないはずであるが、可能性は考慮しておく必要がある。
.PP
同様の注意事項として、多くのクライアント、特に DOS クライアントでは、サービス名が最長8文字に制限されている。
\fBsmbd\fR(8)
にはそのような制限はなく、 こうしたクライアントからの接続要求は、サービス名が切り捨てられてしまう ために失敗することになる。このため、サービス名の長さは、最大 8 文字に制限すべきである。
.PP

[homes]
および
[printers]
という特殊セクションにより、 管理者の負担を軽減することができるが、デフォルトの設定の組合せ方に よっては、予期しない設定が行なわれる可能性もある。これらのセクションの 設定を行なう際には、特に注意深く行なうこと。特にスプールディレクトリの パーミッションが適切であることを確認しておくこと。
.SH "バージョン"
.PP
このマニュアルページは Samba 3\&.0 対応のものである。
.SH "関連項目"
.PP

\fBsamba\fR(7),
\fBsmbpasswd\fR(8),
\fBswat\fR(8),
\fBsmbd\fR(8),
\fBnmbd\fR(8),
\fBsmbclient\fR(1),
\fBnmblookup\fR(1),
\fBtestparm\fR(1),
\fBtestprns\fR(1)
.SH "著者"
.PP
オリジナルの Samba ソフトウェアと関連するユーティリティは、 Andrew Tridgell によって作成された。現在 Samba は Samba Team によって、 Linux カーネルの開発と同様のオープンソースプロジェクトとして開発が 行なわれている。
.PP
オリジナルの Samba マニュアルページは Karl Auer によって 作成された。マニュアルページは YODL 形式 (ftp://ftp\&.icce\&.rug\&.nl/pub/unix/
で入手可能な優れた オープンソースソフトウェア) に変換され、Samba 2\&.0 リリースに伴い、 Jeremy Allison によって更新された。Samba 2\&.2 における DocBook 形式への変換は、Gerald Carter によって行なわれた。Samba 3\&.0 における DocBook XML 4\&.2 形式への変換は Alexander Bokovoy によって行われた。
.SH "日本語訳"
.PP
このマニュアルページは Samba 3\&.5\&.3 対応のものである。
.PP
Samba 3\&.0\&.23d 対応の翻訳は、たかはしもとのぶ (monyo@samba\&.gr\&.jp) によって行なわれた。
.PP
Samba 3\&.2\&.4\-3\&.5\&.3 対応の翻訳は、
.PP
たかはしもとのぶ
.PP
堀田 倫英
.PP
太田俊哉 (ribbon@samba\&.gr\&.jp)
.PP
山田 史朗
.PP
武田保真
.PP
海老澤
.sp
.RE
によって行なわれた。
