'\" t
.\"     Title: smb.conf
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.75.2 <http://docbook.sf.net/>
.\"      Date: 06/28/2010
.\"    Manual: ファイルフォーマットと変換
.\"    Source: Samba 3.4
.\"  Language: English
.\"
.TH "SMB\&.CONF" "5" "06/28/2010" "Samba 3\&.4" "ファイルフォーマットと変換"
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
smb.conf \- Samba の設定ファイル
.SH "概要"
.PP
smb\&.conf
ファイルは Samba システムの設定ファイルである。smb\&.conf
には、Samba システムの各プログラムが実行時に参照する設定情報が記述される。
smb\&.conf
ファイルは、\fBswat\fR(8)
プログラムによって設定、 管理されるように設計されている。 以下参照目的で、ファイルの形式と設定可能なパラメータに関して網羅的に記述する。
.SH "ファイルの形式"
.PP
ファイルはセクションとパラメータから構成される。セクションは、 大括弧(\(lq[\(rq
と
\(lq]\(rq) で囲まれたセクション名で始まり、次のセクションが始まるまで 続く。セクション内には以下の形式でパラメータが記述される:
.sp
.if n \{\
.RS 4
.\}
.nf
\fIパラメータ名（パラメータ）\fR = \fIパラメータ値（値）\fR
.fi
.if n \{\
.RE
.\}
.PP
ファイルは行を基本単位とし、改行で終了する各行は、コメント、 セクション名、パラメータのいずれかを表す。
.PP
セクション名およびパラメータ名は大文字と小文字を区別しない。
.PP
パラメータを示す行では、最初の 「=」 文字に重要な意味がある。 最初の 「=」 文字の前後の空白文字は破棄される。 セクション名およびパラメータ名の先頭、 途中、末尾にある空白文字は 無視される。パラメータ値の先頭と末尾にある空白文字も無視される。 ただし、パラメータ値の途中にある空白文字はそのまま意味を持つ。
.PP
セミコロン (\(lq:\(rq)、シャープ (\(lq#\(rq) で始まる行や、空白のみの行は 無視される。
.PP
\(lq\e\(rq
文字で終わる行は、UNIX の慣習通り次の行へ継続する。
.PP
「=」文字に続くパラメータ値には、文字列 (引用符で囲む必要はない)、または真偽値を表す、yes/no、0/1、true/false のいずれかを記述する。真偽値の場合、大文字と小文字は同じ意味だが、 記述されたとおりの文字列が保存される。 create mask など、幾つかのパラメータ値は数値となる。
.SH "セクションの説明"
.PP
設定ファイル中の ([global] セクションを除く) 各セクションでは、 共有リソース (単に\(lq共有\(rqとも呼ぶ (訳注: 「サービス」とも呼ばれる)) の設定が行なわれる。 セクション名は共有リソース名となり、 セクション内のパラメータは共有の設定に利用される。
.PP
[global]、[homes]、[printers] という 3 つの特殊なセクションに ついては、\fI特殊なセクション\fR
で説明する。 以下の説明は、通常のセクションについてのものである。
.PP
共有の設定としては、大きくアクセスを許可するディレクトリの設定と それを利用するユーザに対するアクセス許可の設定とがある。 その他いくつかの補助的なオプションの指定も可能である。
.PP
セクションは、ファイル共有サービス (クライアントからファイルシステムの延長として利用される) とプリントサービス (クライアントからサーバ上で動作している 印刷サービスにアクセスするために利用される) のいずれかに分類される。
.PP
セクションは、パスワードなしでアクセスできる
\fIゲスト\fR
サービスとして構成することもできる。 この場合、UNIX 側で指定された\fIゲストアカウント\fRの権限でアクセスが 行なわれる。
.PP
ゲストサービス以外のセクションにアクセスするにはパスワードが 必要である。通常クライアントからはユーザ名も提供されるが、 年代物のクライアントはパスワードのみでユーザ名を提供しないため、
\(lquser =\(rq
パラメータで指定したユーザのリストを用いてパスワードの検証を 行なうことも可能である。Windows 95/98/Me/NT/2000 のような最近の クライアントでは、このパラメータは不要である。
.PP
Samba より与えられたアクセス権は、システムより UNIX ユーザ (またはゲストユーザ) に与えられたアクセス権によって制限されることに注意して欲しい。 Samba はシステムが許可する以上のアクセス権を許可することはできない。
.PP
以下の簡単なセクションは、ファイル共有を定義するものである。 ユーザは
/home/bar
に対して書き込みができる。 共有は、foo
という共有名でアクセス可能である:
.sp
.if n \{\
.RS 4
.\}
.nf
	\fI[foo]\fR
	\m[blue]\fBpath = /home/bar\fR\m[]
	\m[blue]\fBread only = no\fR\m[]
.fi
.if n \{\
.RE
.\}
.PP
以下の簡単なセクションは印刷サービスを定義するものである。 共有は読み取りのみであるが、印刷可能である。これは、 スプールファイルのオープン、書き込み、クローズという作業についてのみ書き込みが許可されるということである。\fIguest ok\fR
パラメータは、(別途定義された) デフォルトのゲストユーザとしてアクセスが許可されていることを意味する:
.sp
.if n \{\
.RS 4
.\}
.nf
	\fI[aprinter]\fR
	\m[blue]\fBpath = /usr/spool/public\fR\m[]
	\m[blue]\fBread only = yes\fR\m[]
	\m[blue]\fBprintable = yes\fR\m[]
	\m[blue]\fBguest ok = yes\fR\m[]
.fi
.if n \{\
.RE
.\}
.sp
.SH "特殊なセクション"
.SS "[global] セクション"
.PP
このセクション中のパラメータは、サーバ全体に対して、 もしくは各セクションで項目が定義していないときの既定値として 適用される。詳細な情報はパラメータ(PARAMETERS)の節を参照のこと。
.SS "[homes] セクション"
.PP
homes セクションが設定ファイル中にあると、 接続してきたユーザのホームディレクトリを共有するサービスが 必要時にサーバによって作成されるようになる。
.PP
接続の要求が行なわれると、存在するセクションが検索される。 要求に合致するセクションが見つかった場合はそのセクションが 利用される。見つからなかった場合は、 要求されたセクション名をユーザ名とみなしてローカルのパスワードファイルが検索される。 ファイル中に名前が存在して、パスワードが適切だった場合、 [homes] セクションの設定を引き継ぐ形で共有が作成される。
.PP
新しく作成される共有に対しては、 幾つかの変更が行なわれる:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
共有名は、homes からユーザ名に変更される。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
path パラメータが設定されていなかった場合、 ディレクトリのパスはユーザのホームディレクトリに設定される。
.sp
.RE
.PP
\fIpath = \fR
行を [homes] セクションに記述した場合、"%S" マクロを用いると便利になる 場合があるかも知れない。以下に一例を示す:
.PP
\fBpath = /data/pchome/%S\fR
.PP
これは、UNIX からのアクセスと PC からのアクセスとでホームディレクトリが異なる場合に便利である。
.PP
これは多数のクライアントに対するホームディレクトリの 提供を最小の手間で素早く簡単に実現する方法である。
.PP
要求されたセクション名が
\(lqhomes\(rq
の場合にも同様の処理が行われるが、共有名が要求したユーザの 名前に変更されることはない。 [homes] セクションを使用する 方法は、複数のユーザがクライアント PC を共有する場合に 便利である。
.PP
[homes] セクションでは、通常のサービスで指定可能な すべてのパラメータを指定できるが、幾つかのものは他の セクションと少し違った意味になる。以下は典型的な [homes] セクションの例である:
.sp
.if n \{\
.RS 4
.\}
.nf
\fI[homes]\fR
\m[blue]\fBread only = no\fR\m[]
.fi
.if n \{\
.RE
.\}
.PP
重要な点として、[homes] セクションでゲストアクセスを許可した場合、 全てのホームディレクトリが全てのクライアントから
\fIパスワードなしで\fR
アクセス可能になるという点が挙げられる。 ほとんどあり得ないと思うが、もしこの設定を実際に行なうのであれば、\fI読み取り専用\fR
アクセスの設定にしておくことが好ましいであろう。
.PP
自動的に作成されるホームディレクトリの
\fIbrowseable\fR
パラメータの値は、[homes] セクションの browseable パラメータからではなく、[global] セクションの browseable パラメータより継承される。これは、 [homes] セクションで
\fIbrowseable = no\fR
を指定して [homes] 共有を不可視にしても、自動的に作成されるホームディレクトリを表示させるようにするための仕様である。
.SS "[printers] セクション"
.PP
このセクションは、プリンタ用の [homes] セクションに 相当する。
.PP
[printers] セクションが設定されていると、ユーザは、 ローカルホストの printcap ファイルで設定されている各プリンタに接続することが可能となる。
.PP
接続の要求が行なわれると、存在するセクションが検索される。 要求に合致するセクションが見つかった場合はそのセクションが利用される。 見つからなかった場合、[homes] セクションがあれば前述した処理が行なわれる。 それでも要求が解決できない場合は、 要求されたセクション名をプリンタ名とみなし、 適切な pritcap ファイルが検索され、 要求されたセクション名をプリンタ共有名とみなすかどうかの 確認が行なわれる。ファイル中に名前が存在した場合は、 [printers] セクションの設定を引き継ぐ形でプリンタ共有が 作成される。
.PP
新しく作成される共有に対しては、 幾つかの変更が行なわれる:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
共有名には、実際のプリンタ名が設定される。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
プリンタ名が設定されていない場合、 プリンタ名として実際のプリンタ名が設定される。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
共有がゲストアクセスを許可しておらず、 username パラメータも指定されていない場合、username に実際のプリンタ名が設定される。
.sp
.RE
.PP
[printers] サービスは、必ず printable にすること。 それ以外の設定を行なうと、サーバが設定ファイルの読み取りを 拒否してしまう。
.PP
通常指定されるパスは、sticky ビットが設定され、 誰でも書き込み可能になっているスプールディレクトリである。 典型的な [printers] のエントリは次のようになる:
.sp
.if n \{\
.RS 4
.\}
.nf
\fI[printers]\fR
\m[blue]\fBpath = /usr/spool/public\fR\m[]
\m[blue]\fBguest ok = yes\fR\m[]
\m[blue]\fBprintable = yes\fR\m[]
.fi
.if n \{\
.RE
.\}
.PP
printcap ファイル中で定義されているすべてのプリンタの エイリアス(別名)は、プリンタ名として認識される。 印刷システムが printcap ファイルのような機構を使用して いないのであれば、仮の printcap ファイルを設定する必要がある。 このファイルは以下のような形式の行で構成される:
.sp
.if n \{\
.RS 4
.\}
.nf
alias|alias|alias|alias\&.\&.\&.    
.fi
.if n \{\
.RE
.\}
.PP
各エイリアスは、印刷システムが処理可能なプリンタ名で ある必要がある。[global] セクションで、別のファイルを printcap ファイルとして指定することで、仮想的な printcap ファイル中にある名前のみがサーバに認識される。 もちろんこのファイル中には任意のエイリアスを記述することが 可能である。このテクニックは、ローカルプリンタの一部のみに アクセスを制限する機能を簡単に実現するためにも利用できる。
.PP
なお、エイリアスとは printcap ファイル中の各レコードの 最初のエントリに続く各要素をさす。 各レコードは改行コードで区切られ、各要素は (複数個存在する場合) 縦棒 (|) で区切られる。
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBNote\fR
.ps -1
.br
.PP
lpstat コマンドによりシステムで定義されている プリンタの一覧を取得可能な SYSV 系のシステムでは、
printcap name = lpstat
とすることで、 プリンタの一覧を取得することが可能である。 詳細は、printcap name
オプションを参照のこと。
.sp .5v
.RE
.SH "ユーザ定義共有"
.PP
Samba 3\&.0\&.23 より、root 以外のユーザが共有の追加、修正、削除を行なうことを可能とする機能が追加された。 この機能を
\fIユーザ定義共有(usershares)\fR
と呼び、 smb\&.conf の

セクションで定義される一連のパラメータによって制御される。 関連するパラメータを以下に示す :
.PP
usershare allow guests
.RS 4
ユーザ定義共有でゲストアクセスを許可するかどうかを制御する。
.RE
.PP
usershare max shares
.RS 4
作成を許可するユーザ定義共有の最大数を制御する。
.RE
.PP
usershare owner only
.RS 4
有効にすると、ユーザが所有しているディレクトリのみが共有可能となる。
.RE
.PP
usershare path
.RS 4
ユーザ定義共有を作成可能なディレクトリを指定する。 実際にユーザ定義共有を作成可能かどうかは、ファイルシステム上のディレクトリのパーミッションに依存する。
.RE
.PP
usershare prefix allow list
.RS 4
共有を許可するディレクトリの絶対パス名をコンマで区切って列挙する。 ここで指定されたパス名から始まるディレクトリのみが共有を許可される。
.RE
.PP
usershare prefix deny list
.RS 4
共有を拒否するディレクトリの絶対パス名をコンマで区切って列挙する。 ここで指定されたパス名から始まるディレクトリは共有を拒否される。
.RE
.PP
usershare template share
.RS 4
新しいユーザ定義共有を作成する際のテンプレートとなる既存の共有を指定する。 ユーザ定義共有の定義時に指定されなかったすべての共有に関するパラメータは、この共有のものが用いられる。
.RE
.PP
UNIX グループ
foo
のメンバにユーザ定義共有の作成を許可したい場合は、 共有の定義ファイルを格納するディレクトリを以下のように作成する:
.PP
root 権限で以下を実施:
.sp
.if n \{\
.RS 4
.\}
.nf
mkdir /usr/local/samba/lib/usershares
chgrp foo /usr/local/samba/lib/usershares
chmod 1770 /usr/local/samba/lib/usershares
.fi
.if n \{\
.RE
.\}
.PP
ついで、以下のパラメータ
.sp
.if n \{\
.RS 4
.\}
.nf
	\m[blue]\fBusershare path = /usr/local/samba/lib/usershares\fR\m[]
	\m[blue]\fBusershare max shares = 10\fR\m[] # (もしくは必要な共有数)
.fi
.if n \{\
.RE
.\}
.PP
を
smb\&.confの global セクションに追加。 これにより foo グループのメンバは、以下のコマンドでユーザ定義共有を作成することが可能となる。
.PP
net usershare add sharename path [comment] [acl] [guest_ok=[y|n]]
.RS 4
これにより、ユーザ定義共有を作成もしくは修正(上書き)する。
.RE
.PP
net usershare delete sharename
.RS 4
ユーザ定義共有を削除する。
.RE
.PP
net usershare list wildcard\-sharename
.RS 4
ユーザ定義共有を一覧する。
.RE
.PP
net usershare info wildcard\-sharename
.RS 4
ユーザ定義共有の情報を表示する。
.RE
.SH "パラメータ"
.PP
パラメータはセクションの属性を定義するものである。
.PP
幾つかのパラメータ (\fIsecurity\fR
など) は、 [global] セクションで指定する。また幾つかのパラメータ (\fIcreate mask\fR
など) は、すべてのセクションで 利用可能である。それ以外のパラメータは、通常のセクションでのみ 利用できる。以下の説明では、[homes] と [printers] セクションを "通常の" セクションとして扱う。(\fIG\fR) がついたパラメータは、 [global] セクションでのみ指定できる。(\fIS\fR) がついたパラメータは、個々のサービスを表すセクションで指定できる。 ただし、(\fIS\fR) がついたパラメータは、[global] セクション中で指定することも可能である。この場合、それらはすべての サービスに対するデフォルト値として機能する。
.PP
パラメータはアルファベット順に説明されている。 最良の順序とはいえないが、少なくとも目的のパラメータを見つけることは できるだろう。同義語がある場合は、主として用いるべき表記の部分で 説明が行なわれ、他はその表記への参照になっている。
.SH "変数による置換"
.PP
設定ファイルに記述可能な文字列の多くには、変数による置換を利用できる。 たとえば、\(lqpath = /tmp/%u\(rq
は、john というユーザ名でユーザが 接続すると、\(lqpath = /tmp/john\(rq
として解釈される。
.PP
これら置換の詳細については、各々のパラメータの説明にて 解説するが、どのパラメータに対しても適用される共通の変数置換もいくつか 存在する。それらを以下に記載する:
.PP
%U
.RS 4
セッションのユーザ名 (クライアントが接続時に 送信したものであるが、実際に接続したユーザ名と同じであるとは 限らない)。
.RE
.PP
%G
.RS 4
%U のプライマリグループ。
.RE
.PP
%h
.RS 4
Samba が動作しているマシンの インターネットホスト名。
.RE
.PP
%m
.RS 4
クライアントマシンの NetBIOS 名 (とても便利)。
.sp
Samba がポート 445 で待機している場合、クライアントがこの情報を送信しないため、この変数は利用できない。 Samba がドメインコントローラであるドメインで include パラメータにおいてこの変数を用いている場合などは、 [global] セクションで
\fIsmb ports = 139\fR
の設定を行なうこと。 これにより Samba はポート 445 で待機しなくなり、Samba 2\&.X で実現していた include 機能が利用できる。
.RE
.PP
%L
.RS 4
サーバの NetBIOS 名。これを用いることで、 クライアントから呼ばれた名前に応じて設定を変更することが 可能となる。これによりサーバは
\(lq二つの顔\(rq
を持つことができる。
.RE
.PP
%M
.RS 4
クライアントマシンのインターネットホスト名。
.RE
.PP
%R
.RS 4
プロトコルのネゴシエーションを経て選択された プロトコルレベル。これは CORE、COREPLUS、LANMAN1、LANMAN2、NT1 のいずれかの値をとる。
.RE
.PP
%d
.RS 4
サーバプロセスのプロセス ID。
.RE
.PP
%a
.RS 4
リモートマシンのアーキテクチャ。 現在認識できるのは Samba (\fBSamba\fR)、 Linux の CIFS ファイルシステム (\fBCIFSFS\fR)、 OS/2 (\fBOS2\fR)、 Windows for Workgroups (\fBWfWg\fR)、 Windows 9x/Me (\fBWin95\fR)、 Windows NT (\fBWinNT\fR)、 Windows 2000 (\fBWin2K\fR)、 Windows XP (\fBWinXP\fR)、 Windows XP 64\-bit(\fBWinXP64\fR), 2003R2 (\fBWin2K3\fR)を含むWindows Server 2003 (\fBWin2K3\fR)と, Windows Vista (\fBVista\fR) である。 それ以外のものは
\(lqUNKNOWN\(rq
となる。
.RE
.PP
%I
.RS 4
クライアントマシンの IP アドレス。
.RE
.PP
%i
.RS 4
クライアントが接続してきたサーバの IP アドレス。
.RE
.PP
%T
.RS 4
現在の日付と時間。
.RE
.PP
%D
.RS 4
現ユーザが所属するドメインかワークグループ名。
.RE
.PP
%w
.RS 4
Winbind のセパレータ
.RE
.PP
%$(\fIenvvar\fR)
.RS 4
環境変数\fIenvvar\fRの値。
.RE
.PP
以下の置換マクロは (すでに接続が確立されている場合に) いくつかの 設定オプションに対して有効なものである:
.PP
%S
.RS 4
現在のサービス名 (存在する場合)。
.RE
.PP
%P
.RS 4
現在のサービスのトップディレクトリ (存在する場合)。
.RE
.PP
%u
.RS 4
現在のサービスのユーザ名 (存在する場合)。
.RE
.PP
%g
.RS 4
%u のプライマリグループ。
.RE
.PP
%H
.RS 4
%u で指定されたユーザのホームディレクトリ。
.RE
.PP
%N
.RS 4
NIS のホームディレクトリサーバの名前。 これは NIS の auto\&.map エントリから取得される。Samba が
\fI\-\-with\-automount\fR
オプションをつけて コンパイルされていない場合、このオプションは %L と同じになる。
.RE
.PP
%p
.RS 4
NIS auto\&.map エントリから取得された サーバの ホームディレクトリのパス。NIS auto\&.map エントリは
%N:%p
のように分割されている。
.RE
.PP
これらの置換操作とその他の
smb\&.conf
のパラメータを組み合わせると、非常に凝った動作を設定できる。
.SH "名前の短縮(NAME MANGLING)"
.PP
Samba は、DOS や Windows クライアントが 8\&.3 形式に準拠しない 名前のファイルを扱うことができるように
\(lq名前の短縮\(rq
機能を提供している。この機能により、8\&.3 形式のファイル名についても 文字の case (大文字、小文字) を調整可能である。
.PP
短縮時の動作を制御するパラメータが幾つか存在しており、 それらは個々に解説を行なわず、ここでまとめて説明を行なう。 デフォルト値は testparm コマンドの出力を参照のこと。
.PP
以下のオプションは、すべて共有毎に設定できる (もちろん全体に対しても設定できる)。
.PP
オプションは以下の通りである:
.PP
case sensitive = yes/no/auto
.RS 4
ファイル名の case を識別するかどうかを制御する。 識別を行なわない場合、Samba は指定された名前に合致する ファイル名の有無を検索することが必要になる。デフォルトは
\fIauto\fR
であり、ファイル名の case を識別するクライアント(現在のところ Linux CIFSVFS や Samba 3\&.0\&.5 以降の smbclient) に対しては、case を識別する(UNIX の case を識別する挙動に準拠する) ファイルシステム上の Samba サーバにアクセスしているものとして通知する。 Windows および DOS システムでは case を識別するファイル名はサポートされておらず、このパラメータを auto に設定した場合、no の設定で動作する。 デフォルトは
\fIauto\fR
である。
.RE
.PP
default case = upper/lower
.RS 4
新しく作成されるファイル(現在ファイルシステム上に存在していないファイル)のファイル名のデフォルトの case を制御する。 デフォルトは
\fIlower\fR
である。 重要:
\m[blue]\fBcase sensitive = yes\fR\m[]、
\m[blue]\fBpreserve case = No\fR\m[]、
\m[blue]\fBshort preserve case = No\fR\m[]
の場合、このオプションにより、新しく作られるファイル名だけではなく、クライアントから渡される
\fIすべての\fR
ファイル名の case が変更されることに注意。 非常に多くのファイルを格納するディレクトリの最適化作業の一貫として、この設定変更が必要となる。
.RE
.PP
preserve case = yes/no
.RS 4
新しく作成されるファイル(現在ファイルシステム上に存在していないファイル)のファイル名について、クライアントから 渡された case で作成するか、デフォルトの case で作成するかを制御する。 デフォルトは
\fIyes\fRである。
.RE
.PP
short preserve case = yes/no
.RS 4
すべて大文字で適切な長さの 8\&.3 形式に 準拠した新しく作成されるファイル(現在ファイルシステム上に存在していないファイル)のファイル名について、大文字で作成するか、
デフォルト
の case で作成するかを制御する。 このオプションにより、preserve case = yes
で長いファイル名が case を保持する設定の時であっても、 短いファイル名は小文字で作成するといったことが可能になる。 デフォルトは
\fIyes\fR
である。
.RE
.PP
Samba 3\&.0 のデフォルトは、Windows NT のサーバと同様に動作する。 すなわち、case を識別しないが case は保持する。 ただし、大量のファイルが存在するディレクトリにおいては、case 関連のパラメータを "case sensitive = yes"、"case preserve = no"、"short preserve case = no" に設定するとよいであろう。 これにより、"default case" パラメータが有効になり、クライアントから送信されるすべてのファイル名が変更される。 (訳注: 上記設定は、case sensitive = yes によりファイル名の検索を抑止することで、パフォーマンスを向上させようとする意図だと思われる)
.SH "ユーザ名とパスワード認証についての注意"
.PP
ユーザがサービスに接続するための方法は幾つかある。サーバは、 以下のステップを踏みサービスに対して接続を許可するかどうかを確認する。 すべてのステップが失敗した場合、接続要求は拒否される。 いずれかのステップで成功した場合、それ以降のステップは行なわれない。
.PP
サービスが
\(lqguest only = yes\(rq
となっており、 サーバが共有レベルのセキュリティ (\(lqsecurity = share\(rq) で構成されている場合、ステップ 1 から 5 は省かれる。
.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}
クライアントからユーザ名とパスワードが 提供されており、それが UNIX システムのパスワード機構によって 認証された場合、そのユーザ名を使った接続が行なわれる。この ステップは
\e\eserver\eservice%\fIusername\fR
形式でユーザ名が提供された場合にも行なわれることに注意。
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}
クライアントからシステムに登録されている ユーザ名が提供された場合、そのユーザ名に対する適切な パスワードが提供されれば、接続が許可される。
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 3.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  3." 4.2
.\}
クライアントの NetBIOS 名および以前に使われた ユーザ名について提供されたパスワードとの確認が行なわれ、 合致すれば、対応するユーザ名を使った接続が許可される。
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 4.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  4." 4.2
.\}
クライアントが既にユーザ名とパスワードを 提供してサーバに認証されており、その際の認証トークンが 提示された場合、そのユーザ名が使われる。
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 5.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  5." 4.2
.\}
user =
フィールドが
smb\&.conf
ファイルで 該当サービスに対して設定されており、クライアントから提供された パスワードが (UNIX システムのパスワード認証により)
user =
行に記述されたユーザ名のいずれかのものと 合致した場合、接続は、user =
行で設定された ユーザ名で行なわれる。user =
リスト中のユーザ名の 中に
@
ではじまるものがあった場合、それはその名前の グループに所属するユーザ名のリストに展開される。
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 6.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  6." 4.2
.\}
サービスがゲストサービスの場合、 提供されたパスワードがなんであっても、そのサービスの
guest account =
で指定されたユーザ名で接続が 行なわれる。
.RE
.SH "レジストリベースの設定方法"
.PP
Sambaのバージョン 3\&.2\&.0 から、レジストリ中にSambaの設定を 格納する機能が有効になった。Sambaの設定は、レジストリキー
\fIHKLM\eSoftware\eSamba\esmbconf\fR中に格納される。 レジストリベースの設定は2つのレベルがある。
.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}
レジストリに共有の定義を格納する。 これは、\fIsmb\&.conf\fR中のグローバル パラメータ\fIregistry shares\fR
を\(lqyes\(rqに設定することで利用可能になる。
.sp
レジストリ定義の共有はスタートアップ時にはロードされ ないが、\fIsmbd\fRによって、実行時に動的に ロードされる。\fIsmb\&.conf\fR中の共有定義 はレジストリ中での同じ名前の共有定義に優先する。
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}
グローバルな\fIsmb\&.conf\fR
オプションをレジストリに格納する。これは,以下の2つの異なった 方法で有効にできる:
.sp
1番めは、\fIsmb\&.conf\fR中の [global]セクション中の\m[blue]\fBconfig backend = registry\fR\m[]を設定することで、レジストリのみの 設定を有効にできる。これは,この時点まで読み込んだ設定ファイ ルの内容をすべてリセットし、レジストリからグローバルセク ションの内容を読む。これは、レジストリベースの設定方法を使う 時の推奨方法である。
.sp
2番目は\fIsmb\&.conf\fRの[global] セクション中の、特別に新しい意味を持つ、\m[blue]\fBinclude = registry\fR\m[]パラメータによって有効にできる 混成設定方法である。これは,テキストファイルをインクルード するのと同じような優先度で、レジストリからグローバルオプ ションを読む。これは,初期設定がレジストリにアクセスするのに 必要な場合に特に有益である。
.sp
グローバルレジストリオプションの有効化は、レジストリ ベースの共有が有効になることで自動的に行われる。そのため、 レジストリのみの場合、共有は要求時にのみロードされる。
.RE
.sp
.RE
.PP
レジストリベースの設定に伴うシステムの破壊を限定的にするために、 レジストリでの設定中では、\fIlock directory\fRと
\fIconfig backend\fRの使用は無効化 されることに注意。 特に、レジストリでの設定中に、\fIlock directory\fRを 変更してしまい、それがいったん有効化されてしまうと、 デーモンからはそれの設定自体が見えなくなる、壊れた設定を作成することになる。
.PP
レジストリベースの設定は、キー\fIHKLM\eSoftware\eSamba\esmbconf\fRを
\fIregedit\fRや\fInet (rpc) registry\fRを使ってアクセスすることもできる。 利便性のため、\fBnet\fR(8)ユーティリティ の\fIconf\fRサブコマンドが、レジストリ ベースの設定をローカルに読み書きするための特別なインタフェース として提供されている。すなわち、データベースファイルに直接 アクセスし、サーバを迂回できる。
.SH "各パラメータの説明"
<xi:include></xi:include>.SH "注意"
.PP
設定ファイルでは、スペースを含むサービス名も利用できるが、 クライアント側のソフトウェアで禁止されているかもしれない。 文字列比較を行なう際にスペースは常に無視されるため、 問題は発生しないはずであるが、可能性は考慮しておく必要がある。
.PP
同様の注意事項として、多くのクライアント、特に DOS クライアントでは、サービス名が最長8文字に制限されている。
\fBsmbd\fR(8)
にはそのような制限はなく、 こうしたクライアントからの接続要求は、サービス名が切り捨てられてしまう ために失敗することになる。このため、サービス名の長さは、最大 8 文字に制限すべきである。
.PP

[homes]
および
[printers]
という特殊セクションにより、 管理者の負担を軽減することができるが、デフォルトの設定の組合せ方に よっては、予期しない設定が行なわれる可能性もある。これらのセクションの 設定を行なう際には、特に注意深く行なうこと。特にスプールディレクトリの パーミッションが適切であることを確認しておくこと。
.SH "バージョン"
.PP
このマニュアルページは Samba 3\&.0 対応のものである。
.SH "関連項目"
.PP

\fBsamba\fR(7),
\fBsmbpasswd\fR(8),
\fBswat\fR(8),
\fBsmbd\fR(8),
\fBnmbd\fR(8),
\fBsmbclient\fR(1),
\fBnmblookup\fR(1),
\fBtestparm\fR(1),
\fBtestprns\fR(1)
.SH "著者"
.PP
オリジナルの Samba ソフトウェアと関連するユーティリティは、 Andrew Tridgell によって作成された。現在 Samba は Samba Team によって、 Linux カーネルの開発と同様のオープンソースプロジェクトとして開発が 行なわれている。
.PP
オリジナルの Samba マニュアルページは Karl Auer によって 作成された。マニュアルページは YODL 形式 (ftp://ftp\&.icce\&.rug\&.nl/pub/unix/
で入手可能な優れた オープンソースソフトウェア) に変換され、Samba 2\&.0 リリースに伴い、 Jeremy Allison によって更新された。Samba 2\&.2 における DocBook 形式への変換は、Gerald Carter によって行なわれた。Samba 3\&.0 における DocBook XML 4\&.2 形式への変換は Alexander Bokovoy によって行われた。
.SH "日本語訳"
.PP
このマニュアルページは Samba 3\&.5\&.4 対応のものである。
.PP
Samba 3\&.0\&.23d 対応の翻訳は、たかはしもとのぶ (monyo@samba\&.gr\&.jp) によって行なわれた。
.PP
Samba 3\&.2\&.4\-3\&.5\&.4 対応の翻訳は、
.PP
たかはしもとのぶ
.PP
堀田 倫英
.PP
太田俊哉 (ribbon@samba\&.gr\&.jp)
.PP
山田 史朗
.PP
武田保真
.PP
海老澤
.sp
.RE
によって行なわれた。
