<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE chapter PUBLIC "-//Samba-Team//DTD DocBook V4.2-Based Variant V1.0//EN" "http://www.samba.org/samba/DTD/samba-doc">
<chapter id="rpc-plugin">
<chapterinfo>
	<author>
		<firstname>Anthony</firstname><surname>Liguori</surname>
		<affiliation>
			<orgname>IBM</orgname>
			<address><email>aliguor@us.ibm.com</email></address>
		</affiliation>
	</author>
	<author>
		<firstname>Jelmer</firstname><surname>Vernooij</surname>
		<affiliation>
			<orgname>Samba Team</orgname>
			<address><email>jelmer@samba.org</email></address>
		</affiliation>
	</author>
	<pubdate>January 2003</pubdate>
</chapterinfo>

<title>RPC着脱可能なモジュール</title>

<sect1>
<title>概要</title>

<para>
この文書は、どのようにSamba3.0用の新しいRPC着脱可能なモジュール機能を使えるように
するかについて説明している。このアーキテクチャは、メインのCVSブランチから分かれて
作業されることをRPCパイプについて許可しているSambaの維持管理性を向上させることを
付加する。RPMアーキテクチャはまた、サードパーティベンダに対して、プラグインを通して、
Sambaに対して機能を追加する事も認めている。
</para>

</sect1>

<sect1>
<title>General Overview</title>

<para>
When an RPC call is sent to smbd, smbd tries to load a shared library by the
name <filename>librpc_&lt;pipename&gt;.so</filename> to handle the call if
it doesn't know how to handle the call internally.  For instance, LSA calls
are handled by <filename>librpc_lsass.so</filename>..
These shared libraries should be located in the <filename>&lt;sambaroot&gt;/lib/rpc</filename>.  smbd then attempts to call the init_module function within
the shared library. Check the chapter on modules for more information.
</para>

<para>
In the init_module function, the library should call 
rpc_pipe_register_commands().  This function takes the following arguments:
</para>

<para><programlisting>
NTSTATUS rpc_pipe_register_commands(int version, const char *clnt, const char *srv,
                               const struct api_struct *cmds, int size);
</programlisting></para>

<variablelist>

<varlistentry><term>version</term>
<listitem><para>Version number of the RPC interface. Use the define <emphasis>SMB_RPC_INTERFACE_VERSION</emphasis> for this 
argument.</para></listitem>
</varlistentry>
		
<varlistentry><term>clnt</term>
<listitem><para>the Client name of the named pipe</para></listitem>
</varlistentry>

<varlistentry><term>srv</term>
<listitem><para>the Server name of the named pipe</para></listitem>
</varlistentry>

<varlistentry><term>cmds</term>
<listitem><para>a list of api_structs that map RPC ordinal numbers to function calls</para></listitem>
</varlistentry>

<varlistentry><term>size</term>
<listitem><para>the number of api_structs contained in cmds</para></listitem>
</varlistentry>

</variablelist>

<para>
See rpc_server/srv_reg.c and rpc_server/srv_reg_nt.c for a small example of
how to use this library.
</para>

</sect1>
</chapter>
